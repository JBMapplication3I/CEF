<#@ template language="C#"
#><#@ assembly name="System"
#><#@ assembly name="System.Core"
#><#@ assembly name="System.ComponentModel.DataAnnotations"
#><#@ assembly name="$(UserProfile)\.nuget\packages\entityframework\6.4.4\lib\net45\EntityFramework.dll"
#><#@ assembly name="$(SolutionDir)01.DataAccessLayer\01.Clarity.Ecommerce.DataModel\bin\Debug\net472\Clarity.Ecommerce.DataModel.dll"
#><#@ import namespace="System.Collections.Generic"
#><#@ import namespace="System.ComponentModel.DataAnnotations"
#><#@ import namespace="System.ComponentModel.DataAnnotations.Schema"
#><#@ import namespace="System.Data.Entity"
#><#@ import namespace="System.Linq"
#><#@ import namespace="System.Reflection"
#><#@ import namespace="System.Runtime.InteropServices"
#><#@ import namespace="System.Text"
#><#@ import namespace="Clarity.Ecommerce.DataModel"
#><#
var tableClasses = AppDomain.CurrentDomain.GetAssemblies()
    .Where(x => x.FullName.StartsWith("Clarity.Ecommerce.DataModel"))
    .SelectMany(x => x.GetTypes().Where(t => t.CustomAttributes.Any(at => at.AttributeType == typeof(SqlSchemaAttribute))))
    .OrderBy(x => ((SqlSchemaAttribute)Attribute.GetCustomAttribute(x, typeof(SqlSchemaAttribute))).Both)
    .GroupBy(x => ((SqlSchemaAttribute)Attribute.GetCustomAttribute(x, typeof(SqlSchemaAttribute))).Schema);
#>// <autogenerated>
// <copyright file="DataModelTestingRegistry.cs" company="clarity-ventures.com">
// Copyright (c) 2016-<#= DateTime.Today.Year #> clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the DataModel Testing StructureMap 4 Registry to associate the interfaces with their concretes
// which are generated as Mocks.</summary>
// <remarks>This file was auto-generated by DataModelTestingRegistry.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, UnusedMember.Global
#nullable enable
#pragma warning disable 618
namespace Clarity.Ecommerce.DataModel
{
    using Interfaces.DataModel;
    using Moq;
#if NET5_0_OR_GREATER
    using Lamar;
#else
    using StructureMap;
#endif

#if NET5_0_OR_GREATER
    internal partial class DataModelTestingRegistry : ServiceRegistry
#else
    internal partial class DataModelTestingRegistry : Registry
#endif
    {
        internal DataModelTestingRegistry(Ecommerce.Testing.MockingSetup mockingSetup)
        {
<#  foreach (var group in tableClasses) { #>
            CreateRegistryFor<#= group.Key #>(mockingSetup);
<#  } #>
        }
    }
}
