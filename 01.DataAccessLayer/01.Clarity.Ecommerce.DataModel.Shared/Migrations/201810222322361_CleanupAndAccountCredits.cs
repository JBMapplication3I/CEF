// <copyright file="201810222322361_CleanupAndAccountCredits.cs" company="clarity-ventures.com">
// Copyright (c) 2019-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the 201810222322361 cleanup and account credits class</summary>
namespace Clarity.Ecommerce.DataModel.Migrations
{
    using System.Data.Entity.Migrations;

    public partial class CleanupAndAccountCredits : DbMigration
    {
        public override void Up()
        {
            DropForeignKey("Stores.Store", "TypeID", "Stores.StoreType");
            DropForeignKey("Contacts.Contact", "TypeID", "Contacts.ContactType");
            DropForeignKey("Purchasing.PurchaseOrder", "StateID", "Purchasing.PurchaseOrderState");
            DropForeignKey("Purchasing.PurchaseOrder", "StatusID", "Purchasing.PurchaseOrderStatus");
            DropForeignKey("Purchasing.PurchaseOrder", "TypeID", "Purchasing.PurchaseOrderType");
            DropForeignKey("Ordering.SalesOrder", "StateID", "Ordering.SalesOrderState");
            DropForeignKey("Ordering.SalesOrder", "StatusID", "Ordering.SalesOrderStatus");
            DropForeignKey("Ordering.SalesOrder", "TypeID", "Ordering.SalesOrderType");
            DropForeignKey("Invoicing.SalesInvoice", "StateID", "Invoicing.SalesInvoiceState");
            DropForeignKey("Invoicing.SalesInvoice", "StatusID", "Invoicing.SalesInvoiceStatus");
            DropForeignKey("Invoicing.SalesInvoice", "TypeID", "Invoicing.SalesInvoiceType");
            DropForeignKey("Products.Product", "TypeID", "Products.ProductType");
            DropForeignKey("Shopping.CartItem", "StatusID", "Shopping.CartItemStatus");
            DropForeignKey("Shopping.Cart", "StateID", "Shopping.CartState");
            DropForeignKey("Shopping.Cart", "StatusID", "Shopping.CartStatus");
            DropForeignKey("Shopping.Cart", "TypeID", "Shopping.CartType");
            DropForeignKey("Reviews.Review", "TypeID", "Reviews.ReviewType");
            DropForeignKey("Shipping.Shipment", "StatusID", "Shipping.ShipmentStatus");
            DropForeignKey("Shipping.Shipment", "TypeID", "Shipping.ShipmentType");
            DropForeignKey("Stores.StoreInventoryLocation", "TypeID", "Stores.StoreInventoryLocationType");
            DropForeignKey("Quoting.SalesQuote", "StateID", "Quoting.SalesQuoteState");
            DropForeignKey("Quoting.SalesQuote", "StatusID", "Quoting.SalesQuoteStatus");
            DropForeignKey("Quoting.SalesQuote", "TypeID", "Quoting.SalesQuoteType");
            DropForeignKey("Returning.SalesReturn", "StateID", "Returning.SalesReturnState");
            DropForeignKey("Returning.SalesReturn", "StatusID", "Returning.SalesReturnStatus");
            DropForeignKey("Returning.SalesReturn", "TypeID", "Returning.SalesReturnType");
            DropForeignKey("Returning.SalesReturnItem", "StatusID", "Returning.SalesReturnItemStatus");
            DropForeignKey("Payments.Payment", "StatusID", "Payments.PaymentStatus");
            DropForeignKey("Payments.Payment", "TypeID", "Payments.PaymentType");
            DropForeignKey("Quoting.SalesQuoteItem", "StatusID", "Quoting.SalesQuoteItemStatus");
            DropForeignKey("Purchasing.PurchaseOrderItem", "StatusID", "Purchasing.PurchaseOrderItemStatus");
            DropForeignKey("Invoicing.SalesInvoiceItem", "StatusID", "Invoicing.SalesInvoiceItemStatus");
            DropForeignKey("Ordering.SalesOrderItem", "StatusID", "Ordering.SalesOrderItemStatus");
            DropForeignKey("Sampling.SampleRequest", "StateID", "Sampling.SampleRequestState");
            DropForeignKey("Sampling.SampleRequest", "StatusID", "Sampling.SampleRequestStatus");
            DropForeignKey("Sampling.SampleRequest", "TypeID", "Sampling.SampleRequestType");
            DropForeignKey("Sampling.SampleRequestItem", "StatusID", "Sampling.SampleRequestItemStatus");
            DropForeignKey("Shipping.Package", "TypeID", "Shipping.PackageType");
            DropForeignKey("Products.ProductAssociation", "TypeID", "Products.ProductAssociationType");
            DropIndex("Stores.Store", new[] { "TypeID" });
            DropIndex("Contacts.Contact", new[] { "TypeID" });
            DropIndex("Purchasing.PurchaseOrder", new[] { "StatusID" });
            DropIndex("Purchasing.PurchaseOrder", new[] { "StateID" });
            DropIndex("Purchasing.PurchaseOrder", new[] { "TypeID" });
            DropIndex("Ordering.SalesOrder", new[] { "StatusID" });
            DropIndex("Ordering.SalesOrder", new[] { "StateID" });
            DropIndex("Ordering.SalesOrder", new[] { "TypeID" });
            DropIndex("Invoicing.SalesInvoice", new[] { "StatusID" });
            DropIndex("Invoicing.SalesInvoice", new[] { "StateID" });
            DropIndex("Invoicing.SalesInvoice", new[] { "TypeID" });
            DropIndex("Products.Product", new[] { "TypeID" });
            DropIndex("Shopping.CartItem", new[] { "StatusID" });
            DropIndex("Shopping.Cart", new[] { "StatusID" });
            DropIndex("Shopping.Cart", new[] { "StateID" });
            DropIndex("Shopping.Cart", new[] { "TypeID" });
            DropIndex("Shopping.Cart", "Unq_BySessionTypeUserActive");
            DropIndex("Reviews.Review", new[] { "TypeID" });
            DropIndex("Shipping.Shipment", new[] { "StatusID" });
            DropIndex("Shipping.Shipment", new[] { "TypeID" });
            DropIndex("Stores.StoreInventoryLocation", new[] { "TypeID" });
            DropIndex("Quoting.SalesQuote", new[] { "StatusID" });
            DropIndex("Quoting.SalesQuote", new[] { "StateID" });
            DropIndex("Quoting.SalesQuote", new[] { "TypeID" });
            DropIndex("Returning.SalesReturn", new[] { "StatusID" });
            DropIndex("Returning.SalesReturn", new[] { "StateID" });
            DropIndex("Returning.SalesReturn", new[] { "TypeID" });
            DropIndex("Returning.SalesReturnItem", new[] { "StatusID" });
            DropIndex("Payments.Payment", new[] { "StatusID" });
            DropIndex("Payments.Payment", new[] { "TypeID" });
            DropIndex("Quoting.SalesQuoteItem", new[] { "StatusID" });
            DropIndex("Purchasing.PurchaseOrderItem", new[] { "StatusID" });
            DropIndex("Invoicing.SalesInvoiceItem", new[] { "StatusID" });
            DropIndex("Ordering.SalesOrderItem", new[] { "StatusID" });
            DropIndex("Sampling.SampleRequest", new[] { "StatusID" });
            DropIndex("Sampling.SampleRequest", new[] { "StateID" });
            DropIndex("Sampling.SampleRequest", new[] { "TypeID" });
            DropIndex("Sampling.SampleRequestItem", new[] { "StatusID" });
            DropIndex("Shipping.Package", new[] { "TypeID" });
            DropIndex("Products.ProductAssociation", new[] { "TypeID" });
            AddColumn("Accounts.Account", "Credit", c => c.Decimal(precision: 18, scale: 4));
            AddColumn("Accounts.Account", "CreditCurrencyID", c => c.Int());
            Sql("UPDATE [Stores].[Store] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Stores.Store", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Contacts].[Contact] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Contacts.Contact", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Purchasing].[PurchaseOrder] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Purchasing.PurchaseOrder", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Purchasing].[PurchaseOrder] SET [StateID] = 1 WHERE [StateID] IS NULL");
            AlterColumn("Purchasing.PurchaseOrder", "StateID", c => c.Int(nullable: false));
            Sql("UPDATE [Purchasing].[PurchaseOrder] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Purchasing.PurchaseOrder", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Ordering].[SalesOrder] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Ordering.SalesOrder", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Ordering].[SalesOrder] SET [StateID] = 1 WHERE [StateID] IS NULL");
            AlterColumn("Ordering.SalesOrder", "StateID", c => c.Int(nullable: false));
            Sql("UPDATE [Ordering].[SalesOrder] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Ordering.SalesOrder", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Invoicing].[SalesInvoice] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Invoicing.SalesInvoice", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Invoicing].[SalesInvoice] SET [StateID] = 1 WHERE [StateID] IS NULL");
            AlterColumn("Invoicing.SalesInvoice", "StateID", c => c.Int(nullable: false));
            Sql("UPDATE [Invoicing].[SalesInvoice] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Invoicing.SalesInvoice", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Products].[Product] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Products.Product", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Shopping].[CartItem] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Shopping.CartItem", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Shopping].[Cart] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Shopping.Cart", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Shopping].[Cart] SET [StateID] = 1 WHERE [StateID] IS NULL");
            AlterColumn("Shopping.Cart", "StateID", c => c.Int(nullable: false));
            Sql("UPDATE [Shopping].[Cart] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Shopping.Cart", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Reviews].[Review] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Reviews.Review", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Shipping].[Shipment] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Shipping.Shipment", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Shipping].[Shipment] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Shipping.Shipment", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Stores].[StoreInventoryLocation] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Stores.StoreInventoryLocation", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Quoting].[SalesQuote] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Quoting.SalesQuote", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Quoting].[SalesQuote] SET [StateID] = 1 WHERE [StateID] IS NULL");
            AlterColumn("Quoting.SalesQuote", "StateID", c => c.Int(nullable: false));
            Sql("UPDATE [Quoting].[SalesQuote] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Quoting.SalesQuote", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Returning].[SalesReturn] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Returning.SalesReturn", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Returning].[SalesReturn] SET [StateID] = 1 WHERE [StateID] IS NULL");
            AlterColumn("Returning.SalesReturn", "StateID", c => c.Int(nullable: false));
            Sql("UPDATE [Returning].[SalesReturn] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Returning.SalesReturn", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Returning].[SalesReturnItem] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Returning.SalesReturnItem", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Payments].[Payment] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Payments.Payment", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Payments].[Payment] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Payments.Payment", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Quoting].[SalesQuoteItem] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Quoting.SalesQuoteItem", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Purchasing].[PurchaseOrderItem] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Purchasing.PurchaseOrderItem", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Invoicing].[SalesInvoiceItem] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Invoicing.SalesInvoiceItem", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Ordering].[SalesOrderItem] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Ordering.SalesOrderItem", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Sampling].[SampleRequest] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Sampling.SampleRequest", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Sampling].[SampleRequest] SET [StateID] = 1 WHERE [StateID] IS NULL");
            AlterColumn("Sampling.SampleRequest", "StateID", c => c.Int(nullable: false));
            Sql("UPDATE [Sampling].[SampleRequest] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Sampling.SampleRequest", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Sampling].[SampleRequestItem] SET [StatusID] = 1 WHERE [StatusID] IS NULL");
            AlterColumn("Sampling.SampleRequestItem", "StatusID", c => c.Int(nullable: false));
            Sql("UPDATE [Shipping].[Package] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Shipping.Package", "TypeID", c => c.Int(nullable: false));
            Sql("UPDATE [Products].[ProductAssociation] SET [TypeID] = 1 WHERE [TypeID] IS NULL");
            AlterColumn("Products.ProductAssociation", "TypeID", c => c.Int(nullable: false));
            CreateIndex("Accounts.Account", "CreditCurrencyID");
            CreateIndex("Pricing.PricePoint", "CreatedDate");
            CreateIndex("Stores.StoreAccount", "CreatedDate");
            CreateIndex("Stores.Store", "TypeID");
            CreateIndex("Stores.BrandStore", "CreatedDate");
            CreateIndex("Stores.BrandSiteDomain", "CreatedDate");
            CreateIndex("Stores.SiteDomain", "CreatedDate");
            CreateIndex("Stores.SiteDomainSocialProvider", "CreatedDate");
            CreateIndex("Stores.SocialProvider", "CreatedDate");
            CreateIndex("Stores.StoreSiteDomain", "CreatedDate");
            CreateIndex("Contacts.Contact", "TypeID");
            CreateIndex("Geography.Address", "CreatedDate");
            CreateIndex("Geography.CountryCurrency", "CreatedDate");
            CreateIndex("Geography.CountryLanguage", "CreatedDate");
            CreateIndex("Globalization.Language", "CreatedDate");
            CreateIndex("Geography.RegionCurrency", "CreatedDate");
            CreateIndex("Geography.DistrictCurrency", "CreatedDate");
            CreateIndex("Geography.DistrictLanguage", "CreatedDate");
            CreateIndex("Tax.TaxDistrict", "CreatedDate");
            CreateIndex("Geography.InterRegion", "CreatedDate");
            CreateIndex("Geography.RegionLanguage", "CreatedDate");
            CreateIndex("Tax.TaxRegion", "CreatedDate");
            CreateIndex("Tax.TaxCountry", "CreatedDate");
            CreateIndex("Purchasing.PurchaseOrder", "StatusID");
            CreateIndex("Purchasing.PurchaseOrder", "StateID");
            CreateIndex("Purchasing.PurchaseOrder", "TypeID");
            CreateIndex("Purchasing.SalesOrderPurchaseOrder", "CreatedDate");
            CreateIndex("Ordering.SalesOrder", "StatusID");
            CreateIndex("Ordering.SalesOrder", "StateID");
            CreateIndex("Ordering.SalesOrder", "TypeID");
            CreateIndex("Invoicing.SalesOrderSalesInvoice", "CreatedDate");
            CreateIndex("Invoicing.SalesInvoice", "CreatedDate");
            CreateIndex("Invoicing.SalesInvoice", "StatusID");
            CreateIndex("Invoicing.SalesInvoice", "StateID");
            CreateIndex("Invoicing.SalesInvoice", "TypeID");
            CreateIndex("Invoicing.SalesInvoiceContact", "CreatedDate");
            CreateIndex("Discounts.SalesInvoiceDiscounts", "CreatedDate");
            CreateIndex("Discounts.Discount", "CreatedDate");
            CreateIndex("Discounts.DiscountCategories", "CreatedDate");
            CreateIndex("Products.ProductCategory", "CreatedDate");
            CreateIndex("Products.Product", "TypeID");
            CreateIndex("Shopping.CartItem", "StatusID");
            CreateIndex("Discounts.CartItemDiscounts", "CreatedDate");
            CreateIndex("Shopping.Cart", "StatusID");
            CreateIndex("Shopping.Cart", "StateID");
            CreateIndex("Shopping.Cart", "TypeID");
            CreateIndex("Shopping.Cart", new[] { "SessionID", "TypeID", "UserID" }, unique: true, name: "Unq_BySessionTypeUserActive");
            CreateIndex("Shopping.CartContact", "CreatedDate");
            CreateIndex("Discounts.CartDiscounts", "CreatedDate");
            CreateIndex("Messaging.ConversationUser", "CreatedDate");
            CreateIndex("Messaging.Conversation", "CreatedDate");
            CreateIndex("Messaging.MessageRecipient", "CreatedDate");
            CreateIndex("Messaging.EmailTemplate", "CreatedDate");
            CreateIndex("Messaging.EmailStatus", "CreatedDate");
            CreateIndex("Messaging.EmailType", "CreatedDate");
            CreateIndex("Groups.Group", "CreatedDate");
            CreateIndex("Groups.GroupUser", "CreatedDate");
            CreateIndex("Groups.GroupStatus", "CreatedDate");
            CreateIndex("Groups.GroupType", "CreatedDate");
            CreateIndex("Favorites.FavoriteCategory", "CreatedDate");
            CreateIndex("Favorites.FavoriteManufacturer", "CreatedDate");
            CreateIndex("Manufacturers.ManufacturerProduct", "CreatedDate");
            CreateIndex("Reviews.Review", "CreatedDate");
            CreateIndex("Reviews.Review", "TypeID");
            CreateIndex("Reviews.ReviewType", "CreatedDate");
            CreateIndex("Shipping.Shipment", "CreatedDate");
            CreateIndex("Shipping.Shipment", "StatusID");
            CreateIndex("Shipping.Shipment", "TypeID");
            CreateIndex("Inventory.InventoryLocationSection", "CreatedDate");
            CreateIndex("Stores.StoreInventoryLocation", "TypeID");
            CreateIndex("Shipping.CarrierInvoice", "CreatedDate");
            CreateIndex("Shipping.ShipCarrierMethod", "CreatedDate");
            CreateIndex("Vendors.ShipVia", "CreatedDate");
            CreateIndex("Shipping.ShipmentEvent", "CreatedDate");
            CreateIndex("Shipping.ShipmentStatus", "CreatedDate");
            CreateIndex("Shipping.ShipmentType", "CreatedDate");
            CreateIndex("Stores.StoreVendor", "CreatedDate");
            CreateIndex("Vendors.Term", "CreatedDate");
            CreateIndex("Vendors.VendorTerm", "CreatedDate");
            CreateIndex("Vendors.VendorManufacturer", "CreatedDate");
            CreateIndex("Vendors.VendorProduct", "CreatedDate");
            CreateIndex("Stores.StoreManufacturer", "CreatedDate");
            CreateIndex("Favorites.FavoriteStore", "CreatedDate");
            CreateIndex("Favorites.FavoriteVendor", "CreatedDate");
            CreateIndex("Quoting.SalesQuote", "StatusID");
            CreateIndex("Quoting.SalesQuote", "StateID");
            CreateIndex("Quoting.SalesQuote", "TypeID");
            CreateIndex("Quoting.SalesQuoteSalesOrder", "CreatedDate");
            CreateIndex("Quoting.SalesQuoteContact", "CreatedDate");
            CreateIndex("Discounts.SalesQuoteDiscounts", "CreatedDate");
            CreateIndex("Shipping.RateQuote", "CreatedDate");
            CreateIndex("Sales.SalesGroup", "CreatedDate");
            CreateIndex("Returning.SalesReturn", "StatusID");
            CreateIndex("Returning.SalesReturn", "StateID");
            CreateIndex("Returning.SalesReturn", "TypeID");
            CreateIndex("Returning.SalesReturnSalesOrder", "CreatedDate");
            CreateIndex("Returning.SalesReturnSalesOrder", "Hash");
            CreateIndex("Discounts.SalesReturnDiscounts", "CreatedDate");
            CreateIndex("Discounts.SalesReturnDiscounts", "Hash");
            CreateIndex("Returning.SalesReturnItem", "StatusID");
            CreateIndex("Discounts.SalesReturnItemDiscounts", "CreatedDate");
            CreateIndex("Discounts.SalesReturnItemDiscounts", "Hash");
            CreateIndex("Returning.SalesReturnReason", "CreatedDate");
            CreateIndex("Returning.SalesReturnReason", "Hash");
            CreateIndex("Returning.SalesReturnItemStatus", "CreatedDate");
            CreateIndex("Returning.SalesReturnItemStatus", "Hash");
            CreateIndex("Stores.StoreProduct", "CreatedDate");
            CreateIndex("Payments.SalesReturnPayment", "CreatedDate");
            CreateIndex("Payments.SalesReturnPayment", "Hash");
            CreateIndex("Payments.Payment", "CreatedDate");
            CreateIndex("Payments.Payment", "StatusID");
            CreateIndex("Payments.Payment", "TypeID");
            CreateIndex("Payments.PaymentMethod", "CreatedDate");
            CreateIndex("Payments.PaymentStatus", "CreatedDate");
            CreateIndex("Payments.PaymentType", "CreatedDate");
            CreateIndex("Returning.SalesReturnState", "CreatedDate");
            CreateIndex("Returning.SalesReturnState", "Hash");
            CreateIndex("Returning.SalesReturnStatus", "CreatedDate");
            CreateIndex("Returning.SalesReturnStatus", "Hash");
            CreateIndex("Returning.SalesReturnType", "CreatedDate");
            CreateIndex("Returning.SalesReturnType", "Hash");
            CreateIndex("Quoting.SalesQuoteItem", "StatusID");
            CreateIndex("Discounts.SalesQuoteItemDiscounts", "CreatedDate");
            CreateIndex("Quoting.SalesQuoteItemStatus", "CreatedDate");
            CreateIndex("Quoting.SalesQuoteCategory", "CreatedDate");
            CreateIndex("Quoting.SalesQuoteState", "CreatedDate");
            CreateIndex("Quoting.SalesQuoteStatus", "CreatedDate");
            CreateIndex("Quoting.SalesQuoteType", "CreatedDate");
            CreateIndex("Stores.StoreUser", "CreatedDate");
            CreateIndex("Payments.Subscription", "CreatedDate");
            CreateIndex("Payments.RepeatType", "CreatedDate");
            CreateIndex("Stores.StoreSubscription", "CreatedDate");
            CreateIndex("Payments.SubscriptionHistory", "CreatedDate");
            CreateIndex("Payments.SubscriptionStatus", "CreatedDate");
            CreateIndex("Payments.SubscriptionType", "CreatedDate");
            CreateIndex("Products.ProductSubscriptionType", "CreatedDate");
            CreateIndex("Stores.StoreUserType", "CreatedDate");
            CreateIndex("Payments.Wallet", "CreatedDate");
            CreateIndex("Purchasing.PurchaseOrderItem", "StatusID");
            CreateIndex("Discounts.PurchaseOrderItemDiscounts", "CreatedDate");
            CreateIndex("Purchasing.PurchaseOrderItemStatus", "CreatedDate");
            CreateIndex("Invoicing.SalesInvoiceItem", "CreatedDate");
            CreateIndex("Invoicing.SalesInvoiceItem", "StatusID");
            CreateIndex("Discounts.SalesInvoiceItemDiscounts", "CreatedDate");
            CreateIndex("Invoicing.SalesInvoiceItemStatus", "CreatedDate");
            CreateIndex("Ordering.SalesOrderItem", "StatusID");
            CreateIndex("Discounts.SalesOrderItemDiscounts", "CreatedDate");
            CreateIndex("Ordering.SalesOrderItemStatus", "CreatedDate");
            CreateIndex("Sampling.SampleRequest", "StatusID");
            CreateIndex("Sampling.SampleRequest", "StateID");
            CreateIndex("Sampling.SampleRequest", "TypeID");
            CreateIndex("Sampling.SampleRequestContact", "CreatedDate");
            CreateIndex("Discounts.SampleRequestDiscounts", "CreatedDate");
            CreateIndex("Sampling.SampleRequestItem", "StatusID");
            CreateIndex("Discounts.SampleRequestItemDiscounts", "CreatedDate");
            CreateIndex("Sampling.SampleRequestItemStatus", "CreatedDate");
            CreateIndex("Sampling.SampleRequestState", "CreatedDate");
            CreateIndex("Sampling.SampleRequestStatus", "CreatedDate");
            CreateIndex("Sampling.SampleRequestType", "CreatedDate");
            CreateIndex("System.NoteType", "CreatedDate");
            CreateIndex("Shopping.CartState", "CreatedDate");
            CreateIndex("Shopping.CartStatus", "CreatedDate");
            CreateIndex("Shopping.CartType", "CreatedDate");
            CreateIndex("Shopping.CartItemStatus", "CreatedDate");
            CreateIndex("Discounts.DiscountProducts", "CreatedDate");
            CreateIndex("Shipping.Package", "CreatedDate");
            CreateIndex("Shipping.Package", "TypeID");
            CreateIndex("Shipping.PackageType", "CreatedDate");
            CreateIndex("Products.ProductAssociation", "CreatedDate");
            CreateIndex("Products.ProductAssociation", "TypeID");
            CreateIndex("Products.ProductAssociationType", "CreatedDate");
            CreateIndex("Pricing.PriceRounding", "CreatedDate");
            CreateIndex("Products.ProductType", "CreatedDate");
            CreateIndex("Stores.StoreCategory", "CreatedDate");
            CreateIndex("Stores.StoreCategoryType", "CreatedDate");
            CreateIndex("Discounts.DiscountCode", "CreatedDate");
            CreateIndex("Discounts.DiscountProductType", "CreatedDate");
            CreateIndex("Discounts.DiscountShipCarrierMethods", "CreatedDate");
            CreateIndex("Discounts.DiscountStores", "CreatedDate");
            CreateIndex("Payments.SalesInvoicePayment", "CreatedDate");
            CreateIndex("Invoicing.SalesInvoiceState", "CreatedDate");
            CreateIndex("Invoicing.SalesInvoiceStatus", "CreatedDate");
            CreateIndex("Invoicing.SalesInvoiceType", "CreatedDate");
            CreateIndex("Ordering.SalesOrderContact", "CreatedDate");
            CreateIndex("Discounts.SalesOrderDiscounts", "CreatedDate");
            CreateIndex("Ordering.SalesOrderEvent", "CreatedDate");
            CreateIndex("Payments.SalesOrderPayment", "CreatedDate");
            CreateIndex("Ordering.SalesOrderState", "CreatedDate");
            CreateIndex("Ordering.SalesOrderStatus", "CreatedDate");
            CreateIndex("Ordering.SalesOrderType", "CreatedDate");
            CreateIndex("Purchasing.PurchaseOrderContact", "CreatedDate");
            CreateIndex("Discounts.PurchaseOrderDiscounts", "CreatedDate");
            CreateIndex("Purchasing.FreeOnBoard", "CreatedDate");
            CreateIndex("Purchasing.PurchaseOrderState", "CreatedDate");
            CreateIndex("Purchasing.PurchaseOrderStatus", "CreatedDate");
            CreateIndex("Purchasing.PurchaseOrderType", "CreatedDate");
            CreateIndex("Stores.StoreBadge", "CreatedDate");
            CreateIndex("Stores.BadgeType", "CreatedDate");
            CreateIndex("Stores.StoreContact", "CreatedDate");
            CreateIndex("Stores.StoreType", "CreatedDate");
            CreateIndex("Tracking.CampaignAd", "ID");
            CreateIndex("Tracking.CampaignAd", "CreatedDate");
            CreateIndex("Tracking.Campaign", "ID");
            CreateIndex("Tracking.Campaign", "CreatedDate");
            CreateIndex("Tracking.CampaignStatus", "ID");
            CreateIndex("Tracking.CampaignStatus", "CreatedDate");
            CreateIndex("Tracking.CampaignType", "ID");
            CreateIndex("Tracking.CampaignType", "CreatedDate");
            CreateIndex("System.SystemLog", "CreatedDate");
            CreateIndex("Tracking.Event", "ID");
            CreateIndex("Tracking.Event", "CreatedDate");
            CreateIndex("Tracking.IPOrganization", "ID");
            CreateIndex("Tracking.IPOrganization", "CreatedDate");
            CreateIndex("Tracking.IPOrganizationStatus", "ID");
            CreateIndex("Tracking.IPOrganizationStatus", "CreatedDate");
            CreateIndex("Tracking.PageViewEvent", "ID");
            CreateIndex("Tracking.PageViewEvent", "CreatedDate");
            CreateIndex("Tracking.PageView", "ID");
            CreateIndex("Tracking.PageView", "CreatedDate");
            CreateIndex("Tracking.PageViewStatus", "ID");
            CreateIndex("Tracking.PageViewStatus", "CreatedDate");
            CreateIndex("Tracking.PageViewType", "ID");
            CreateIndex("Tracking.PageViewType", "CreatedDate");
            CreateIndex("Tracking.Visitor", "ID");
            CreateIndex("Tracking.Visitor", "CreatedDate");
            CreateIndex("Tracking.Visit", "ID");
            CreateIndex("Tracking.Visit", "CreatedDate");
            CreateIndex("Tracking.VisitStatus", "ID");
            CreateIndex("Tracking.VisitStatus", "CreatedDate");
            CreateIndex("Tracking.EventStatus", "ID");
            CreateIndex("Tracking.EventStatus", "CreatedDate");
            CreateIndex("Tracking.EventType", "ID");
            CreateIndex("Tracking.EventType", "CreatedDate");
            CreateIndex("Favorites.FavoriteShipCarrier", "CreatedDate");
            CreateIndex("Geography.HistoricalAddressValidation", "CreatedDate");
            CreateIndex("Tax.HistoricalTaxRate", "CreatedDate");
            CreateIndex("System.ImportExportMapping", "CreatedDate");
            CreateIndex("Geography.PhonePrefixLookup", "CreatedDate");
            CreateIndex("Pricing.PriceRuleAccount", "CreatedDate");
            CreateIndex("Pricing.PriceRuleAccountType", "CreatedDate");
            CreateIndex("Pricing.PriceRuleCategory", "CreatedDate");
            CreateIndex("Pricing.PriceRuleProduct", "CreatedDate");
            CreateIndex("Pricing.PriceRuleProductType", "CreatedDate");
            CreateIndex("Pricing.PriceRuleVendor", "CreatedDate");
            CreateIndex("Reporting.Reports", "CreatedDate");
            CreateIndex("Reporting.ReportTypes", "CreatedDate");
            CreateIndex("Hangfire.ScheduledJobConfiguration", "CreatedDate");
            CreateIndex("Hangfire.ScheduledJobConfigurationSetting", "CreatedDate");
            CreateIndex("System.Setting", "CreatedDate");
            CreateIndex("System.SettingGroup", "CreatedDate");
            CreateIndex("System.SettingType", "CreatedDate");
            CreateIndex("Globalization.UIKey", "CreatedDate");
            CreateIndex("Globalization.UITranslation", "CreatedDate");
            CreateIndex("Shipping.UPSEndOfDay", "CreatedDate");
            CreateIndex("Geography.ZipCode", "CreatedDate");
            AddForeignKey("Accounts.Account", "CreditCurrencyID", "Currencies.Currency", "ID");
            AddForeignKey("Stores.Store", "TypeID", "Stores.StoreType", "ID", cascadeDelete: true);
            AddForeignKey("Contacts.Contact", "TypeID", "Contacts.ContactType", "ID", cascadeDelete: true);
            AddForeignKey("Purchasing.PurchaseOrder", "StateID", "Purchasing.PurchaseOrderState", "ID", cascadeDelete: true);
            AddForeignKey("Purchasing.PurchaseOrder", "StatusID", "Purchasing.PurchaseOrderStatus", "ID", cascadeDelete: true);
            AddForeignKey("Purchasing.PurchaseOrder", "TypeID", "Purchasing.PurchaseOrderType", "ID", cascadeDelete: true);
            AddForeignKey("Ordering.SalesOrder", "StateID", "Ordering.SalesOrderState", "ID", cascadeDelete: true);
            AddForeignKey("Ordering.SalesOrder", "StatusID", "Ordering.SalesOrderStatus", "ID", cascadeDelete: true);
            AddForeignKey("Ordering.SalesOrder", "TypeID", "Ordering.SalesOrderType", "ID", cascadeDelete: true);
            AddForeignKey("Invoicing.SalesInvoice", "StateID", "Invoicing.SalesInvoiceState", "ID", cascadeDelete: true);
            AddForeignKey("Invoicing.SalesInvoice", "StatusID", "Invoicing.SalesInvoiceStatus", "ID", cascadeDelete: true);
            AddForeignKey("Invoicing.SalesInvoice", "TypeID", "Invoicing.SalesInvoiceType", "ID", cascadeDelete: true);
            AddForeignKey("Products.Product", "TypeID", "Products.ProductType", "ID", cascadeDelete: true);
            AddForeignKey("Shopping.CartItem", "StatusID", "Shopping.CartItemStatus", "ID", cascadeDelete: true);
            AddForeignKey("Shopping.Cart", "StateID", "Shopping.CartState", "ID", cascadeDelete: true);
            AddForeignKey("Shopping.Cart", "StatusID", "Shopping.CartStatus", "ID", cascadeDelete: true);
            AddForeignKey("Shopping.Cart", "TypeID", "Shopping.CartType", "ID", cascadeDelete: true);
            AddForeignKey("Reviews.Review", "TypeID", "Reviews.ReviewType", "ID", cascadeDelete: true);
            AddForeignKey("Shipping.Shipment", "StatusID", "Shipping.ShipmentStatus", "ID", cascadeDelete: true);
            AddForeignKey("Shipping.Shipment", "TypeID", "Shipping.ShipmentType", "ID", cascadeDelete: true);
            AddForeignKey("Stores.StoreInventoryLocation", "TypeID", "Stores.StoreInventoryLocationType", "ID", cascadeDelete: true);
            AddForeignKey("Quoting.SalesQuote", "StateID", "Quoting.SalesQuoteState", "ID", cascadeDelete: true);
            AddForeignKey("Quoting.SalesQuote", "StatusID", "Quoting.SalesQuoteStatus", "ID", cascadeDelete: true);
            AddForeignKey("Quoting.SalesQuote", "TypeID", "Quoting.SalesQuoteType", "ID", cascadeDelete: true);
            AddForeignKey("Returning.SalesReturn", "StateID", "Returning.SalesReturnState", "ID", cascadeDelete: true);
            AddForeignKey("Returning.SalesReturn", "StatusID", "Returning.SalesReturnStatus", "ID", cascadeDelete: true);
            AddForeignKey("Returning.SalesReturn", "TypeID", "Returning.SalesReturnType", "ID", cascadeDelete: true);
            AddForeignKey("Returning.SalesReturnItem", "StatusID", "Returning.SalesReturnItemStatus", "ID", cascadeDelete: true);
            AddForeignKey("Payments.Payment", "StatusID", "Payments.PaymentStatus", "ID", cascadeDelete: true);
            AddForeignKey("Payments.Payment", "TypeID", "Payments.PaymentType", "ID", cascadeDelete: true);
            AddForeignKey("Quoting.SalesQuoteItem", "StatusID", "Quoting.SalesQuoteItemStatus", "ID", cascadeDelete: true);
            AddForeignKey("Purchasing.PurchaseOrderItem", "StatusID", "Purchasing.PurchaseOrderItemStatus", "ID", cascadeDelete: true);
            AddForeignKey("Invoicing.SalesInvoiceItem", "StatusID", "Invoicing.SalesInvoiceItemStatus", "ID", cascadeDelete: true);
            AddForeignKey("Ordering.SalesOrderItem", "StatusID", "Ordering.SalesOrderItemStatus", "ID", cascadeDelete: true);
            AddForeignKey("Sampling.SampleRequest", "StateID", "Sampling.SampleRequestState", "ID", cascadeDelete: true);
            AddForeignKey("Sampling.SampleRequest", "StatusID", "Sampling.SampleRequestStatus", "ID", cascadeDelete: true);
            AddForeignKey("Sampling.SampleRequest", "TypeID", "Sampling.SampleRequestType", "ID", cascadeDelete: true);
            AddForeignKey("Sampling.SampleRequestItem", "StatusID", "Sampling.SampleRequestItemStatus", "ID", cascadeDelete: true);
            AddForeignKey("Shipping.Package", "TypeID", "Shipping.PackageType", "ID", cascadeDelete: true);
            AddForeignKey("Products.ProductAssociation", "TypeID", "Products.ProductAssociationType", "ID", cascadeDelete: true);
        }

        public override void Down()
        {
            DropForeignKey("Products.ProductAssociation", "TypeID", "Products.ProductAssociationType");
            DropForeignKey("Shipping.Package", "TypeID", "Shipping.PackageType");
            DropForeignKey("Sampling.SampleRequestItem", "StatusID", "Sampling.SampleRequestItemStatus");
            DropForeignKey("Sampling.SampleRequest", "TypeID", "Sampling.SampleRequestType");
            DropForeignKey("Sampling.SampleRequest", "StatusID", "Sampling.SampleRequestStatus");
            DropForeignKey("Sampling.SampleRequest", "StateID", "Sampling.SampleRequestState");
            DropForeignKey("Ordering.SalesOrderItem", "StatusID", "Ordering.SalesOrderItemStatus");
            DropForeignKey("Invoicing.SalesInvoiceItem", "StatusID", "Invoicing.SalesInvoiceItemStatus");
            DropForeignKey("Purchasing.PurchaseOrderItem", "StatusID", "Purchasing.PurchaseOrderItemStatus");
            DropForeignKey("Quoting.SalesQuoteItem", "StatusID", "Quoting.SalesQuoteItemStatus");
            DropForeignKey("Payments.Payment", "TypeID", "Payments.PaymentType");
            DropForeignKey("Payments.Payment", "StatusID", "Payments.PaymentStatus");
            DropForeignKey("Returning.SalesReturnItem", "StatusID", "Returning.SalesReturnItemStatus");
            DropForeignKey("Returning.SalesReturn", "TypeID", "Returning.SalesReturnType");
            DropForeignKey("Returning.SalesReturn", "StatusID", "Returning.SalesReturnStatus");
            DropForeignKey("Returning.SalesReturn", "StateID", "Returning.SalesReturnState");
            DropForeignKey("Quoting.SalesQuote", "TypeID", "Quoting.SalesQuoteType");
            DropForeignKey("Quoting.SalesQuote", "StatusID", "Quoting.SalesQuoteStatus");
            DropForeignKey("Quoting.SalesQuote", "StateID", "Quoting.SalesQuoteState");
            DropForeignKey("Stores.StoreInventoryLocation", "TypeID", "Stores.StoreInventoryLocationType");
            DropForeignKey("Shipping.Shipment", "TypeID", "Shipping.ShipmentType");
            DropForeignKey("Shipping.Shipment", "StatusID", "Shipping.ShipmentStatus");
            DropForeignKey("Reviews.Review", "TypeID", "Reviews.ReviewType");
            DropForeignKey("Shopping.Cart", "TypeID", "Shopping.CartType");
            DropForeignKey("Shopping.Cart", "StatusID", "Shopping.CartStatus");
            DropForeignKey("Shopping.Cart", "StateID", "Shopping.CartState");
            DropForeignKey("Shopping.CartItem", "StatusID", "Shopping.CartItemStatus");
            DropForeignKey("Products.Product", "TypeID", "Products.ProductType");
            DropForeignKey("Invoicing.SalesInvoice", "TypeID", "Invoicing.SalesInvoiceType");
            DropForeignKey("Invoicing.SalesInvoice", "StatusID", "Invoicing.SalesInvoiceStatus");
            DropForeignKey("Invoicing.SalesInvoice", "StateID", "Invoicing.SalesInvoiceState");
            DropForeignKey("Ordering.SalesOrder", "TypeID", "Ordering.SalesOrderType");
            DropForeignKey("Ordering.SalesOrder", "StatusID", "Ordering.SalesOrderStatus");
            DropForeignKey("Ordering.SalesOrder", "StateID", "Ordering.SalesOrderState");
            DropForeignKey("Purchasing.PurchaseOrder", "TypeID", "Purchasing.PurchaseOrderType");
            DropForeignKey("Purchasing.PurchaseOrder", "StatusID", "Purchasing.PurchaseOrderStatus");
            DropForeignKey("Purchasing.PurchaseOrder", "StateID", "Purchasing.PurchaseOrderState");
            DropForeignKey("Contacts.Contact", "TypeID", "Contacts.ContactType");
            DropForeignKey("Stores.Store", "TypeID", "Stores.StoreType");
            DropForeignKey("Accounts.Account", "CreditCurrencyID", "Currencies.Currency");
            DropIndex("Geography.ZipCode", new[] { "CreatedDate" });
            DropIndex("Shipping.UPSEndOfDay", new[] { "CreatedDate" });
            DropIndex("Globalization.UITranslation", new[] { "CreatedDate" });
            DropIndex("Globalization.UIKey", new[] { "CreatedDate" });
            DropIndex("System.SettingType", new[] { "CreatedDate" });
            DropIndex("System.SettingGroup", new[] { "CreatedDate" });
            DropIndex("System.Setting", new[] { "CreatedDate" });
            DropIndex("Hangfire.ScheduledJobConfigurationSetting", new[] { "CreatedDate" });
            DropIndex("Hangfire.ScheduledJobConfiguration", new[] { "CreatedDate" });
            DropIndex("Reporting.ReportTypes", new[] { "CreatedDate" });
            DropIndex("Reporting.Reports", new[] { "CreatedDate" });
            DropIndex("Pricing.PriceRuleVendor", new[] { "CreatedDate" });
            DropIndex("Pricing.PriceRuleProductType", new[] { "CreatedDate" });
            DropIndex("Pricing.PriceRuleProduct", new[] { "CreatedDate" });
            DropIndex("Pricing.PriceRuleCategory", new[] { "CreatedDate" });
            DropIndex("Pricing.PriceRuleAccountType", new[] { "CreatedDate" });
            DropIndex("Pricing.PriceRuleAccount", new[] { "CreatedDate" });
            DropIndex("Geography.PhonePrefixLookup", new[] { "CreatedDate" });
            DropIndex("System.ImportExportMapping", new[] { "CreatedDate" });
            DropIndex("Tax.HistoricalTaxRate", new[] { "CreatedDate" });
            DropIndex("Geography.HistoricalAddressValidation", new[] { "CreatedDate" });
            DropIndex("Favorites.FavoriteShipCarrier", new[] { "CreatedDate" });
            DropIndex("Tracking.EventType", new[] { "CreatedDate" });
            DropIndex("Tracking.EventType", new[] { "ID" });
            DropIndex("Tracking.EventStatus", new[] { "CreatedDate" });
            DropIndex("Tracking.EventStatus", new[] { "ID" });
            DropIndex("Tracking.VisitStatus", new[] { "CreatedDate" });
            DropIndex("Tracking.VisitStatus", new[] { "ID" });
            DropIndex("Tracking.Visit", new[] { "CreatedDate" });
            DropIndex("Tracking.Visit", new[] { "ID" });
            DropIndex("Tracking.Visitor", new[] { "CreatedDate" });
            DropIndex("Tracking.Visitor", new[] { "ID" });
            DropIndex("Tracking.PageViewType", new[] { "CreatedDate" });
            DropIndex("Tracking.PageViewType", new[] { "ID" });
            DropIndex("Tracking.PageViewStatus", new[] { "CreatedDate" });
            DropIndex("Tracking.PageViewStatus", new[] { "ID" });
            DropIndex("Tracking.PageView", new[] { "CreatedDate" });
            DropIndex("Tracking.PageView", new[] { "ID" });
            DropIndex("Tracking.PageViewEvent", new[] { "CreatedDate" });
            DropIndex("Tracking.PageViewEvent", new[] { "ID" });
            DropIndex("Tracking.IPOrganizationStatus", new[] { "CreatedDate" });
            DropIndex("Tracking.IPOrganizationStatus", new[] { "ID" });
            DropIndex("Tracking.IPOrganization", new[] { "CreatedDate" });
            DropIndex("Tracking.IPOrganization", new[] { "ID" });
            DropIndex("Tracking.Event", new[] { "CreatedDate" });
            DropIndex("Tracking.Event", new[] { "ID" });
            DropIndex("System.SystemLog", new[] { "CreatedDate" });
            DropIndex("Tracking.CampaignType", new[] { "CreatedDate" });
            DropIndex("Tracking.CampaignType", new[] { "ID" });
            DropIndex("Tracking.CampaignStatus", new[] { "CreatedDate" });
            DropIndex("Tracking.CampaignStatus", new[] { "ID" });
            DropIndex("Tracking.Campaign", new[] { "CreatedDate" });
            DropIndex("Tracking.Campaign", new[] { "ID" });
            DropIndex("Tracking.CampaignAd", new[] { "CreatedDate" });
            DropIndex("Tracking.CampaignAd", new[] { "ID" });
            DropIndex("Stores.StoreType", new[] { "CreatedDate" });
            DropIndex("Stores.StoreContact", new[] { "CreatedDate" });
            DropIndex("Stores.BadgeType", new[] { "CreatedDate" });
            DropIndex("Stores.StoreBadge", new[] { "CreatedDate" });
            DropIndex("Purchasing.PurchaseOrderType", new[] { "CreatedDate" });
            DropIndex("Purchasing.PurchaseOrderStatus", new[] { "CreatedDate" });
            DropIndex("Purchasing.PurchaseOrderState", new[] { "CreatedDate" });
            DropIndex("Purchasing.FreeOnBoard", new[] { "CreatedDate" });
            DropIndex("Discounts.PurchaseOrderDiscounts", new[] { "CreatedDate" });
            DropIndex("Purchasing.PurchaseOrderContact", new[] { "CreatedDate" });
            DropIndex("Ordering.SalesOrderType", new[] { "CreatedDate" });
            DropIndex("Ordering.SalesOrderStatus", new[] { "CreatedDate" });
            DropIndex("Ordering.SalesOrderState", new[] { "CreatedDate" });
            DropIndex("Payments.SalesOrderPayment", new[] { "CreatedDate" });
            DropIndex("Ordering.SalesOrderEvent", new[] { "CreatedDate" });
            DropIndex("Discounts.SalesOrderDiscounts", new[] { "CreatedDate" });
            DropIndex("Ordering.SalesOrderContact", new[] { "CreatedDate" });
            DropIndex("Invoicing.SalesInvoiceType", new[] { "CreatedDate" });
            DropIndex("Invoicing.SalesInvoiceStatus", new[] { "CreatedDate" });
            DropIndex("Invoicing.SalesInvoiceState", new[] { "CreatedDate" });
            DropIndex("Payments.SalesInvoicePayment", new[] { "CreatedDate" });
            DropIndex("Discounts.DiscountStores", new[] { "CreatedDate" });
            DropIndex("Discounts.DiscountShipCarrierMethods", new[] { "CreatedDate" });
            DropIndex("Discounts.DiscountProductType", new[] { "CreatedDate" });
            DropIndex("Discounts.DiscountCode", new[] { "CreatedDate" });
            DropIndex("Stores.StoreCategoryType", new[] { "CreatedDate" });
            DropIndex("Stores.StoreCategory", new[] { "CreatedDate" });
            DropIndex("Products.ProductType", new[] { "CreatedDate" });
            DropIndex("Pricing.PriceRounding", new[] { "CreatedDate" });
            DropIndex("Products.ProductAssociationType", new[] { "CreatedDate" });
            DropIndex("Products.ProductAssociation", new[] { "TypeID" });
            DropIndex("Products.ProductAssociation", new[] { "CreatedDate" });
            DropIndex("Shipping.PackageType", new[] { "CreatedDate" });
            DropIndex("Shipping.Package", new[] { "TypeID" });
            DropIndex("Shipping.Package", new[] { "CreatedDate" });
            DropIndex("Discounts.DiscountProducts", new[] { "CreatedDate" });
            DropIndex("Shopping.CartItemStatus", new[] { "CreatedDate" });
            DropIndex("Shopping.CartType", new[] { "CreatedDate" });
            DropIndex("Shopping.CartStatus", new[] { "CreatedDate" });
            DropIndex("Shopping.CartState", new[] { "CreatedDate" });
            DropIndex("System.NoteType", new[] { "CreatedDate" });
            DropIndex("Sampling.SampleRequestType", new[] { "CreatedDate" });
            DropIndex("Sampling.SampleRequestStatus", new[] { "CreatedDate" });
            DropIndex("Sampling.SampleRequestState", new[] { "CreatedDate" });
            DropIndex("Sampling.SampleRequestItemStatus", new[] { "CreatedDate" });
            DropIndex("Discounts.SampleRequestItemDiscounts", new[] { "CreatedDate" });
            DropIndex("Sampling.SampleRequestItem", new[] { "StatusID" });
            DropIndex("Discounts.SampleRequestDiscounts", new[] { "CreatedDate" });
            DropIndex("Sampling.SampleRequestContact", new[] { "CreatedDate" });
            DropIndex("Sampling.SampleRequest", new[] { "TypeID" });
            DropIndex("Sampling.SampleRequest", new[] { "StateID" });
            DropIndex("Sampling.SampleRequest", new[] { "StatusID" });
            DropIndex("Ordering.SalesOrderItemStatus", new[] { "CreatedDate" });
            DropIndex("Discounts.SalesOrderItemDiscounts", new[] { "CreatedDate" });
            DropIndex("Ordering.SalesOrderItem", new[] { "StatusID" });
            DropIndex("Invoicing.SalesInvoiceItemStatus", new[] { "CreatedDate" });
            DropIndex("Discounts.SalesInvoiceItemDiscounts", new[] { "CreatedDate" });
            DropIndex("Invoicing.SalesInvoiceItem", new[] { "StatusID" });
            DropIndex("Invoicing.SalesInvoiceItem", new[] { "CreatedDate" });
            DropIndex("Purchasing.PurchaseOrderItemStatus", new[] { "CreatedDate" });
            DropIndex("Discounts.PurchaseOrderItemDiscounts", new[] { "CreatedDate" });
            DropIndex("Purchasing.PurchaseOrderItem", new[] { "StatusID" });
            DropIndex("Payments.Wallet", new[] { "CreatedDate" });
            DropIndex("Stores.StoreUserType", new[] { "CreatedDate" });
            DropIndex("Products.ProductSubscriptionType", new[] { "CreatedDate" });
            DropIndex("Payments.SubscriptionType", new[] { "CreatedDate" });
            DropIndex("Payments.SubscriptionStatus", new[] { "CreatedDate" });
            DropIndex("Payments.SubscriptionHistory", new[] { "CreatedDate" });
            DropIndex("Stores.StoreSubscription", new[] { "CreatedDate" });
            DropIndex("Payments.RepeatType", new[] { "CreatedDate" });
            DropIndex("Payments.Subscription", new[] { "CreatedDate" });
            DropIndex("Stores.StoreUser", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuoteType", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuoteStatus", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuoteState", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuoteCategory", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuoteItemStatus", new[] { "CreatedDate" });
            DropIndex("Discounts.SalesQuoteItemDiscounts", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuoteItem", new[] { "StatusID" });
            DropIndex("Returning.SalesReturnType", new[] { "Hash" });
            DropIndex("Returning.SalesReturnType", new[] { "CreatedDate" });
            DropIndex("Returning.SalesReturnStatus", new[] { "Hash" });
            DropIndex("Returning.SalesReturnStatus", new[] { "CreatedDate" });
            DropIndex("Returning.SalesReturnState", new[] { "Hash" });
            DropIndex("Returning.SalesReturnState", new[] { "CreatedDate" });
            DropIndex("Payments.PaymentType", new[] { "CreatedDate" });
            DropIndex("Payments.PaymentStatus", new[] { "CreatedDate" });
            DropIndex("Payments.PaymentMethod", new[] { "CreatedDate" });
            DropIndex("Payments.Payment", new[] { "TypeID" });
            DropIndex("Payments.Payment", new[] { "StatusID" });
            DropIndex("Payments.Payment", new[] { "CreatedDate" });
            DropIndex("Payments.SalesReturnPayment", new[] { "Hash" });
            DropIndex("Payments.SalesReturnPayment", new[] { "CreatedDate" });
            DropIndex("Stores.StoreProduct", new[] { "CreatedDate" });
            DropIndex("Returning.SalesReturnItemStatus", new[] { "Hash" });
            DropIndex("Returning.SalesReturnItemStatus", new[] { "CreatedDate" });
            DropIndex("Returning.SalesReturnReason", new[] { "Hash" });
            DropIndex("Returning.SalesReturnReason", new[] { "CreatedDate" });
            DropIndex("Discounts.SalesReturnItemDiscounts", new[] { "Hash" });
            DropIndex("Discounts.SalesReturnItemDiscounts", new[] { "CreatedDate" });
            DropIndex("Returning.SalesReturnItem", new[] { "StatusID" });
            DropIndex("Discounts.SalesReturnDiscounts", new[] { "Hash" });
            DropIndex("Discounts.SalesReturnDiscounts", new[] { "CreatedDate" });
            DropIndex("Returning.SalesReturnSalesOrder", new[] { "Hash" });
            DropIndex("Returning.SalesReturnSalesOrder", new[] { "CreatedDate" });
            DropIndex("Returning.SalesReturn", new[] { "TypeID" });
            DropIndex("Returning.SalesReturn", new[] { "StateID" });
            DropIndex("Returning.SalesReturn", new[] { "StatusID" });
            DropIndex("Sales.SalesGroup", new[] { "CreatedDate" });
            DropIndex("Shipping.RateQuote", new[] { "CreatedDate" });
            DropIndex("Discounts.SalesQuoteDiscounts", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuoteContact", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuoteSalesOrder", new[] { "CreatedDate" });
            DropIndex("Quoting.SalesQuote", new[] { "TypeID" });
            DropIndex("Quoting.SalesQuote", new[] { "StateID" });
            DropIndex("Quoting.SalesQuote", new[] { "StatusID" });
            DropIndex("Favorites.FavoriteVendor", new[] { "CreatedDate" });
            DropIndex("Favorites.FavoriteStore", new[] { "CreatedDate" });
            DropIndex("Stores.StoreManufacturer", new[] { "CreatedDate" });
            DropIndex("Vendors.VendorProduct", new[] { "CreatedDate" });
            DropIndex("Vendors.VendorManufacturer", new[] { "CreatedDate" });
            DropIndex("Vendors.VendorTerm", new[] { "CreatedDate" });
            DropIndex("Vendors.Term", new[] { "CreatedDate" });
            DropIndex("Stores.StoreVendor", new[] { "CreatedDate" });
            DropIndex("Shipping.ShipmentType", new[] { "CreatedDate" });
            DropIndex("Shipping.ShipmentStatus", new[] { "CreatedDate" });
            DropIndex("Shipping.ShipmentEvent", new[] { "CreatedDate" });
            DropIndex("Vendors.ShipVia", new[] { "CreatedDate" });
            DropIndex("Shipping.ShipCarrierMethod", new[] { "CreatedDate" });
            DropIndex("Shipping.CarrierInvoice", new[] { "CreatedDate" });
            DropIndex("Stores.StoreInventoryLocation", new[] { "TypeID" });
            DropIndex("Inventory.InventoryLocationSection", new[] { "CreatedDate" });
            DropIndex("Shipping.Shipment", new[] { "TypeID" });
            DropIndex("Shipping.Shipment", new[] { "StatusID" });
            DropIndex("Shipping.Shipment", new[] { "CreatedDate" });
            DropIndex("Reviews.ReviewType", new[] { "CreatedDate" });
            DropIndex("Reviews.Review", new[] { "TypeID" });
            DropIndex("Reviews.Review", new[] { "CreatedDate" });
            DropIndex("Manufacturers.ManufacturerProduct", new[] { "CreatedDate" });
            DropIndex("Favorites.FavoriteManufacturer", new[] { "CreatedDate" });
            DropIndex("Favorites.FavoriteCategory", new[] { "CreatedDate" });
            DropIndex("Groups.GroupType", new[] { "CreatedDate" });
            DropIndex("Groups.GroupStatus", new[] { "CreatedDate" });
            DropIndex("Groups.GroupUser", new[] { "CreatedDate" });
            DropIndex("Groups.Group", new[] { "CreatedDate" });
            DropIndex("Messaging.EmailType", new[] { "CreatedDate" });
            DropIndex("Messaging.EmailStatus", new[] { "CreatedDate" });
            DropIndex("Messaging.EmailTemplate", new[] { "CreatedDate" });
            DropIndex("Messaging.MessageRecipient", new[] { "CreatedDate" });
            DropIndex("Messaging.Conversation", new[] { "CreatedDate" });
            DropIndex("Messaging.ConversationUser", new[] { "CreatedDate" });
            DropIndex("Discounts.CartDiscounts", new[] { "CreatedDate" });
            DropIndex("Shopping.CartContact", new[] { "CreatedDate" });
            DropIndex("Shopping.Cart", "Unq_BySessionTypeUserActive");
            DropIndex("Shopping.Cart", new[] { "TypeID" });
            DropIndex("Shopping.Cart", new[] { "StateID" });
            DropIndex("Shopping.Cart", new[] { "StatusID" });
            DropIndex("Discounts.CartItemDiscounts", new[] { "CreatedDate" });
            DropIndex("Shopping.CartItem", new[] { "StatusID" });
            DropIndex("Products.Product", new[] { "TypeID" });
            DropIndex("Products.ProductCategory", new[] { "CreatedDate" });
            DropIndex("Discounts.DiscountCategories", new[] { "CreatedDate" });
            DropIndex("Discounts.Discount", new[] { "CreatedDate" });
            DropIndex("Discounts.SalesInvoiceDiscounts", new[] { "CreatedDate" });
            DropIndex("Invoicing.SalesInvoiceContact", new[] { "CreatedDate" });
            DropIndex("Invoicing.SalesInvoice", new[] { "TypeID" });
            DropIndex("Invoicing.SalesInvoice", new[] { "StateID" });
            DropIndex("Invoicing.SalesInvoice", new[] { "StatusID" });
            DropIndex("Invoicing.SalesInvoice", new[] { "CreatedDate" });
            DropIndex("Invoicing.SalesOrderSalesInvoice", new[] { "CreatedDate" });
            DropIndex("Ordering.SalesOrder", new[] { "TypeID" });
            DropIndex("Ordering.SalesOrder", new[] { "StateID" });
            DropIndex("Ordering.SalesOrder", new[] { "StatusID" });
            DropIndex("Purchasing.SalesOrderPurchaseOrder", new[] { "CreatedDate" });
            DropIndex("Purchasing.PurchaseOrder", new[] { "TypeID" });
            DropIndex("Purchasing.PurchaseOrder", new[] { "StateID" });
            DropIndex("Purchasing.PurchaseOrder", new[] { "StatusID" });
            DropIndex("Tax.TaxCountry", new[] { "CreatedDate" });
            DropIndex("Tax.TaxRegion", new[] { "CreatedDate" });
            DropIndex("Geography.RegionLanguage", new[] { "CreatedDate" });
            DropIndex("Geography.InterRegion", new[] { "CreatedDate" });
            DropIndex("Tax.TaxDistrict", new[] { "CreatedDate" });
            DropIndex("Geography.DistrictLanguage", new[] { "CreatedDate" });
            DropIndex("Geography.DistrictCurrency", new[] { "CreatedDate" });
            DropIndex("Geography.RegionCurrency", new[] { "CreatedDate" });
            DropIndex("Globalization.Language", new[] { "CreatedDate" });
            DropIndex("Geography.CountryLanguage", new[] { "CreatedDate" });
            DropIndex("Geography.CountryCurrency", new[] { "CreatedDate" });
            DropIndex("Geography.Address", new[] { "CreatedDate" });
            DropIndex("Contacts.Contact", new[] { "TypeID" });
            DropIndex("Stores.StoreSiteDomain", new[] { "CreatedDate" });
            DropIndex("Stores.SocialProvider", new[] { "CreatedDate" });
            DropIndex("Stores.SiteDomainSocialProvider", new[] { "CreatedDate" });
            DropIndex("Stores.SiteDomain", new[] { "CreatedDate" });
            DropIndex("Stores.BrandSiteDomain", new[] { "CreatedDate" });
            DropIndex("Stores.BrandStore", new[] { "CreatedDate" });
            DropIndex("Stores.Store", new[] { "TypeID" });
            DropIndex("Stores.StoreAccount", new[] { "CreatedDate" });
            DropIndex("Pricing.PricePoint", new[] { "CreatedDate" });
            DropIndex("Accounts.Account", new[] { "CreditCurrencyID" });
            AlterColumn("Products.ProductAssociation", "TypeID", c => c.Int());
            AlterColumn("Shipping.Package", "TypeID", c => c.Int());
            AlterColumn("Sampling.SampleRequestItem", "StatusID", c => c.Int());
            AlterColumn("Sampling.SampleRequest", "TypeID", c => c.Int());
            AlterColumn("Sampling.SampleRequest", "StateID", c => c.Int());
            AlterColumn("Sampling.SampleRequest", "StatusID", c => c.Int());
            AlterColumn("Ordering.SalesOrderItem", "StatusID", c => c.Int());
            AlterColumn("Invoicing.SalesInvoiceItem", "StatusID", c => c.Int());
            AlterColumn("Purchasing.PurchaseOrderItem", "StatusID", c => c.Int());
            AlterColumn("Quoting.SalesQuoteItem", "StatusID", c => c.Int());
            AlterColumn("Payments.Payment", "TypeID", c => c.Int());
            AlterColumn("Payments.Payment", "StatusID", c => c.Int());
            AlterColumn("Returning.SalesReturnItem", "StatusID", c => c.Int());
            AlterColumn("Returning.SalesReturn", "TypeID", c => c.Int());
            AlterColumn("Returning.SalesReturn", "StateID", c => c.Int());
            AlterColumn("Returning.SalesReturn", "StatusID", c => c.Int());
            AlterColumn("Quoting.SalesQuote", "TypeID", c => c.Int());
            AlterColumn("Quoting.SalesQuote", "StateID", c => c.Int());
            AlterColumn("Quoting.SalesQuote", "StatusID", c => c.Int());
            AlterColumn("Stores.StoreInventoryLocation", "TypeID", c => c.Int());
            AlterColumn("Shipping.Shipment", "TypeID", c => c.Int());
            AlterColumn("Shipping.Shipment", "StatusID", c => c.Int());
            AlterColumn("Reviews.Review", "TypeID", c => c.Int());
            AlterColumn("Shopping.Cart", "TypeID", c => c.Int());
            AlterColumn("Shopping.Cart", "StateID", c => c.Int());
            AlterColumn("Shopping.Cart", "StatusID", c => c.Int());
            AlterColumn("Shopping.CartItem", "StatusID", c => c.Int());
            AlterColumn("Products.Product", "TypeID", c => c.Int());
            AlterColumn("Invoicing.SalesInvoice", "TypeID", c => c.Int());
            AlterColumn("Invoicing.SalesInvoice", "StateID", c => c.Int());
            AlterColumn("Invoicing.SalesInvoice", "StatusID", c => c.Int());
            AlterColumn("Ordering.SalesOrder", "TypeID", c => c.Int());
            AlterColumn("Ordering.SalesOrder", "StateID", c => c.Int());
            AlterColumn("Ordering.SalesOrder", "StatusID", c => c.Int());
            AlterColumn("Purchasing.PurchaseOrder", "TypeID", c => c.Int());
            AlterColumn("Purchasing.PurchaseOrder", "StateID", c => c.Int());
            AlterColumn("Purchasing.PurchaseOrder", "StatusID", c => c.Int());
            AlterColumn("Contacts.Contact", "TypeID", c => c.Int());
            AlterColumn("Stores.Store", "TypeID", c => c.Int());
            DropColumn("Accounts.Account", "CreditCurrencyID");
            DropColumn("Accounts.Account", "Credit");
            CreateIndex("Products.ProductAssociation", "TypeID");
            CreateIndex("Shipping.Package", "TypeID");
            CreateIndex("Sampling.SampleRequestItem", "StatusID");
            CreateIndex("Sampling.SampleRequest", "TypeID");
            CreateIndex("Sampling.SampleRequest", "StateID");
            CreateIndex("Sampling.SampleRequest", "StatusID");
            CreateIndex("Ordering.SalesOrderItem", "StatusID");
            CreateIndex("Invoicing.SalesInvoiceItem", "StatusID");
            CreateIndex("Purchasing.PurchaseOrderItem", "StatusID");
            CreateIndex("Quoting.SalesQuoteItem", "StatusID");
            CreateIndex("Payments.Payment", "TypeID");
            CreateIndex("Payments.Payment", "StatusID");
            CreateIndex("Returning.SalesReturnItem", "StatusID");
            CreateIndex("Returning.SalesReturn", "TypeID");
            CreateIndex("Returning.SalesReturn", "StateID");
            CreateIndex("Returning.SalesReturn", "StatusID");
            CreateIndex("Quoting.SalesQuote", "TypeID");
            CreateIndex("Quoting.SalesQuote", "StateID");
            CreateIndex("Quoting.SalesQuote", "StatusID");
            CreateIndex("Stores.StoreInventoryLocation", "TypeID");
            CreateIndex("Shipping.Shipment", "TypeID");
            CreateIndex("Shipping.Shipment", "StatusID");
            CreateIndex("Reviews.Review", "TypeID");
            CreateIndex("Shopping.Cart", new[] { "SessionID", "TypeID", "UserID" }, unique: true, name: "Unq_BySessionTypeUserActive");
            CreateIndex("Shopping.Cart", "TypeID");
            CreateIndex("Shopping.Cart", "StateID");
            CreateIndex("Shopping.Cart", "StatusID");
            CreateIndex("Shopping.CartItem", "StatusID");
            CreateIndex("Products.Product", "TypeID");
            CreateIndex("Invoicing.SalesInvoice", "TypeID");
            CreateIndex("Invoicing.SalesInvoice", "StateID");
            CreateIndex("Invoicing.SalesInvoice", "StatusID");
            CreateIndex("Ordering.SalesOrder", "TypeID");
            CreateIndex("Ordering.SalesOrder", "StateID");
            CreateIndex("Ordering.SalesOrder", "StatusID");
            CreateIndex("Purchasing.PurchaseOrder", "TypeID");
            CreateIndex("Purchasing.PurchaseOrder", "StateID");
            CreateIndex("Purchasing.PurchaseOrder", "StatusID");
            CreateIndex("Contacts.Contact", "TypeID");
            CreateIndex("Stores.Store", "TypeID");
            AddForeignKey("Products.ProductAssociation", "TypeID", "Products.ProductAssociationType", "ID");
            AddForeignKey("Shipping.Package", "TypeID", "Shipping.PackageType", "ID");
            AddForeignKey("Sampling.SampleRequestItem", "StatusID", "Sampling.SampleRequestItemStatus", "ID");
            AddForeignKey("Sampling.SampleRequest", "TypeID", "Sampling.SampleRequestType", "ID");
            AddForeignKey("Sampling.SampleRequest", "StatusID", "Sampling.SampleRequestStatus", "ID");
            AddForeignKey("Sampling.SampleRequest", "StateID", "Sampling.SampleRequestState", "ID");
            AddForeignKey("Ordering.SalesOrderItem", "StatusID", "Ordering.SalesOrderItemStatus", "ID");
            AddForeignKey("Invoicing.SalesInvoiceItem", "StatusID", "Invoicing.SalesInvoiceItemStatus", "ID");
            AddForeignKey("Purchasing.PurchaseOrderItem", "StatusID", "Purchasing.PurchaseOrderItemStatus", "ID");
            AddForeignKey("Quoting.SalesQuoteItem", "StatusID", "Quoting.SalesQuoteItemStatus", "ID");
            AddForeignKey("Payments.Payment", "TypeID", "Payments.PaymentType", "ID");
            AddForeignKey("Payments.Payment", "StatusID", "Payments.PaymentStatus", "ID");
            AddForeignKey("Returning.SalesReturnItem", "StatusID", "Returning.SalesReturnItemStatus", "ID");
            AddForeignKey("Returning.SalesReturn", "TypeID", "Returning.SalesReturnType", "ID");
            AddForeignKey("Returning.SalesReturn", "StatusID", "Returning.SalesReturnStatus", "ID");
            AddForeignKey("Returning.SalesReturn", "StateID", "Returning.SalesReturnState", "ID");
            AddForeignKey("Quoting.SalesQuote", "TypeID", "Quoting.SalesQuoteType", "ID");
            AddForeignKey("Quoting.SalesQuote", "StatusID", "Quoting.SalesQuoteStatus", "ID");
            AddForeignKey("Quoting.SalesQuote", "StateID", "Quoting.SalesQuoteState", "ID");
            AddForeignKey("Stores.StoreInventoryLocation", "TypeID", "Stores.StoreInventoryLocationType", "ID");
            AddForeignKey("Shipping.Shipment", "TypeID", "Shipping.ShipmentType", "ID");
            AddForeignKey("Shipping.Shipment", "StatusID", "Shipping.ShipmentStatus", "ID");
            AddForeignKey("Reviews.Review", "TypeID", "Reviews.ReviewType", "ID");
            AddForeignKey("Shopping.Cart", "TypeID", "Shopping.CartType", "ID");
            AddForeignKey("Shopping.Cart", "StatusID", "Shopping.CartStatus", "ID");
            AddForeignKey("Shopping.Cart", "StateID", "Shopping.CartState", "ID");
            AddForeignKey("Shopping.CartItem", "StatusID", "Shopping.CartItemStatus", "ID");
            AddForeignKey("Products.Product", "TypeID", "Products.ProductType", "ID");
            AddForeignKey("Invoicing.SalesInvoice", "TypeID", "Invoicing.SalesInvoiceType", "ID");
            AddForeignKey("Invoicing.SalesInvoice", "StatusID", "Invoicing.SalesInvoiceStatus", "ID");
            AddForeignKey("Invoicing.SalesInvoice", "StateID", "Invoicing.SalesInvoiceState", "ID");
            AddForeignKey("Ordering.SalesOrder", "TypeID", "Ordering.SalesOrderType", "ID");
            AddForeignKey("Ordering.SalesOrder", "StatusID", "Ordering.SalesOrderStatus", "ID");
            AddForeignKey("Ordering.SalesOrder", "StateID", "Ordering.SalesOrderState", "ID");
            AddForeignKey("Purchasing.PurchaseOrder", "TypeID", "Purchasing.PurchaseOrderType", "ID");
            AddForeignKey("Purchasing.PurchaseOrder", "StatusID", "Purchasing.PurchaseOrderStatus", "ID");
            AddForeignKey("Purchasing.PurchaseOrder", "StateID", "Purchasing.PurchaseOrderState", "ID");
            AddForeignKey("Contacts.Contact", "TypeID", "Contacts.ContactType", "ID");
            AddForeignKey("Stores.Store", "TypeID", "Stores.StoreType", "ID");
        }
    }
}
