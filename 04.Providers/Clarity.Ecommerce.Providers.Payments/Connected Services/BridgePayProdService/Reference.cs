//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
namespace Clarity.Ecommerce.Providers.Payments.BridgePayProdService
{
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Clarity.Ecommerce.Providers.Payments.BridgePayProdService.VoidRefundObjectResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Clarity.Ecommerce.Providers.Payments.BridgePayProdService.MerchantInfoObjectResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Clarity.Ecommerce.Providers.Payments.BridgePayProdService.TokenObjectResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Clarity.Ecommerce.Providers.Payments.BridgePayProdService.AuthObjectResponse))]
    public partial class BaseObjectResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatewayMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatewayResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatewayTransIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GatewayMessage {
            get {
                return this.GatewayMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.GatewayMessageField, value) != true)) {
                    this.GatewayMessageField = value;
                    this.RaisePropertyChanged("GatewayMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GatewayResult {
            get {
                return this.GatewayResultField;
            }
            set {
                if ((object.ReferenceEquals(this.GatewayResultField, value) != true)) {
                    this.GatewayResultField = value;
                    this.RaisePropertyChanged("GatewayResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GatewayTransId {
            get {
                return this.GatewayTransIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GatewayTransIdField, value) != true)) {
                    this.GatewayTransIdField = value;
                    this.RaisePropertyChanged("GatewayTransId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoidRefundObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    [System.SerializableAttribute()]
    public partial class VoidRefundObjectResponse : Clarity.Ecommerce.Providers.Payments.BridgePayProdService.BaseObjectResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerchantAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemainingAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantAccountCode {
            get {
                return this.MerchantAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MerchantAccountCodeField, value) != true)) {
                    this.MerchantAccountCodeField = value;
                    this.RaisePropertyChanged("MerchantAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemainingAmount {
            get {
                return this.RemainingAmountField;
            }
            set {
                if ((this.RemainingAmountField.Equals(value) != true)) {
                    this.RemainingAmountField = value;
                    this.RaisePropertyChanged("RemainingAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseType {
            get {
                return this.ResponseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseTypeField, value) != true)) {
                    this.ResponseTypeField = value;
                    this.RaisePropertyChanged("ResponseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionCode {
            get {
                return this.TransactionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionCodeField, value) != true)) {
                    this.TransactionCodeField = value;
                    this.RaisePropertyChanged("TransactionCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MerchantInfoObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    [System.SerializableAttribute()]
    public partial class MerchantInfoObjectResponse : Clarity.Ecommerce.Providers.Payments.BridgePayProdService.BaseObjectResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerchantAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerchantCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerchantNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantAccountCode {
            get {
                return this.MerchantAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MerchantAccountCodeField, value) != true)) {
                    this.MerchantAccountCodeField = value;
                    this.RaisePropertyChanged("MerchantAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantCode {
            get {
                return this.MerchantCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MerchantCodeField, value) != true)) {
                    this.MerchantCodeField = value;
                    this.RaisePropertyChanged("MerchantCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantName {
            get {
                return this.MerchantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MerchantNameField, value) != true)) {
                    this.MerchantNameField = value;
                    this.RaisePropertyChanged("MerchantName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TokenObjectResponse : Clarity.Ecommerce.Providers.Payments.BridgePayProdService.BaseObjectResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    [System.SerializableAttribute()]
    public partial class AuthObjectResponse : Clarity.Ecommerce.Providers.Payments.BridgePayProdService.BaseObjectResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AVSMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AVSResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorizedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CVMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CVResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CashBackAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCommercialCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemainingAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetMatchMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WalletIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WalletPaymentMethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WalletResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WalletResponseMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipMatchMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AVSMessage {
            get {
                return this.AVSMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.AVSMessageField, value) != true)) {
                    this.AVSMessageField = value;
                    this.RaisePropertyChanged("AVSMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AVSResult {
            get {
                return this.AVSResultField;
            }
            set {
                if ((object.ReferenceEquals(this.AVSResultField, value) != true)) {
                    this.AVSResultField = value;
                    this.RaisePropertyChanged("AVSResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationCode {
            get {
                return this.AuthorizationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationCodeField, value) != true)) {
                    this.AuthorizationCodeField = value;
                    this.RaisePropertyChanged("AuthorizationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorizedAmount {
            get {
                return this.AuthorizedAmountField;
            }
            set {
                if ((this.AuthorizedAmountField.Equals(value) != true)) {
                    this.AuthorizedAmountField = value;
                    this.RaisePropertyChanged("AuthorizedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CVMessage {
            get {
                return this.CVMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CVMessageField, value) != true)) {
                    this.CVMessageField = value;
                    this.RaisePropertyChanged("CVMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CVResult {
            get {
                return this.CVResultField;
            }
            set {
                if ((object.ReferenceEquals(this.CVResultField, value) != true)) {
                    this.CVResultField = value;
                    this.RaisePropertyChanged("CVResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeField, value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CashBackAmount {
            get {
                return this.CashBackAmountField;
            }
            set {
                if ((this.CashBackAmountField.Equals(value) != true)) {
                    this.CashBackAmountField = value;
                    this.RaisePropertyChanged("CashBackAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpirationDateField, value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCommercialCard {
            get {
                return this.IsCommercialCardField;
            }
            set {
                if ((this.IsCommercialCardField.Equals(value) != true)) {
                    this.IsCommercialCardField = value;
                    this.RaisePropertyChanged("IsCommercialCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginalAmount {
            get {
                return this.OriginalAmountField;
            }
            set {
                if ((this.OriginalAmountField.Equals(value) != true)) {
                    this.OriginalAmountField = value;
                    this.RaisePropertyChanged("OriginalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemainingAmount {
            get {
                return this.RemainingAmountField;
            }
            set {
                if ((this.RemainingAmountField.Equals(value) != true)) {
                    this.RemainingAmountField = value;
                    this.RaisePropertyChanged("RemainingAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetMatchMessage {
            get {
                return this.StreetMatchMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetMatchMessageField, value) != true)) {
                    this.StreetMatchMessageField = value;
                    this.RaisePropertyChanged("StreetMatchMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionCode {
            get {
                return this.TransactionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionCodeField, value) != true)) {
                    this.TransactionCodeField = value;
                    this.RaisePropertyChanged("TransactionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletID {
            get {
                return this.WalletIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WalletIDField, value) != true)) {
                    this.WalletIDField = value;
                    this.RaisePropertyChanged("WalletID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletPaymentMethodID {
            get {
                return this.WalletPaymentMethodIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WalletPaymentMethodIDField, value) != true)) {
                    this.WalletPaymentMethodIDField = value;
                    this.RaisePropertyChanged("WalletPaymentMethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletResponseCode {
            get {
                return this.WalletResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WalletResponseCodeField, value) != true)) {
                    this.WalletResponseCodeField = value;
                    this.RaisePropertyChanged("WalletResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletResponseMessage {
            get {
                return this.WalletResponseMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.WalletResponseMessageField, value) != true)) {
                    this.WalletResponseMessageField = value;
                    this.RaisePropertyChanged("WalletResponseMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipMatchMessage {
            get {
                return this.ZipMatchMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipMatchMessageField, value) != true)) {
                    this.ZipMatchMessageField = value;
                    this.RaisePropertyChanged("ZipMatchMessage");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://bridgepaynetsecuretx.com/requesthandler", ConfigurationName="BridgePayProdService.IRequestHandler")]
    public interface IRequestHandler {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessRequest", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessRequestResp" +
            "onse")]
        string ProcessRequest(string requestMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessRequest", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessRequestResp" +
            "onse")]
        System.Threading.Tasks.Task<string> ProcessRequestAsync(string requestMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessJsonRequest" +
            "", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessJsonRequest" +
            "Response")]
        string ProcessJsonRequest(string requestMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessJsonRequest" +
            "", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessJsonRequest" +
            "Response")]
        System.Threading.Tasks.Task<string> ProcessJsonRequestAsync(string requestMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkAuth" +
            "", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkAuth" +
            "Response")]
        Clarity.Ecommerce.Providers.Payments.BridgePayProdService.AuthObjectResponse ProcessWebLinkAuth(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkAuth" +
            "", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkAuth" +
            "Response")]
        System.Threading.Tasks.Task<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.AuthObjectResponse> ProcessWebLinkAuthAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkVoid" +
            "Refund", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkVoid" +
            "RefundResponse")]
        Clarity.Ecommerce.Providers.Payments.BridgePayProdService.VoidRefundObjectResponse ProcessWebLinkVoidRefund(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkVoid" +
            "Refund", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkVoid" +
            "RefundResponse")]
        System.Threading.Tasks.Task<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.VoidRefundObjectResponse> ProcessWebLinkVoidRefundAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetMerchantInfo", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetMerchantInfoRes" +
            "ponse")]
        Clarity.Ecommerce.Providers.Payments.BridgePayProdService.MerchantInfoObjectResponse GetMerchantInfo(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetMerchantInfo", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetMerchantInfoRes" +
            "ponse")]
        System.Threading.Tasks.Task<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.MerchantInfoObjectResponse> GetMerchantInfoAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetToken", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetTokenResponse")]
        Clarity.Ecommerce.Providers.Payments.BridgePayProdService.TokenObjectResponse GetToken(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetToken", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetTokenResponse")]
        System.Threading.Tasks.Task<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.TokenObjectResponse> GetTokenAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestHandlerChannel : Clarity.Ecommerce.Providers.Payments.BridgePayProdService.IRequestHandler, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestHandlerClient : System.ServiceModel.ClientBase<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.IRequestHandler>, Clarity.Ecommerce.Providers.Payments.BridgePayProdService.IRequestHandler {
        
        public RequestHandlerClient() {
        }
        
        public RequestHandlerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequestHandlerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestHandlerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestHandlerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ProcessRequest(string requestMsg) {
            return base.Channel.ProcessRequest(requestMsg);
        }
        
        public System.Threading.Tasks.Task<string> ProcessRequestAsync(string requestMsg) {
            return base.Channel.ProcessRequestAsync(requestMsg);
        }
        
        public string ProcessJsonRequest(string requestMsg) {
            return base.Channel.ProcessJsonRequest(requestMsg);
        }
        
        public System.Threading.Tasks.Task<string> ProcessJsonRequestAsync(string requestMsg) {
            return base.Channel.ProcessJsonRequestAsync(requestMsg);
        }
        
        public Clarity.Ecommerce.Providers.Payments.BridgePayProdService.AuthObjectResponse ProcessWebLinkAuth(System.Collections.Generic.Dictionary<string, string> nameValuePairs) {
            return base.Channel.ProcessWebLinkAuth(nameValuePairs);
        }
        
        public System.Threading.Tasks.Task<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.AuthObjectResponse> ProcessWebLinkAuthAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs) {
            return base.Channel.ProcessWebLinkAuthAsync(nameValuePairs);
        }
        
        public Clarity.Ecommerce.Providers.Payments.BridgePayProdService.VoidRefundObjectResponse ProcessWebLinkVoidRefund(System.Collections.Generic.Dictionary<string, string> nameValuePairs) {
            return base.Channel.ProcessWebLinkVoidRefund(nameValuePairs);
        }
        
        public System.Threading.Tasks.Task<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.VoidRefundObjectResponse> ProcessWebLinkVoidRefundAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs) {
            return base.Channel.ProcessWebLinkVoidRefundAsync(nameValuePairs);
        }
        
        public Clarity.Ecommerce.Providers.Payments.BridgePayProdService.MerchantInfoObjectResponse GetMerchantInfo(System.Collections.Generic.Dictionary<string, string> nameValuePairs) {
            return base.Channel.GetMerchantInfo(nameValuePairs);
        }
        
        public System.Threading.Tasks.Task<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.MerchantInfoObjectResponse> GetMerchantInfoAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs) {
            return base.Channel.GetMerchantInfoAsync(nameValuePairs);
        }
        
        public Clarity.Ecommerce.Providers.Payments.BridgePayProdService.TokenObjectResponse GetToken(System.Collections.Generic.Dictionary<string, string> nameValuePairs) {
            return base.Channel.GetToken(nameValuePairs);
        }
        
        public System.Threading.Tasks.Task<Clarity.Ecommerce.Providers.Payments.BridgePayProdService.TokenObjectResponse> GetTokenAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs) {
            return base.Channel.GetTokenAsync(nameValuePairs);
        }
    }
}
