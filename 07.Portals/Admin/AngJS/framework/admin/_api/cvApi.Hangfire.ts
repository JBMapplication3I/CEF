/**
 * @file framework/admin/_api/cvApi.Hangfire.ts
 * @author Copyright (c) 2015-2023 clarity-ventures.com. All rights reserved.
 * @desc The Angular Service module written in TypeScript
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Admin/AngJS/framework/admin/_api/
 */
module cef.admin.api {

	/**
	 * Use to create a new scheduled job configuration.
	 * @see {@link ScheduledJobConfigurationModel}
	 * @public
	 */
	export interface CreateScheduledJobConfigurationDto extends ScheduledJobConfigurationModel {
	}
	/**
	 * Use to create a new scheduled job configuration setting.
	 * @see {@link ScheduledJobConfigurationSettingModel}
	 * @public
	 */
	export interface CreateScheduledJobConfigurationSettingDto extends ScheduledJobConfigurationSettingModel {
	}
	/**
	 * Use to get a list of scheduled job configurations
	 * @see {@link ScheduledJobConfigurationSearchModel}
	 * @public
	 */
	export interface GetScheduledJobConfigurationsDto extends ScheduledJobConfigurationSearchModel {
	}
	/**
	 * Use to get a list of scheduled job configuration settings
	 * @see {@link ScheduledJobConfigurationSettingSearchModel}
	 * @public
	 */
	export interface GetScheduledJobConfigurationSettingsDto extends ScheduledJobConfigurationSettingSearchModel {
	}
	/**
	 * Use to update an existing scheduled job configuration.
	 * @see {@link ScheduledJobConfigurationModel}
	 * @public
	 */
	export interface UpdateScheduledJobConfigurationDto extends ScheduledJobConfigurationModel {
	}
	/**
	 * Use to update an existing scheduled job configuration setting.
	 * @see {@link ScheduledJobConfigurationSettingModel}
	 * @public
	 */
	export interface UpdateScheduledJobConfigurationSettingDto extends ScheduledJobConfigurationSettingModel {
	}

	export class Hangfire extends ServiceStackRoute {
		/**
		 * Empties the server-side data cache for all scheduled job configuration calls.
		 * @param {@link cef.admin.api.ClearScheduledJobConfigurationCacheDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearScheduledJobConfigurationCache
		 * @path <API Root>/Hangfire/ScheduledJobConfiguration/ClearCache
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<boolean>}
		 * @public
		 */
		ClearScheduledJobConfigurationCache = () => this.$http<boolean>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfiguration", "ClearCache"].join("/"),
			method: "DELETE",
		});

		/**
		 * Empties the server-side data cache for all scheduled job configuration setting calls.
		 * @param {@link cef.admin.api.ClearScheduledJobConfigurationSettingCacheDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearScheduledJobConfigurationSettingCache
		 * @path <API Root>/Hangfire/ScheduledJobConfigurationSetting/ClearCache
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<boolean>}
		 * @public
		 */
		ClearScheduledJobConfigurationSettingCache = () => this.$http<boolean>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurationSetting", "ClearCache"].join("/"),
			method: "DELETE",
		});

		/**
		 * Use to create a new scheduled job configuration.
		 * @param {@link cef.admin.api.CreateScheduledJobConfigurationDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateScheduledJobConfiguration
		 * @path <API Root>/Hangfire/ScheduledJobConfiguration/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateScheduledJobConfiguration = (routeParams?: CreateScheduledJobConfigurationDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfiguration", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Use to create a new scheduled job configuration setting.
		 * @param {@link cef.admin.api.CreateScheduledJobConfigurationSettingDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateScheduledJobConfigurationSetting
		 * @path <API Root>/Hangfire/ScheduledJobConfigurationSetting/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateScheduledJobConfigurationSetting = (routeParams?: CreateScheduledJobConfigurationSettingDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurationSetting", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Deactivate a specific scheduled job configuration from the system [Soft-Delete]
		 * @param {@link cef.admin.api.DeactivateScheduledJobConfigurationByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeactivateScheduledJobConfigurationByID
		 * @path <API Root>/Hangfire/ScheduledJobConfiguration/Deactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeactivateScheduledJobConfigurationByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfiguration", "Deactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Deactivate a specific scheduled job configuration setting from the system [Soft-Delete]
		 * @param {@link cef.admin.api.DeactivateScheduledJobConfigurationSettingByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeactivateScheduledJobConfigurationSettingByID
		 * @path <API Root>/Hangfire/ScheduledJobConfigurationSetting/Deactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeactivateScheduledJobConfigurationSettingByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurationSetting", "Deactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Removes a specific scheduled job configuration from the system [Hard-Delete]
		 * @param {@link cef.admin.api.DeleteScheduledJobConfigurationByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeleteScheduledJobConfigurationByID
		 * @path <API Root>/Hangfire/ScheduledJobConfiguration/Delete/ID/{ID}
		 * @verb DELETE
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeleteScheduledJobConfigurationByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfiguration", "Delete", "ID", id].join("/"),
			method: "DELETE",
		});

		/**
		 * Removes a specific scheduled job configuration setting from the system [Hard-Delete]
		 * @param {@link cef.admin.api.DeleteScheduledJobConfigurationSettingByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeleteScheduledJobConfigurationSettingByID
		 * @path <API Root>/Hangfire/ScheduledJobConfigurationSetting/Delete/ID/{ID}
		 * @verb DELETE
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeleteScheduledJobConfigurationSettingByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurationSetting", "Delete", "ID", id].join("/"),
			method: "DELETE",
		});

		/**
		 * Use to get a specific scheduled job configuration
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetScheduledJobConfigurationByID
		 * @path <API Root>/Hangfire/ScheduledJobConfiguration/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<ScheduledJobConfigurationModel>}
		 * @public
		 */
		GetScheduledJobConfigurationByID = (id: number) => this.$http<ScheduledJobConfigurationModel>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfiguration", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a list of scheduled job configurations
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetScheduledJobConfigurations
		 * @path <API Root>/Hangfire/ScheduledJobConfigurations
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<ScheduledJobConfigurationPagedResults>}
		 * @public
		 */
		GetScheduledJobConfigurations = (routeParams?: GetScheduledJobConfigurationsDto) => this.$http<ScheduledJobConfigurationPagedResults>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurations"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a specific scheduled job configuration setting
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetScheduledJobConfigurationSettingByID
		 * @path <API Root>/Hangfire/ScheduledJobConfigurationSetting/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<ScheduledJobConfigurationSettingModel>}
		 * @public
		 */
		GetScheduledJobConfigurationSettingByID = (id: number) => this.$http<ScheduledJobConfigurationSettingModel>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurationSetting", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a list of scheduled job configuration settings
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetScheduledJobConfigurationSettings
		 * @path <API Root>/Hangfire/ScheduledJobConfigurationSettings
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<ScheduledJobConfigurationSettingPagedResults>}
		 * @public
		 */
		GetScheduledJobConfigurationSettings = (routeParams?: GetScheduledJobConfigurationSettingsDto) => this.$http<ScheduledJobConfigurationSettingPagedResults>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurationSettings"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Reactivate a specific scheduled job configuration from the system [Restore from Soft-Delete]
		 * @param {@link cef.admin.api.ReactivateScheduledJobConfigurationByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ReactivateScheduledJobConfigurationByID
		 * @path <API Root>/Hangfire/ScheduledJobConfiguration/Reactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ReactivateScheduledJobConfigurationByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfiguration", "Reactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Reactivate a specific scheduled job configuration setting from the system [Restore from Soft-Delete]
		 * @param {@link cef.admin.api.ReactivateScheduledJobConfigurationSettingByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ReactivateScheduledJobConfigurationSettingByID
		 * @path <API Root>/Hangfire/ScheduledJobConfigurationSetting/Reactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ReactivateScheduledJobConfigurationSettingByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurationSetting", "Reactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Use to update an existing scheduled job configuration.
		 * @param {@link cef.admin.api.UpdateScheduledJobConfigurationDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateScheduledJobConfiguration
		 * @path <API Root>/Hangfire/ScheduledJobConfiguration/Update
		 * @verb PUT
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		UpdateScheduledJobConfiguration = (routeParams?: UpdateScheduledJobConfigurationDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfiguration", "Update"].join("/"),
			method: "PUT",
			data: routeParams
		});

		/**
		 * Use to update an existing scheduled job configuration setting.
		 * @param {@link cef.admin.api.UpdateScheduledJobConfigurationSettingDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateScheduledJobConfigurationSetting
		 * @path <API Root>/Hangfire/ScheduledJobConfigurationSetting/Update
		 * @verb PUT
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		UpdateScheduledJobConfigurationSetting = (routeParams?: UpdateScheduledJobConfigurationSettingDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Hangfire", "ScheduledJobConfigurationSetting", "Update"].join("/"),
			method: "PUT",
			data: routeParams
		});

	}
}
