/**
 * @file framework/admin/_api/cvApi.Favorites.ts
 * @author Copyright (c) 2015-2023 clarity-ventures.com. All rights reserved.
 * @desc The Angular Service module written in TypeScript
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Admin/AngJS/framework/admin/_api/
 */
module cef.admin.api {

	/**
	 * Use to create a new favorite category.
	 * @see {@link FavoriteCategoryModel}
	 * @public
	 */
	export interface CreateFavoriteCategoryDto extends FavoriteCategoryModel {
	}
	/**
	 * Use to create a new favorite manufacturer.
	 * @see {@link FavoriteManufacturerModel}
	 * @public
	 */
	export interface CreateFavoriteManufacturerDto extends FavoriteManufacturerModel {
	}
	/**
	 * Use to create a new favorite ship carrier.
	 * @see {@link FavoriteShipCarrierModel}
	 * @public
	 */
	export interface CreateFavoriteShipCarrierDto extends FavoriteShipCarrierModel {
	}
	/**
	 * Use to create a new favorite store.
	 * @see {@link FavoriteStoreModel}
	 * @public
	 */
	export interface CreateFavoriteStoreDto extends FavoriteStoreModel {
	}
	/**
	 * Use to create a new favorite vendor.
	 * @see {@link FavoriteVendorModel}
	 * @public
	 */
	export interface CreateFavoriteVendorDto extends FavoriteVendorModel {
	}
	/**
	 * Use to get a list of favorite categories
	 * @see {@link FavoriteCategorySearchModel}
	 * @public
	 */
	export interface GetFavoriteCategoriesDto extends FavoriteCategorySearchModel {
	}
	/**
	 * Use to get a list of favorite manufacturers
	 * @see {@link FavoriteManufacturerSearchModel}
	 * @public
	 */
	export interface GetFavoriteManufacturersDto extends FavoriteManufacturerSearchModel {
	}
	/**
	 * Use to get a list of favorite ship carriers
	 * @see {@link FavoriteShipCarrierSearchModel}
	 * @public
	 */
	export interface GetFavoriteShipCarriersDto extends FavoriteShipCarrierSearchModel {
	}
	/**
	 * Use to get a list of favorite stores
	 * @see {@link FavoriteStoreSearchModel}
	 * @public
	 */
	export interface GetFavoriteStoresDto extends FavoriteStoreSearchModel {
	}
	/**
	 * Use to get a list of favorite vendors
	 * @see {@link FavoriteVendorSearchModel}
	 * @public
	 */
	export interface GetFavoriteVendorsDto extends FavoriteVendorSearchModel {
	}
	/**
	 * Use to update an existing favorite category.
	 * @see {@link FavoriteCategoryModel}
	 * @public
	 */
	export interface UpdateFavoriteCategoryDto extends FavoriteCategoryModel {
	}
	/**
	 * Use to update an existing favorite manufacturer.
	 * @see {@link FavoriteManufacturerModel}
	 * @public
	 */
	export interface UpdateFavoriteManufacturerDto extends FavoriteManufacturerModel {
	}
	/**
	 * Use to update an existing favorite ship carrier.
	 * @see {@link FavoriteShipCarrierModel}
	 * @public
	 */
	export interface UpdateFavoriteShipCarrierDto extends FavoriteShipCarrierModel {
	}
	/**
	 * Use to update an existing favorite store.
	 * @see {@link FavoriteStoreModel}
	 * @public
	 */
	export interface UpdateFavoriteStoreDto extends FavoriteStoreModel {
	}
	/**
	 * Use to update an existing favorite vendor.
	 * @see {@link FavoriteVendorModel}
	 * @public
	 */
	export interface UpdateFavoriteVendorDto extends FavoriteVendorModel {
	}

	export class Favorites extends ServiceStackRoute {
		/**
		 * Empties the server-side data cache for all favorite category calls.
		 * @param {@link cef.admin.api.ClearFavoriteCategoryCacheDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearFavoriteCategoryCache
		 * @path <API Root>/Favorites/FavoriteCategory/ClearCache
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<boolean>}
		 * @public
		 */
		ClearFavoriteCategoryCache = () => this.$http<boolean>({
			url: [this.rootUrl, "Favorites", "FavoriteCategory", "ClearCache"].join("/"),
			method: "DELETE",
		});

		/**
		 * Empties the server-side data cache for all favorite manufacturer calls.
		 * @param {@link cef.admin.api.ClearFavoriteManufacturerCacheDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearFavoriteManufacturerCache
		 * @path <API Root>/Favorites/FavoriteManufacturer/ClearCache
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<boolean>}
		 * @public
		 */
		ClearFavoriteManufacturerCache = () => this.$http<boolean>({
			url: [this.rootUrl, "Favorites", "FavoriteManufacturer", "ClearCache"].join("/"),
			method: "DELETE",
		});

		/**
		 * Empties the server-side data cache for all favorite ship carrier calls.
		 * @param {@link cef.admin.api.ClearFavoriteShipCarrierCacheDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearFavoriteShipCarrierCache
		 * @path <API Root>/Favorites/FavoriteShipCarrier/ClearCache
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<boolean>}
		 * @public
		 */
		ClearFavoriteShipCarrierCache = () => this.$http<boolean>({
			url: [this.rootUrl, "Favorites", "FavoriteShipCarrier", "ClearCache"].join("/"),
			method: "DELETE",
		});

		/**
		 * Empties the server-side data cache for all favorite store calls.
		 * @param {@link cef.admin.api.ClearFavoriteStoreCacheDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearFavoriteStoreCache
		 * @path <API Root>/Favorites/FavoriteStore/ClearCache
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<boolean>}
		 * @public
		 */
		ClearFavoriteStoreCache = () => this.$http<boolean>({
			url: [this.rootUrl, "Favorites", "FavoriteStore", "ClearCache"].join("/"),
			method: "DELETE",
		});

		/**
		 * Empties the server-side data cache for all favorite vendor calls.
		 * @param {@link cef.admin.api.ClearFavoriteVendorCacheDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearFavoriteVendorCache
		 * @path <API Root>/Favorites/FavoriteVendor/ClearCache
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<boolean>}
		 * @public
		 */
		ClearFavoriteVendorCache = () => this.$http<boolean>({
			url: [this.rootUrl, "Favorites", "FavoriteVendor", "ClearCache"].join("/"),
			method: "DELETE",
		});

		/**
		 * Use to create a new favorite category.
		 * @param {@link cef.admin.api.CreateFavoriteCategoryDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateFavoriteCategory
		 * @path <API Root>/Favorites/FavoriteCategory/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateFavoriteCategory = (routeParams?: CreateFavoriteCategoryDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteCategory", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Use to create a new favorite manufacturer.
		 * @param {@link cef.admin.api.CreateFavoriteManufacturerDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateFavoriteManufacturer
		 * @path <API Root>/Favorites/FavoriteManufacturer/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateFavoriteManufacturer = (routeParams?: CreateFavoriteManufacturerDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteManufacturer", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Use to create a new favorite ship carrier.
		 * @param {@link cef.admin.api.CreateFavoriteShipCarrierDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateFavoriteShipCarrier
		 * @path <API Root>/Favorites/FavoriteShipCarrier/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateFavoriteShipCarrier = (routeParams?: CreateFavoriteShipCarrierDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteShipCarrier", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Use to create a new favorite store.
		 * @param {@link cef.admin.api.CreateFavoriteStoreDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateFavoriteStore
		 * @path <API Root>/Favorites/FavoriteStore/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateFavoriteStore = (routeParams?: CreateFavoriteStoreDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteStore", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Use to create a new favorite vendor.
		 * @param {@link cef.admin.api.CreateFavoriteVendorDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateFavoriteVendor
		 * @path <API Root>/Favorites/FavoriteVendor/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateFavoriteVendor = (routeParams?: CreateFavoriteVendorDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteVendor", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Deactivate a specific favorite category from the system [Soft-Delete]
		 * @param {@link cef.admin.api.DeactivateFavoriteCategoryByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeactivateFavoriteCategoryByID
		 * @path <API Root>/Favorites/FavoriteCategory/Deactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeactivateFavoriteCategoryByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteCategory", "Deactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Deactivate a specific favorite manufacturer from the system [Soft-Delete]
		 * @param {@link cef.admin.api.DeactivateFavoriteManufacturerByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeactivateFavoriteManufacturerByID
		 * @path <API Root>/Favorites/FavoriteManufacturer/Deactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeactivateFavoriteManufacturerByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteManufacturer", "Deactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Deactivate a specific favorite ship carrier from the system [Soft-Delete]
		 * @param {@link cef.admin.api.DeactivateFavoriteShipCarrierByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeactivateFavoriteShipCarrierByID
		 * @path <API Root>/Favorites/FavoriteShipCarrier/Deactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeactivateFavoriteShipCarrierByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteShipCarrier", "Deactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Deactivate a specific favorite store from the system [Soft-Delete]
		 * @param {@link cef.admin.api.DeactivateFavoriteStoreByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeactivateFavoriteStoreByID
		 * @path <API Root>/Favorites/FavoriteStore/Deactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeactivateFavoriteStoreByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteStore", "Deactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Deactivate a specific favorite vendor from the system [Soft-Delete]
		 * @param {@link cef.admin.api.DeactivateFavoriteVendorByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeactivateFavoriteVendorByID
		 * @path <API Root>/Favorites/FavoriteVendor/Deactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeactivateFavoriteVendorByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteVendor", "Deactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Removes a specific favorite category from the system [Hard-Delete]
		 * @param {@link cef.admin.api.DeleteFavoriteCategoryByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeleteFavoriteCategoryByID
		 * @path <API Root>/Favorites/FavoriteCategory/Delete/ID/{ID}
		 * @verb DELETE
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeleteFavoriteCategoryByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteCategory", "Delete", "ID", id].join("/"),
			method: "DELETE",
		});

		/**
		 * Removes a specific favorite manufacturer from the system [Hard-Delete]
		 * @param {@link cef.admin.api.DeleteFavoriteManufacturerByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeleteFavoriteManufacturerByID
		 * @path <API Root>/Favorites/FavoriteManufacturer/Delete/ID/{ID}
		 * @verb DELETE
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeleteFavoriteManufacturerByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteManufacturer", "Delete", "ID", id].join("/"),
			method: "DELETE",
		});

		/**
		 * Removes a specific favorite ship carrier from the system [Hard-Delete]
		 * @param {@link cef.admin.api.DeleteFavoriteShipCarrierByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeleteFavoriteShipCarrierByID
		 * @path <API Root>/Favorites/FavoriteShipCarrier/Delete/ID/{ID}
		 * @verb DELETE
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeleteFavoriteShipCarrierByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteShipCarrier", "Delete", "ID", id].join("/"),
			method: "DELETE",
		});

		/**
		 * Removes a specific favorite store from the system [Hard-Delete]
		 * @param {@link cef.admin.api.DeleteFavoriteStoreByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeleteFavoriteStoreByID
		 * @path <API Root>/Favorites/FavoriteStore/Delete/ID/{ID}
		 * @verb DELETE
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeleteFavoriteStoreByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteStore", "Delete", "ID", id].join("/"),
			method: "DELETE",
		});

		/**
		 * Removes a specific favorite vendor from the system [Hard-Delete]
		 * @param {@link cef.admin.api.DeleteFavoriteVendorByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeleteFavoriteVendorByID
		 * @path <API Root>/Favorites/FavoriteVendor/Delete/ID/{ID}
		 * @verb DELETE
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeleteFavoriteVendorByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteVendor", "Delete", "ID", id].join("/"),
			method: "DELETE",
		});

		/**
		 * Use to get a list of favorite categories
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteCategories
		 * @path <API Root>/Favorites/FavoriteCategories
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteCategoryPagedResults>}
		 * @public
		 */
		GetFavoriteCategories = (routeParams?: GetFavoriteCategoriesDto) => this.$http<FavoriteCategoryPagedResults>({
			url: [this.rootUrl, "Favorites", "FavoriteCategories"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a specific favorite category
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteCategoryByID
		 * @path <API Root>/Favorites/FavoriteCategory/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteCategoryModel>}
		 * @public
		 */
		GetFavoriteCategoryByID = (id: number) => this.$http<FavoriteCategoryModel>({
			url: [this.rootUrl, "Favorites", "FavoriteCategory", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a specific favorite manufacturer
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteManufacturerByID
		 * @path <API Root>/Favorites/FavoriteManufacturer/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteManufacturerModel>}
		 * @public
		 */
		GetFavoriteManufacturerByID = (id: number) => this.$http<FavoriteManufacturerModel>({
			url: [this.rootUrl, "Favorites", "FavoriteManufacturer", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a list of favorite manufacturers
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteManufacturers
		 * @path <API Root>/Favorites/FavoriteManufacturers
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteManufacturerPagedResults>}
		 * @public
		 */
		GetFavoriteManufacturers = (routeParams?: GetFavoriteManufacturersDto) => this.$http<FavoriteManufacturerPagedResults>({
			url: [this.rootUrl, "Favorites", "FavoriteManufacturers"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a specific favorite ship carrier
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteShipCarrierByID
		 * @path <API Root>/Favorites/FavoriteShipCarrier/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteShipCarrierModel>}
		 * @public
		 */
		GetFavoriteShipCarrierByID = (id: number) => this.$http<FavoriteShipCarrierModel>({
			url: [this.rootUrl, "Favorites", "FavoriteShipCarrier", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a list of favorite ship carriers
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteShipCarriers
		 * @path <API Root>/Favorites/FavoriteShipCarriers
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteShipCarrierPagedResults>}
		 * @public
		 */
		GetFavoriteShipCarriers = (routeParams?: GetFavoriteShipCarriersDto) => this.$http<FavoriteShipCarrierPagedResults>({
			url: [this.rootUrl, "Favorites", "FavoriteShipCarriers"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a specific favorite store
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteStoreByID
		 * @path <API Root>/Favorites/FavoriteStore/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteStoreModel>}
		 * @public
		 */
		GetFavoriteStoreByID = (id: number) => this.$http<FavoriteStoreModel>({
			url: [this.rootUrl, "Favorites", "FavoriteStore", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a list of favorite stores
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteStores
		 * @path <API Root>/Favorites/FavoriteStores
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteStorePagedResults>}
		 * @public
		 */
		GetFavoriteStores = (routeParams?: GetFavoriteStoresDto) => this.$http<FavoriteStorePagedResults>({
			url: [this.rootUrl, "Favorites", "FavoriteStores"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a specific favorite vendor
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteVendorByID
		 * @path <API Root>/Favorites/FavoriteVendor/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteVendorModel>}
		 * @public
		 */
		GetFavoriteVendorByID = (id: number) => this.$http<FavoriteVendorModel>({
			url: [this.rootUrl, "Favorites", "FavoriteVendor", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a list of favorite vendors
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetFavoriteVendors
		 * @path <API Root>/Favorites/FavoriteVendors
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<FavoriteVendorPagedResults>}
		 * @public
		 */
		GetFavoriteVendors = (routeParams?: GetFavoriteVendorsDto) => this.$http<FavoriteVendorPagedResults>({
			url: [this.rootUrl, "Favorites", "FavoriteVendors"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Reactivate a specific favorite category from the system [Restore from Soft-Delete]
		 * @param {@link cef.admin.api.ReactivateFavoriteCategoryByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ReactivateFavoriteCategoryByID
		 * @path <API Root>/Favorites/FavoriteCategory/Reactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ReactivateFavoriteCategoryByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteCategory", "Reactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Reactivate a specific favorite manufacturer from the system [Restore from Soft-Delete]
		 * @param {@link cef.admin.api.ReactivateFavoriteManufacturerByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ReactivateFavoriteManufacturerByID
		 * @path <API Root>/Favorites/FavoriteManufacturer/Reactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ReactivateFavoriteManufacturerByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteManufacturer", "Reactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Reactivate a specific favorite ship carrier from the system [Restore from Soft-Delete]
		 * @param {@link cef.admin.api.ReactivateFavoriteShipCarrierByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ReactivateFavoriteShipCarrierByID
		 * @path <API Root>/Favorites/FavoriteShipCarrier/Reactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ReactivateFavoriteShipCarrierByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteShipCarrier", "Reactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Reactivate a specific favorite store from the system [Restore from Soft-Delete]
		 * @param {@link cef.admin.api.ReactivateFavoriteStoreByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ReactivateFavoriteStoreByID
		 * @path <API Root>/Favorites/FavoriteStore/Reactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ReactivateFavoriteStoreByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteStore", "Reactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Reactivate a specific favorite vendor from the system [Restore from Soft-Delete]
		 * @param {@link cef.admin.api.ReactivateFavoriteVendorByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ReactivateFavoriteVendorByID
		 * @path <API Root>/Favorites/FavoriteVendor/Reactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ReactivateFavoriteVendorByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Favorites", "FavoriteVendor", "Reactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Use to update an existing favorite category.
		 * @param {@link cef.admin.api.UpdateFavoriteCategoryDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateFavoriteCategory
		 * @path <API Root>/Favorites/FavoriteCategory/Update
		 * @verb PUT
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		UpdateFavoriteCategory = (routeParams?: UpdateFavoriteCategoryDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteCategory", "Update"].join("/"),
			method: "PUT",
			data: routeParams
		});

		/**
		 * Use to update an existing favorite manufacturer.
		 * @param {@link cef.admin.api.UpdateFavoriteManufacturerDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateFavoriteManufacturer
		 * @path <API Root>/Favorites/FavoriteManufacturer/Update
		 * @verb PUT
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		UpdateFavoriteManufacturer = (routeParams?: UpdateFavoriteManufacturerDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteManufacturer", "Update"].join("/"),
			method: "PUT",
			data: routeParams
		});

		/**
		 * Use to update an existing favorite ship carrier.
		 * @param {@link cef.admin.api.UpdateFavoriteShipCarrierDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateFavoriteShipCarrier
		 * @path <API Root>/Favorites/FavoriteShipCarrier/Update
		 * @verb PUT
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		UpdateFavoriteShipCarrier = (routeParams?: UpdateFavoriteShipCarrierDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteShipCarrier", "Update"].join("/"),
			method: "PUT",
			data: routeParams
		});

		/**
		 * Use to update an existing favorite store.
		 * @param {@link cef.admin.api.UpdateFavoriteStoreDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateFavoriteStore
		 * @path <API Root>/Favorites/FavoriteStore/Update
		 * @verb PUT
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		UpdateFavoriteStore = (routeParams?: UpdateFavoriteStoreDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteStore", "Update"].join("/"),
			method: "PUT",
			data: routeParams
		});

		/**
		 * Use to update an existing favorite vendor.
		 * @param {@link cef.admin.api.UpdateFavoriteVendorDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateFavoriteVendor
		 * @path <API Root>/Favorites/FavoriteVendor/Update
		 * @verb PUT
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		UpdateFavoriteVendor = (routeParams?: UpdateFavoriteVendorDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Favorites", "FavoriteVendor", "Update"].join("/"),
			method: "PUT",
			data: routeParams
		});

	}
}
