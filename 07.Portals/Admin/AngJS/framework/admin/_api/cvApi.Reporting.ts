/**
 * @file framework/admin/_api/cvApi.Reporting.ts
 * @author Copyright (c) 2015-2023 clarity-ventures.com. All rights reserved.
 * @desc The Angular Service module written in TypeScript
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Admin/AngJS/framework/admin/_api/
 */
module cef.admin.api {

	/**
	 * Use to create a new report type.
	 * @see {@link ReportTypeModel}
	 * @public
	 */
	export interface CreateReportTypeDto extends ReportTypeModel {
	}
	/**
	 * Use to get a list of report types
	 * @see {@link ReportTypeSearchModel}
	 * @public
	 */
	export interface GetReportTypesDto extends ReportTypeSearchModel {
	}
	/**
	 * Use to update an existing report type.
	 * @see {@link ReportTypeModel}
	 * @public
	 */
	export interface UpdateReportTypeDto extends ReportTypeModel {
	}

	export class Reporting extends ServiceStackRoute {
		/**
		 * Empties the server-side data cache for all report type calls.
		 * @param {@link cef.admin.api.ClearReportTypeCacheDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearReportTypeCache
		 * @path <API Root>/Reporting/ReportType/ClearCache
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<boolean>}
		 * @public
		 */
		ClearReportTypeCache = () => this.$http<boolean>({
			url: [this.rootUrl, "Reporting", "ReportType", "ClearCache"].join("/"),
			method: "DELETE",
		});

		/**
		 * Use to create a new report type.
		 * @param {@link cef.admin.api.CreateReportTypeDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateReportType
		 * @path <API Root>/Reporting/ReportType/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateReportType = (routeParams?: CreateReportTypeDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Reporting", "ReportType", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Deactivate a specific report type from the system [Soft-Delete]
		 * @param {@link cef.admin.api.DeactivateReportTypeByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeactivateReportTypeByID
		 * @path <API Root>/Reporting/ReportType/Deactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeactivateReportTypeByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Reporting", "ReportType", "Deactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Removes a specific report type from the system [Hard-Delete]
		 * @param {@link cef.admin.api.DeleteReportTypeByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.DeleteReportTypeByID
		 * @path <API Root>/Reporting/ReportType/Delete/ID/{ID}
		 * @verb DELETE
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		DeleteReportTypeByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Reporting", "ReportType", "Delete", "ID", id].join("/"),
			method: "DELETE",
		});

		/**
		 * Use to get a specific report type
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetReportTypeByID
		 * @path <API Root>/Reporting/ReportType/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<ReportTypeModel>}
		 * @public
		 */
		GetReportTypeByID = (id: number) => this.$http<ReportTypeModel>({
			url: [this.rootUrl, "Reporting", "ReportType", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a list of report types
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetReportTypes
		 * @path <API Root>/Reporting/ReportTypes
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<ReportTypePagedResults>}
		 * @public
		 */
		GetReportTypes = (routeParams?: GetReportTypesDto) => this.$http<ReportTypePagedResults>({
			url: [this.rootUrl, "Reporting", "ReportTypes"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Reactivate a specific report type from the system [Restore from Soft-Delete]
		 * @param {@link cef.admin.api.ReactivateReportTypeByIDDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ReactivateReportTypeByID
		 * @path <API Root>/Reporting/ReportType/Reactivate/ID/{ID}
		 * @verb PATCH
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ReactivateReportTypeByID = (id: number) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Reporting", "ReportType", "Reactivate", "ID", id].join("/"),
			method: "PATCH",
		});

		/**
		 * Use to update an existing report type.
		 * @param {@link cef.admin.api.UpdateReportTypeDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateReportType
		 * @path <API Root>/Reporting/ReportType/Update
		 * @verb PUT
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		UpdateReportType = (routeParams?: UpdateReportTypeDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Reporting", "ReportType", "Update"].join("/"),
			method: "PUT",
			data: routeParams
		});

	}
}
