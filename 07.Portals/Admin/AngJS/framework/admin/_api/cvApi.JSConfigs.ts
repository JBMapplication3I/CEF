/**
 * @file framework/admin/_api/cvApi.JSConfigs.ts
 * @author Copyright (c) 2015-2023 clarity-ventures.com. All rights reserved.
 * @desc The Angular Service module written in TypeScript
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Admin/AngJS/framework/admin/_api/
 */
module cef.admin.api {

	/**
	 * Update the app settings values to the core config
	 * @public
	 */
	export interface UpdateAppSettingsDto {
		KeysToUpdate?: cefalt.admin.Dictionary<cefalt.admin.Dictionary<any>>;
	}

	export class JSConfigs extends ServiceStackRoute {
		/**
		 * Clears the caches for the JSConfigs endpoints
		 * @param {@link cef.admin.api.ClearJSConfigsCachesDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.ClearJSConfigsCaches
		 * @path <API Root>/JSConfigs/ClearCaches
		 * @verb DELETE
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		ClearJSConfigsCaches = () => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "JSConfigs", "ClearCaches"].join("/"),
			method: "DELETE",
		});

		/**
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetAdminCEFConfig
		 * @path <API Root>/JSConfigs/Admin
		 * @verb GET
		 * @returns {ng.IHttpPromise<void>}
		 * @public
		 */
		GetAdminCEFConfig = () => this.$http<void>({
			url: [this.rootUrl, "JSConfigs", "Admin"].join("/"),
			method: "GET",
		});

		/**
		 * Get the app settings values from the core config
		 * @param {@link cef.admin.api.GetAppSettingsDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetAppSettings
		 * @path <API Root>/JSConfigs/GetAppSettings
		 * @verb POST
		 * @returns {ng.IHttpPromise<CEFActionResponseT<cefalt.admin.Dictionary<cefalt.admin.Dictionary<any>>>>}
		 * @public
		 */
		GetAppSettings = () => this.$http<CEFActionResponseT<cefalt.admin.Dictionary<cefalt.admin.Dictionary<any>>>>({
			url: [this.rootUrl, "JSConfigs", "GetAppSettings"].join("/"),
			method: "POST",
		});

		/**
		 * Update the app settings values to the core config
		 * @param {@link cef.admin.api.UpdateAppSettingsDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.UpdateAppSettings
		 * @path <API Root>/JSConfigs/UpdateAppSettings
		 * @verb POST
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		UpdateAppSettings = (routeParams?: UpdateAppSettingsDto) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "JSConfigs", "UpdateAppSettings"].join("/"),
			method: "POST",
			data: routeParams
		});

	}
}
