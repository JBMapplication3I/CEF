<#@ assembly name="System.Core" #><#@
assembly name="System.Web.dll" #><#@
import namespace="System" #><#@
import namespace="System.Collections.Generic" #><#@
import namespace="System.Linq" #><#@
import namespace="System.Runtime.InteropServices" #><#@
import namespace="System.Reflection" #><#@
import namespace="ServiceStack" #><#@
import namespace="ServiceStack.CodeGenerator.TypeScript" #><#+
void GenerateSearchUserIntefaceFile(Type theType, string schema)
{
bool isType = theType.Name.Contains("Type");
bool isStatus = theType.Name.Contains("Status");
bool isState = theType.Name.Contains("State");
bool isOther = !(isType || isStatus || isState);
string grandParentState = isType || isOther ? "types" : isStatus ? "statuses" : isState ? "states" : "INVALID!";
string upperFirstGrandParentState = HelpFunctions.UpperFirstCharacter(grandParentState);
string pluralizeTypeName = HelpFunctions.PluralizeName(theType.Name);
string lowerFirstPluralizeTypeName = HelpFunctions.LowerFirstCharacter(pluralizeTypeName);
// NOTE: The permissions are not generated for each thing, they just use Types.Types etc
#><!--
<auto-generated>
<copyright file="<#= HelpFunctions.LowerFirstCharacter(theType.Name) #>.list.html" company="clarity-ventures.com">
Copyright (c) 2016-<#= DateTime.Today.Year #> clarity-ventures.com. All rights reserved.
</copyright>
<summary>The Type Detail/Editor UI</summary>
<remarks>This file was auto-generated by types.tt in the UI project</remarks>
</auto-generated>
-->
<cv-page caption="{{'ui.admin.common.<#= theType.Name #>.Manage' | translate}}" head-icon="fa-list"
ng-if="$root.cvSecurityService.hasPermission('Admin.<#= upperFirstGrandParentState #>')">
<cv-widget>
<widget-menu-item
caption="{{'ui.admin.common.<#= theType.Name #>.Add' | translate}}" icon-class="fa-plus"
click="$root.$state.go('<#= grandParentState #>.<#= lowerFirstPluralizeTypeName #>.detail',{ID:'New'})"
permission="'Admin.<#= upperFirstGrandParentState #>.Create'"
></widget-menu-item>
<widget-body ng-controller="SearchController as search">
<cv-grid show-pager="true" page-sizes="8,16,32,64,128,256,512,1024" server-paging="true"
filter-side="true" force-show-labels="true"
sortable="true" server-sorting="true"
on-search="search.searchTypes.get<#= HelpFunctions.PluralizeName(theType.Name) #>"
on-deactivate="search.searchTypes.deactivate<#= theType.Name #>"
on-reactivate="search.searchTypes.reactivate<#= theType.Name #>"
on-delete="search.searchTypes.delete<#= theType.Name #>"
edit-state="<#= grandParentState #>.<#= lowerFirstPluralizeTypeName #>.detail,[ID]"
permissions-base="Admin.<#= upperFirstGrandParentState #>">
<cv-column field="ID" title-key="ui.admin.common.ID"
width="5%" header-class="text-center" cell-class="text-right"
filter filter-type="id"
sort-by="5" sort-by-direction="asc"
groupable="false" />
<cv-column field="CustomKey" title-key="ui.admin.common.Key"
width="15%"
filter
sort-by="1" sort-by-direction="asc"
groupable="false" />
<cv-column field="Name" title-key="ui.admin.common.Name"
width="20%"
filter
sort-by="2" sort-by-direction="asc"
groupable="false" />
<cv-column field="DisplayName" title-key="ui.admin.common.DisplayName"
width="20%"
filter
sort-by="3" sort-by-direction="asc"
groupable="false" />
<cv-column field="TranslationKey" title-key="ui.admin.common.TranslationKey"
width="20%"
filter
sort-by="4" sort-by-direction="asc"
groupable="false" />
<cv-column field="SortOrder" type="number" title-key="ui.admin.common.Sort"
width="5%" header-class="text-center" cell-class="text-right"
sort-by="1" sort-by-direction="asc"
groupable="false" />
</cv-grid>
</widget-body>
</cv-widget>
</cv-page>
<#+
} // End Function GenerateSearchUserIntefaceFile #>