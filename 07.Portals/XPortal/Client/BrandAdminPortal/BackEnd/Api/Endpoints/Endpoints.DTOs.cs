// <autogenerated>
// <copyright file="Endpoints.DTOs.cs" company="clarity-ventures.com">
// Copyright (c) 2021-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the endpoints DTOs classes</summary>
// </autogenerated>
#nullable disable
// ReSharper disable InconsistentNaming, MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry
// ReSharper disable RedundantTypeArgumentsOfMethod, StyleCop.SA1300, StyleCop.SA1402, StyleCop.SA1516
#pragma warning disable IDE1006 // Naming Styles
#pragma warning disable SA1027 // Tabs vs Spaces
#pragma warning disable SA1117 // Parameter wrapping
#pragma warning disable SA1600 // XML Docs
namespace Clarity.Ecommerce.MVC.Api.Models
{
	using System;
	using System.Collections.Generic;
	using JetBrains.Annotations;
	using ServiceStack;

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AccountAssociationModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AccountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AccountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AccountModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountAssociationPagedResults : PagedResultsBase<AccountAssociationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountAssociationSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountAssociationTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AccountContactModel : AmARelationshipTableNameableBaseModel
	{
		public bool IsPrimary { get; set; }

		public bool IsBilling { get; set; }

		public bool TransmittedToERP { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public AccountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountContactPagedResults : PagedResultsBase<AccountContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountContactSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "IsBilling", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsBilling { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "TransmittedToERP", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TransmittedToERP { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AccountCurrencyModel : AmARelationshipTableBaseModel
	{
		public bool IsPrimary { get; set; }

		public string CustomName { get; set; }

		public string CustomTranslationKey { get; set; }

		public decimal OverrideUnicodeSymbolValue { get; set; }

		public string OverrideHtmlCharacterCode { get; set; }

		public string OverrideRawCharacter { get; set; }

		public int? OverrideDecimalPlaceAccuracy { get; set; }

		public bool? OverrideUseSeparator { get; set; }

		public string OverrideRawDecimalCharacter { get; set; }

		public string OverrideHtmlDecimalCharacterCode { get; set; }

		public string OverrideRawSeparatorCharacter { get; set; }

		public string OverrideHtmlSeparatorCharacterCode { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AccountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CurrencyModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CurrencyModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountCurrencyPagedResults : PagedResultsBase<AccountCurrencyModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountCurrencySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "MinOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MaxOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MatchOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MinOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MaxOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MatchOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MatchOverrideDecimalPlaceAccuracyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOverrideDecimalPlaceAccuracyIncludeNull { get; set; }

		[ApiMember(Name = "OverrideUseSeparator", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUseSeparator { get; set; }

		[ApiMember(Name = "OverrideUseSeparatorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUseSeparatorIncludeNull { get; set; }

		[ApiMember(Name = "CustomName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CustomName { get; set; }

		[ApiMember(Name = "CustomNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomNameStrict { get; set; }

		[ApiMember(Name = "CustomNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomNameIncludeNull { get; set; }

		[ApiMember(Name = "CustomTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CustomTranslationKey { get; set; }

		[ApiMember(Name = "CustomTranslationKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomTranslationKeyStrict { get; set; }

		[ApiMember(Name = "CustomTranslationKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomTranslationKeyIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlDecimalCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlDecimalCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlDecimalCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlSeparatorCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlSeparatorCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlSeparatorCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawCharacter { get; set; }

		[ApiMember(Name = "OverrideRawCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawCharacterIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawDecimalCharacter { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawDecimalCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawDecimalCharacterIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawSeparatorCharacter { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawSeparatorCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawSeparatorCharacterIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AccountFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AccountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountFilePagedResults : PagedResultsBase<AccountFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AccountImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "AccountID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the account record.")]
		public int AccountID { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the account record.")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the account record.")]
		public string AccountName { get; set; }

		[ApiMember(Name = "Account", DataType = "AccountModel", ParameterType = "body", IsRequired = false,
			Description = "The account record.")]
		public AccountModel Account { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountImagePagedResults : PagedResultsBase<AccountImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AccountModel : NameableBaseModel
	{
		[ApiMember(Name = "IsTaxable", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "Whether the account can be charged Taxes for taxable products, optional, defaults to true when not set")]
		public bool IsTaxable { get; set; }

		[ApiMember(Name = "TaxExemptionNo", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The exemption certificate value")]
		public string TaxExemptionNo { get; set; }

		[ApiMember(Name = "TaxEntityUseCode", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Tax code for complete or partial exemptions")]
		public string TaxEntityUseCode { get; set; }

		[ApiMember(Name = "IsOnHold", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "Account's On Hold status. Accounts on hold cannot complete purchases until this is turned off")]
		public bool IsOnHold { get; set; }

		[ApiMember(Name = "Credit", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "The amount of Credit this Account has available, optional")]
		public decimal? Credit { get; set; }

		[ApiMember(Name = "Token", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The token for the account")]
		public string Token { get; set; }

		[ApiMember(Name = "SageID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SAGE customer number")]
		public string SageID { get; set; }

		[ApiMember(Name = "CreditCurrencyID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Currency for the Account Credit, optional")]
		public int? CreditCurrencyID { get; set; }

		public string CreditCurrencyKey { get; set; }

		public string CreditCurrencyName { get; set; }

		[ApiMember(Name = "CreditCurrency", DataType = "CurrencyModel", ParameterType = "body", IsRequired = false,
			Description = "The Currency for the Account Credit, optional")]
		public CurrencyModel CreditCurrency { get; set; }

		[ApiMember(Name = "AccountContacts", DataType = "List<AccountContactModel>", ParameterType = "body", IsRequired = false,
			Description = "Contact Book for the Account")]
		public List<AccountContactModel> AccountContacts { get; set; }

		[ApiMember(Name = "AccountPricePoints", DataType = "List<AccountPricePointModel>", ParameterType = "body", IsRequired = false,
			Description = "Account's Price Points, required for the Multi-Tier Pricing settings, otherwise ignored")]
		public List<AccountPricePointModel> AccountPricePoints { get; set; }

		[ApiMember(Name = "AccountCurrencies", DataType = "List<AccountCurrencyModel>", ParameterType = "body", IsRequired = false,
			Description = "Account's Currencies, used to provide custom names to the selected currencies, such as renaming 'Ticket' to 'Point'")]
		public List<AccountCurrencyModel> AccountCurrencies { get; set; }

		[ApiMember(Name = "Subscriptions", DataType = "List<SubscriptionModel>", ParameterType = "body", IsRequired = false,
			Description = "Subscriptions associated with the Account")]
		public List<SubscriptionModel> Subscriptions { get; set; }

		[ApiMember(Name = "PurchaseOrders", DataType = "List<PurchaseOrderModel>", ParameterType = "body", IsRequired = false,
			Description = "Purchase Orders associated with the Account")]
		public List<PurchaseOrderModel> PurchaseOrders { get; set; }

		[ApiMember(Name = "PriceRuleAccounts", DataType = "List<PriceRuleAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Price rules associated with the Account")]
		public List<PriceRuleAccountModel> PriceRuleAccounts { get; set; }

		[ApiMember(Name = "AccountAssociations", DataType = "List<AccountAssociationModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts that this account is associated to as the primary")]
		public List<AccountAssociationModel> AccountAssociations { get; set; }

		[ApiMember(Name = "AccountsAssociatedWith", DataType = "List<AccountAssociationModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts that this account is associated to as the secondary")]
		public List<AccountAssociationModel> AccountsAssociatedWith { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandAccountModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseAccountModel> Franchises { get; set; }

		[ApiMember(Name = "Products", DataType = "List<AccountProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<AccountProductModel> Products { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<StoreAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<StoreAccountModel> Stores { get; set; }

		[ApiMember(Name = "Users", DataType = "List<UserModel>", ParameterType = "body", IsRequired = false,
			Description = "Users this object is associated with")]
		public List<UserModel> Users { get; set; }

		[ApiMember(Name = "Vendors", DataType = "List<VendorAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Vendors this object is associated with")]
		public List<VendorAccountModel> Vendors { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }

		[ApiMember(Name = "Images", DataType = "List<AccountImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<AccountImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "StoredFiles", DataType = "List<AccountFileModel>", ParameterType = "body", IsRequired = false,
			Description = "Stored Files for the object, optional")]
		public List<AccountFileModel> StoredFiles { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountPagedResults : PagedResultsBase<AccountModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AccountPricePointModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public AccountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "PricePointModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public PricePointModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountPricePointPagedResults : PagedResultsBase<AccountPricePointModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountPricePointSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AccountProductModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AccountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountProductPagedResults : PagedResultsBase<AccountProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountProductTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "AccessibleFromAccountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "A UserID that is associated with the Account")]
		public int? AccessibleFromAccountID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "IsOnHold", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsOnHold { get; set; }

		[ApiMember(Name = "IsTaxable", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsTaxable { get; set; }

		[ApiMember(Name = "MinCredit", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinCredit { get; set; }

		[ApiMember(Name = "MaxCredit", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxCredit { get; set; }

		[ApiMember(Name = "MatchCredit", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchCredit { get; set; }

		[ApiMember(Name = "MatchCreditIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchCreditIncludeNull { get; set; }

		[ApiMember(Name = "CreditCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CreditCurrencyID { get; set; }

		[ApiMember(Name = "CreditCurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CreditCurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "SageID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SageID { get; set; }

		[ApiMember(Name = "SageIDStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SageIDStrict { get; set; }

		[ApiMember(Name = "SageIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SageIDIncludeNull { get; set; }

		[ApiMember(Name = "TaxEntityUseCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TaxEntityUseCode { get; set; }

		[ApiMember(Name = "TaxEntityUseCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxEntityUseCodeStrict { get; set; }

		[ApiMember(Name = "TaxEntityUseCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxEntityUseCodeIncludeNull { get; set; }

		[ApiMember(Name = "TaxExemptionNo", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TaxExemptionNo { get; set; }

		[ApiMember(Name = "TaxExemptionNoStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxExemptionNoStrict { get; set; }

		[ApiMember(Name = "TaxExemptionNoIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxExemptionNoIncludeNull { get; set; }

		[ApiMember(Name = "Token", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Token { get; set; }

		[ApiMember(Name = "TokenStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TokenStrict { get; set; }

		[ApiMember(Name = "TokenIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TokenIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountUsageBalanceModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "Quantity", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "Quantity used")]
		public int Quantity { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AccountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountUsageBalancePagedResults : PagedResultsBase<AccountUsageBalanceModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AccountUsageBalanceSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "MinQuantity", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinQuantity { get; set; }

		[ApiMember(Name = "MaxQuantity", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxQuantity { get; set; }

		[ApiMember(Name = "MatchQuantity", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchQuantity { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdAccountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AdModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AccountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AccountModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdAccountPagedResults : PagedResultsBase<AdAccountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdAccountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdBrandModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AdModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "BrandModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public BrandModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdBrandPagedResults : PagedResultsBase<AdBrandModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdBrandSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AddressModel : BaseModel
	{
		public string Company { get; set; }

		public string Street1 { get; set; }

		public string Street2 { get; set; }

		public string Street3 { get; set; }

		public string City { get; set; }

		public string PostalCode { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public string RegionCustom { get; set; }

		public string CountryCustom { get; set; }

		public int? RegionID { get; set; }

		public string RegionKey { get; set; }

		public string RegionName { get; set; }

		public string RegionCode { get; set; }

		public RegionModel Region { get; set; }

		public int? CountryID { get; set; }

		public string CountryKey { get; set; }

		public string CountryName { get; set; }

		public string CountryCode { get; set; }

		public CountryModel Country { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AddressPagedResults : PagedResultsBase<AddressModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AddressSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "CountryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Filter by the Related Country CustomKey (Equals, Case-Insensitive)")]
		public string CountryKey { get; set; }

		[ApiMember(Name = "CountryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Filter by the Related Country Name (Contains, Case-Insensitive)")]
		public string CountryName { get; set; }

		[ApiMember(Name = "CountryDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Filter by the Related Country Description (Contains, Case-Insensitive)")]
		public string CountryDescription { get; set; }

		[ApiMember(Name = "RegionKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Filter by the Related Region CustomKey (Equals, Case-Insensitive)")]
		public string RegionKey { get; set; }

		[ApiMember(Name = "RegionName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Filter by the Related Region Name (Contains, Case-Insensitive)")]
		public string RegionName { get; set; }

		[ApiMember(Name = "RegionDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Filter by the Related Region Description (Contains, Case-Insensitive)")]
		public string RegionDescription { get; set; }

		[ApiMember(Name = "ZipCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Origin ZipCode from which you extending by radius to find entities")]
		public string ZipCode { get; set; }

		[ApiMember(Name = "Latitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Origin Latitude from which you extending by radius to find entities")]
		public double? Latitude { get; set; }

		[ApiMember(Name = "Longitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Origin Longitude from which you extending by radius to find entities")]
		public double? Longitude { get; set; }

		[ApiMember(Name = "Radius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The number of units to extend in a radius from the center of the Origin ZipCode")]
		public int? Radius { get; set; }

		[ApiMember(Name = "Units", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The unit of measure for the radius. Must be either mi (miles) or km (kilometers). Default is mi.")]
		public LocatorUnits? Units { get; set; }

		[ApiMember(Name = "CountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CountryID { get; set; }

		[ApiMember(Name = "CountryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CountryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "RegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RegionID { get; set; }

		[ApiMember(Name = "RegionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RegionIDIncludeNull { get; set; }

		[ApiMember(Name = "City", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string City { get; set; }

		[ApiMember(Name = "CityStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CityStrict { get; set; }

		[ApiMember(Name = "CityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CityIncludeNull { get; set; }

		[ApiMember(Name = "Company", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Company { get; set; }

		[ApiMember(Name = "CompanyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CompanyStrict { get; set; }

		[ApiMember(Name = "CompanyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CompanyIncludeNull { get; set; }

		[ApiMember(Name = "CountryCustom", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CountryCustom { get; set; }

		[ApiMember(Name = "CountryCustomStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CountryCustomStrict { get; set; }

		[ApiMember(Name = "CountryCustomIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CountryCustomIncludeNull { get; set; }

		[ApiMember(Name = "PostalCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PostalCode { get; set; }

		[ApiMember(Name = "PostalCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PostalCodeStrict { get; set; }

		[ApiMember(Name = "PostalCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PostalCodeIncludeNull { get; set; }

		[ApiMember(Name = "RegionCustom", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RegionCustom { get; set; }

		[ApiMember(Name = "RegionCustomStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RegionCustomStrict { get; set; }

		[ApiMember(Name = "RegionCustomIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RegionCustomIncludeNull { get; set; }

		[ApiMember(Name = "Street1", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Street1 { get; set; }

		[ApiMember(Name = "Street1Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Street1Strict { get; set; }

		[ApiMember(Name = "Street1IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Street1IncludeNull { get; set; }

		[ApiMember(Name = "Street2", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Street2 { get; set; }

		[ApiMember(Name = "Street2Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Street2Strict { get; set; }

		[ApiMember(Name = "Street2IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Street2IncludeNull { get; set; }

		[ApiMember(Name = "Street3", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Street3 { get; set; }

		[ApiMember(Name = "Street3Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Street3Strict { get; set; }

		[ApiMember(Name = "Street3IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Street3IncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AddressValidationResultModel
	{
		public int? AccountContactID { get; set; }

		public int? ContactID { get; set; }

		public int? AddressID { get; set; }

		public bool IsValid { get; set; }

		public string Message { get; set; }

		public AddressModel SourceAddress { get; set; }

		public AddressModel MergedAddress { get; set; }

		public AddressModel ValidatedAddress { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdFranchiseModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AdModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "FranchiseModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public FranchiseModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdFranchisePagedResults : PagedResultsBase<AdFranchiseModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdFranchiseSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdImagePagedResults : PagedResultsBase<AdImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdModel : NameableBaseModel
	{
		public string TargetURL { get; set; }

		public string Caption { get; set; }

		public DateTime StartDate { get; set; }

		public DateTime EndDate { get; set; }

		public DateTime ExpirationDate { get; set; }

		public decimal Weight { get; set; }

		public List<AdAccountModel> AdAccounts { get; set; }

		public List<AdStoreModel> AdStores { get; set; }

		public List<AdZoneModel> AdZones { get; set; }

		public List<CampaignAdModel> CampaignAds { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "Accounts", DataType = "List<AdAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts this object is associated with")]
		public List<AdAccountModel> Accounts { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<AdBrandModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<AdBrandModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<AdFranchiseModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<AdFranchiseModel> Franchises { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<AdStoreModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<AdStoreModel> Stores { get; set; }

		[ApiMember(Name = "Images", DataType = "List<AdImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<AdImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "ImpressionCounterID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "CounterID of Ad Impressions Counter")]
		public int? ImpressionCounterID { get; set; }

		public string ImpressionCounterKey { get; set; }

		[ApiMember(Name = "ImpressionCounter", DataType = "CounterModel", ParameterType = "body", IsRequired = false,
			Description = "Ad Impressions Counter")]
		public CounterModel ImpressionCounter { get; set; }

		[ApiMember(Name = "ClickCounterID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "CounterID of Ad Clicks Counter")]
		public int? ClickCounterID { get; set; }

		public string ClickCounterKey { get; set; }

		[ApiMember(Name = "ClickCounter", DataType = "CounterModel", ParameterType = "body", IsRequired = false,
			Description = "Ad Clicks Counter")]
		public CounterModel ClickCounter { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdPagedResults : PagedResultsBase<AdModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "MinEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndDate { get; set; }

		[ApiMember(Name = "MaxEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndDate { get; set; }

		[ApiMember(Name = "MatchEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndDate { get; set; }

		[ApiMember(Name = "MinExpirationDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinExpirationDate { get; set; }

		[ApiMember(Name = "MaxExpirationDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxExpirationDate { get; set; }

		[ApiMember(Name = "MatchExpirationDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchExpirationDate { get; set; }

		[ApiMember(Name = "MinStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartDate { get; set; }

		[ApiMember(Name = "MaxStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartDate { get; set; }

		[ApiMember(Name = "MatchStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartDate { get; set; }

		[ApiMember(Name = "MinWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinWeight { get; set; }

		[ApiMember(Name = "MaxWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxWeight { get; set; }

		[ApiMember(Name = "MatchWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchWeight { get; set; }

		[ApiMember(Name = "ClickCounterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ClickCounterID { get; set; }

		[ApiMember(Name = "ClickCounterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ClickCounterIDIncludeNull { get; set; }

		[ApiMember(Name = "ImpressionCounterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ImpressionCounterID { get; set; }

		[ApiMember(Name = "ImpressionCounterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ImpressionCounterIDIncludeNull { get; set; }

		[ApiMember(Name = "Caption", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Caption { get; set; }

		[ApiMember(Name = "CaptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CaptionStrict { get; set; }

		[ApiMember(Name = "CaptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CaptionIncludeNull { get; set; }

		[ApiMember(Name = "TargetURL", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TargetURL { get; set; }

		[ApiMember(Name = "TargetURLStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TargetURLStrict { get; set; }

		[ApiMember(Name = "TargetURLIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TargetURLIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdStoreModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AdModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoreModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoreModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdStorePagedResults : PagedResultsBase<AdStoreModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdStoreSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search")]
		public int? UserID { get; set; }

		[ApiMember(Name = "ZoneID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Zone ID For Search")]
		public int? ZoneID { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdZoneAccessModel : NameableBaseModel
	{
		public DateTime StartDate { get; set; }

		public DateTime EndDate { get; set; }

		public int UniqueAdLimit { get; set; }

		public int ImpressionLimit { get; set; }

		public int ClickLimit { get; set; }

		public List<AdZoneModel> AdZones { get; set; }

		public int? ZoneID { get; set; }

		public string ZoneKey { get; set; }

		public string ZoneName { get; set; }

		public ZoneModel Zone { get; set; }

		public int? SubscriptionID { get; set; }

		public string SubscriptionKey { get; set; }

		public string SubscriptionName { get; set; }

		public SubscriptionModel Subscription { get; set; }

		public bool Expired { get; set; }

		public bool UniqueAdLimitReached { get; set; }

		public bool ImpressionLimitReached { get; set; }

		public bool ClickLimitReached { get; set; }

		public bool CanAddAds { get; set; }

		[ApiMember(Name = "ImpressionCounterID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "CounterID of Ad Impressions Counter")]
		public int? ImpressionCounterID { get; set; }

		public string ImpressionCounterKey { get; set; }

		[ApiMember(Name = "ImpressionCounter", DataType = "CounterModel", ParameterType = "body", IsRequired = false,
			Description = "Ad Impressions Counter")]
		public CounterModel ImpressionCounter { get; set; }

		[ApiMember(Name = "ClickCounterID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "CounterID of Ad Clicks Counter")]
		public int? ClickCounterID { get; set; }

		public string ClickCounterKey { get; set; }

		[ApiMember(Name = "ClickCounter", DataType = "CounterModel", ParameterType = "body", IsRequired = false,
			Description = "Ad Clicks Counter")]
		public CounterModel ClickCounter { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdZoneAccessPagedResults : PagedResultsBase<AdZoneAccessModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdZoneAccessSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndDate { get; set; }

		[ApiMember(Name = "MaxEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndDate { get; set; }

		[ApiMember(Name = "MatchEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndDate { get; set; }

		[ApiMember(Name = "MinStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartDate { get; set; }

		[ApiMember(Name = "MaxStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartDate { get; set; }

		[ApiMember(Name = "MatchStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartDate { get; set; }

		[ApiMember(Name = "MinClickLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinClickLimit { get; set; }

		[ApiMember(Name = "MaxClickLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxClickLimit { get; set; }

		[ApiMember(Name = "MatchClickLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchClickLimit { get; set; }

		[ApiMember(Name = "MinImpressionLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinImpressionLimit { get; set; }

		[ApiMember(Name = "MaxImpressionLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxImpressionLimit { get; set; }

		[ApiMember(Name = "MatchImpressionLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchImpressionLimit { get; set; }

		[ApiMember(Name = "MinUniqueAdLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinUniqueAdLimit { get; set; }

		[ApiMember(Name = "MaxUniqueAdLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxUniqueAdLimit { get; set; }

		[ApiMember(Name = "MatchUniqueAdLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchUniqueAdLimit { get; set; }

		[ApiMember(Name = "ClickCounterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ClickCounterID { get; set; }

		[ApiMember(Name = "ClickCounterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ClickCounterIDIncludeNull { get; set; }

		[ApiMember(Name = "ImpressionCounterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ImpressionCounterID { get; set; }

		[ApiMember(Name = "ImpressionCounterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ImpressionCounterIDIncludeNull { get; set; }

		[ApiMember(Name = "SubscriptionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SubscriptionID { get; set; }

		[ApiMember(Name = "SubscriptionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SubscriptionIDIncludeNull { get; set; }

		[ApiMember(Name = "ZoneID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ZoneID { get; set; }

		[ApiMember(Name = "ZoneIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ZoneIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdZoneModel : AmARelationshipTableBaseModel
	{
		public DateTime StartDate { get; set; }

		public DateTime EndDate { get; set; }

		public int ImpressionLimit { get; set; }

		public int ClickLimit { get; set; }

		public int? AdZoneAccessID { get; set; }

		public string AdZoneAccessKey { get; set; }

		public string AdZoneAccessName { get; set; }

		public AdZoneAccessModel AdZoneAccess { get; set; }

		public bool Expired { get; set; }

		public bool ImpressionLimitReached { get; set; }

		public bool ClickLimitReached { get; set; }

		public bool CanShowAds { get; set; }

		[ApiMember(Name = "ImpressionCounterID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "CounterID of Ad Impressions Counter")]
		public int? ImpressionCounterID { get; set; }

		public string ImpressionCounterKey { get; set; }

		[ApiMember(Name = "ImpressionCounter", DataType = "CounterModel", ParameterType = "body", IsRequired = false,
			Description = "Ad Impressions Counter")]
		public CounterModel ImpressionCounter { get; set; }

		[ApiMember(Name = "ClickCounterID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "CounterID of Ad Clicks Counter")]
		public int? ClickCounterID { get; set; }

		public string ClickCounterKey { get; set; }

		[ApiMember(Name = "ClickCounter", DataType = "CounterModel", ParameterType = "body", IsRequired = false,
			Description = "Ad Clicks Counter")]
		public CounterModel ClickCounter { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AdModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ZoneModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ZoneModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdZonePagedResults : PagedResultsBase<AdZoneModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AdZoneSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AdZoneAccessID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AdZoneAccessID { get; set; }

		[ApiMember(Name = "AdZoneAccessIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AdZoneAccessIDIncludeNull { get; set; }

		[ApiMember(Name = "ClickCounterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ClickCounterID { get; set; }

		[ApiMember(Name = "ClickCounterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ClickCounterIDIncludeNull { get; set; }

		[ApiMember(Name = "ImpressionCounterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ImpressionCounterID { get; set; }

		[ApiMember(Name = "ImpressionCounterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ImpressionCounterIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AggregatePricingRange : AggregateRangeBase
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AggregateRangeBase
	{
		public double? From { get; set; }

		public double? To { get; set; }

		public string Label { get; set; }

		public long? DocCount { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AggregateRatingRange : AggregateRangeBase
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AggregateTree
	{
		public string Key { get; set; }

		public long? DocCount { get; set; }

		public long? DocCountErrorUpperBound { get; set; }

		public bool HasChildren { get; set; }

		public List<AggregateTree> Children { get; set; }

		public long? SumOtherDocCount { get; set; }

		public long? OriginalDocCount { get; set; }

		public long? MergedDocCount { get; set; }

		public long? SuspectedThisLevelDocCount { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AnswerModel : BaseModel
	{
		public string AdditionalInformation { get; set; }

		public int UserID { get; set; }

		public string UserKey { get; set; }

		public UserModel User { get; set; }

		public int QuestionID { get; set; }

		public string QuestionKey { get; set; }

		public QuestionModel Question { get; set; }

		public int OptionID { get; set; }

		public string OptionKey { get; set; }

		public QuestionOptionModel Option { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AnswerPagedResults : PagedResultsBase<AnswerModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AnswerSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "OptionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? OptionID { get; set; }

		[ApiMember(Name = "QuestionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? QuestionID { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "AdditionalInformation", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AdditionalInformation { get; set; }

		[ApiMember(Name = "AdditionalInformationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AdditionalInformationStrict { get; set; }

		[ApiMember(Name = "AdditionalInformationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AdditionalInformationIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedCartDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public CartModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedCartDiscountPagedResults : PagedResultsBase<AppliedCartDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedCartDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedCartItemDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesItemBaseModel<IAppliedCartItemDiscountModel, AppliedCartItemDiscountModel> Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedCartItemDiscountPagedResults : PagedResultsBase<AppliedCartItemDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedCartItemDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AppliedPurchaseOrderDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PurchaseOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedPurchaseOrderDiscountPagedResults : PagedResultsBase<AppliedPurchaseOrderDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedPurchaseOrderDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AppliedPurchaseOrderItemDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesItemBaseModel<IAppliedPurchaseOrderItemDiscountModel, AppliedPurchaseOrderItemDiscountModel> Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedPurchaseOrderItemDiscountPagedResults : PagedResultsBase<AppliedPurchaseOrderItemDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedPurchaseOrderItemDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesInvoiceDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesInvoiceModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesInvoiceDiscountPagedResults : PagedResultsBase<AppliedSalesInvoiceDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesInvoiceDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesInvoiceItemDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesItemBaseModel<IAppliedSalesInvoiceItemDiscountModel, AppliedSalesInvoiceItemDiscountModel> Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesInvoiceItemDiscountPagedResults : PagedResultsBase<AppliedSalesInvoiceItemDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesInvoiceItemDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesOrderDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesOrderDiscountPagedResults : PagedResultsBase<AppliedSalesOrderDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesOrderDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesOrderItemDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesItemBaseModel<IAppliedSalesOrderItemDiscountModel, AppliedSalesOrderItemDiscountModel> Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesOrderItemDiscountPagedResults : PagedResultsBase<AppliedSalesOrderItemDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesOrderItemDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesQuoteDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesQuoteModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesQuoteDiscountPagedResults : PagedResultsBase<AppliedSalesQuoteDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesQuoteDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesQuoteItemDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesItemBaseModel<IAppliedSalesQuoteItemDiscountModel, AppliedSalesQuoteItemDiscountModel> Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesQuoteItemDiscountPagedResults : PagedResultsBase<AppliedSalesQuoteItemDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesQuoteItemDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesReturnDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesReturnModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesReturnDiscountPagedResults : PagedResultsBase<AppliedSalesReturnDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesReturnDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesReturnItemDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesItemBaseModel<IAppliedSalesReturnItemDiscountModel, AppliedSalesReturnItemDiscountModel> Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesReturnItemDiscountPagedResults : PagedResultsBase<AppliedSalesReturnItemDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSalesReturnItemDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSampleRequestDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SampleRequestModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSampleRequestDiscountPagedResults : PagedResultsBase<AppliedSampleRequestDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSampleRequestDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSampleRequestItemDiscountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesItemBaseModel<IAppliedSampleRequestItemDiscountModel, AppliedSampleRequestItemDiscountModel> Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DiscountModel Slave { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of Discount to apply (what it applies to).")]
		public int DiscountTypeID { get; set; }

		[ApiMember(Name = "DiscountPriority", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
		public int? DiscountPriority { get; set; }

		[ApiMember(Name = "DiscountValueType", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "The kind of value (0=Percentage, 1=Dollars).")]
		public int DiscountValueType { get; set; }

		[ApiMember(Name = "DiscountValue", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "The amount the Discount is allowed to apply.")]
		public decimal DiscountValue { get; set; }

		[ApiMember(Name = "DiscountCanCombine", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is combinable.")]
		public bool DiscountCanCombine { get; set; }

		[ApiMember(Name = "DiscountIsAutoApplied", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether the discount is automatically applied.")]
		public bool DiscountIsAutoApplied { get; set; }

		[ApiMember(Name = "DiscountTotal", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The total amount of the discount applied.")]
		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "ApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? ApplicationsUsed { get; set; }

		[ApiMember(Name = "TargetApplicationsUsed", DataType = "decimal", ParameterType = "body", IsRequired = true,
			Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
		public int? TargetApplicationsUsed { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSampleRequestItemDiscountPagedResults : PagedResultsBase<AppliedSampleRequestItemDiscountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppliedSampleRequestItemDiscountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDiscountTotal { get; set; }

		[ApiMember(Name = "MaxDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDiscountTotal { get; set; }

		[ApiMember(Name = "MatchDiscountTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDiscountTotal { get; set; }

		[ApiMember(Name = "MinApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApplicationsUsedIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MaxTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsed", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTargetApplicationsUsed { get; set; }

		[ApiMember(Name = "MatchTargetApplicationsUsedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetApplicationsUsedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppointmentModel : NameableBaseModel
	{
		public DateTime? AppointmentStart { get; set; }

		public DateTime? AppointmentEnd { get; set; }

		public int? SalesOrderID { get; set; }

		public string SalesOrderKey { get; set; }

		public SalesOrderModel SalesOrder { get; set; }

		public List<CalendarAppointmentModel> Calendars { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppointmentPagedResults : PagedResultsBase<AppointmentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppointmentSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "FilterStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "Start of date filter")]
		public DateTime? FilterStart { get; set; }

		[ApiMember(Name = "FilterEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "End of date filter")]
		public DateTime? FilterEnd { get; set; }

		[ApiMember(Name = "CalendarIDs", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "IDs of the Schedules that own the events")]
		public int[] CalendarIDs { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "MinAppointmentEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinAppointmentEnd { get; set; }

		[ApiMember(Name = "MaxAppointmentEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxAppointmentEnd { get; set; }

		[ApiMember(Name = "MatchAppointmentEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchAppointmentEnd { get; set; }

		[ApiMember(Name = "MatchAppointmentEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchAppointmentEndIncludeNull { get; set; }

		[ApiMember(Name = "MinAppointmentStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinAppointmentStart { get; set; }

		[ApiMember(Name = "MaxAppointmentStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxAppointmentStart { get; set; }

		[ApiMember(Name = "MatchAppointmentStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchAppointmentStart { get; set; }

		[ApiMember(Name = "MatchAppointmentStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchAppointmentStartIncludeNull { get; set; }

		[ApiMember(Name = "SalesOrderID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesOrderID { get; set; }

		[ApiMember(Name = "SalesOrderIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesOrderIDIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppointmentStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AppointmentTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AttributeGroupModel : TypableBaseModel
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AttributeGroupPagedResults : PagedResultsBase<AttributeGroupModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AttributeGroupSearchModel : TypableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AttributeTabModel : TypableBaseModel
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AttributeTabPagedResults : PagedResultsBase<AttributeTabModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AttributeTabSearchModel : TypableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AttributeTypeModel : TypableBaseModel
	{
		public List<GeneralAttributeModel> GeneralAttributes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AttributeTypePagedResults : PagedResultsBase<AttributeTypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AttributeTypeSearchModel : TypableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionCardModel
	{
		public int AuctionID { get; set; }

		public string AuctionName { get; set; }

		public AddressModel Address { get; set; }

		public DateTime? AuctionClosesAt { get; set; }

		public int? AuctionContactID { get; set; }

		public string AuctionContactName { get; set; }

		public List<ProductImageModel> ProductImages { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionCardPagedResults : PagedResultsBase<AuctionCardModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionCatalogSearchForm : SearchFormBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AuctionCategoryModel : AmARelationshipTableBaseModel
	{
		public int? SortOrder { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public AuctionModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionCategoryPagedResults : PagedResultsBase<AuctionCategoryModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionIndexableModel : IndexableModelBase
	{
		public int BidCount { get; set; }

		public DateTime? ClosesAt { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class AuctionModel : NameableBaseModel
	{
		public DateTime? OpensAt { get; set; }

		public DateTime? ClosesAt { get; set; }

		public List<LotModel> Lots { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandAuctionModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandAuctionModel> Brands { get; set; }

		[ApiMember(Name = "Categories", DataType = "List<AuctionCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Categories this object is associated with")]
		public List<AuctionCategoryModel> Categories { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseAuctionModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseAuctionModel> Franchises { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<StoreAuctionModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<StoreAuctionModel> Stores { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionPagedResults : PagedResultsBase<AuctionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionSearchModel : NameableBaseSearchModel
	{
		public int? UserID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "MinClosesAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinClosesAt { get; set; }

		[ApiMember(Name = "MaxClosesAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxClosesAt { get; set; }

		[ApiMember(Name = "MatchClosesAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchClosesAt { get; set; }

		[ApiMember(Name = "MatchClosesAtIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchClosesAtIncludeNull { get; set; }

		[ApiMember(Name = "MinOpensAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinOpensAt { get; set; }

		[ApiMember(Name = "MaxOpensAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxOpensAt { get; set; }

		[ApiMember(Name = "MatchOpensAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchOpensAt { get; set; }

		[ApiMember(Name = "MatchOpensAtIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOpensAtIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionSearchViewModel : SearchViewModelBase<AuctionCatalogSearchForm, AuctionIndexableModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionSuggestResult : SuggestResultBase
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class AuctionTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BadgeImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BadgeImagePagedResults : PagedResultsBase<BadgeImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BadgeImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BadgeImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BadgeModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "Images", DataType = "List<BadgeImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<BadgeImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BadgePagedResults : PagedResultsBase<BadgeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BadgeSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BadgeTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BidModel : BaseModel
	{
		public decimal? CurrentBid { get; set; }

		public decimal? MaxBid { get; set; }

		public bool Won { get; set; }

		public int? LotID { get; set; }

		public string LotKey { get; set; }

		public string LotName { get; set; }

		public LotModel Lot { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "UserID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the user record.")]
		public int UserID { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the user record.")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the user record.")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "User", DataType = "UserModel", ParameterType = "body", IsRequired = false,
			Description = "The user record.")]
		public UserModel User { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BidPagedResults : PagedResultsBase<BidModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BidSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "Won", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Won { get; set; }

		[ApiMember(Name = "MinCurrentBid", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinCurrentBid { get; set; }

		[ApiMember(Name = "MaxCurrentBid", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxCurrentBid { get; set; }

		[ApiMember(Name = "MatchCurrentBid", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchCurrentBid { get; set; }

		[ApiMember(Name = "MatchCurrentBidIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchCurrentBidIncludeNull { get; set; }

		[ApiMember(Name = "LotID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? LotID { get; set; }

		[ApiMember(Name = "LotIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LotIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMaxBid", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaxBid { get; set; }

		[ApiMember(Name = "MaxMaxBid", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaxBid { get; set; }

		[ApiMember(Name = "MatchMaxBid", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaxBid { get; set; }

		[ApiMember(Name = "MatchMaxBidIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaxBidIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BidStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandAccountModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		public int? PricePointID { get; set; }

		public string PricePointKey { get; set; }

		public string PricePointName { get; set; }

		public PricePointModel PricePoint { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AccountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AccountModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandAccountPagedResults : PagedResultsBase<BrandAccountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandAccountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }

		[ApiMember(Name = "PricePointID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PricePointID { get; set; }

		[ApiMember(Name = "PricePointIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PricePointIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandAuctionModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AuctionModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AuctionModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandAuctionPagedResults : PagedResultsBase<BrandAuctionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandAuctionSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandCategoryModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandCategoryPagedResults : PagedResultsBase<BrandCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandCurrencyModel : AmARelationshipTableBaseModel
	{
		public bool IsPrimary { get; set; }

		public string CustomName { get; set; }

		public string CustomTranslationKey { get; set; }

		public decimal OverrideUnicodeSymbolValue { get; set; }

		public string OverrideHtmlCharacterCode { get; set; }

		public string OverrideRawCharacter { get; set; }

		public int? OverrideDecimalPlaceAccuracy { get; set; }

		public bool? OverrideUseSeparator { get; set; }

		public string OverrideRawDecimalCharacter { get; set; }

		public string OverrideHtmlDecimalCharacterCode { get; set; }

		public string OverrideRawSeparatorCharacter { get; set; }

		public string OverrideHtmlSeparatorCharacterCode { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CurrencyModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CurrencyModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandCurrencyPagedResults : PagedResultsBase<BrandCurrencyModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandCurrencySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "MinOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MaxOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MatchOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MinOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MaxOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MatchOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MatchOverrideDecimalPlaceAccuracyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOverrideDecimalPlaceAccuracyIncludeNull { get; set; }

		[ApiMember(Name = "OverrideUseSeparator", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUseSeparator { get; set; }

		[ApiMember(Name = "OverrideUseSeparatorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUseSeparatorIncludeNull { get; set; }

		[ApiMember(Name = "CustomName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CustomName { get; set; }

		[ApiMember(Name = "CustomNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomNameStrict { get; set; }

		[ApiMember(Name = "CustomNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomNameIncludeNull { get; set; }

		[ApiMember(Name = "CustomTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CustomTranslationKey { get; set; }

		[ApiMember(Name = "CustomTranslationKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomTranslationKeyStrict { get; set; }

		[ApiMember(Name = "CustomTranslationKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomTranslationKeyIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlDecimalCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlDecimalCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlDecimalCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlSeparatorCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlSeparatorCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlSeparatorCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawCharacter { get; set; }

		[ApiMember(Name = "OverrideRawCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawCharacterIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawDecimalCharacter { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawDecimalCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawDecimalCharacterIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawSeparatorCharacter { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawSeparatorCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawSeparatorCharacterIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandFranchiseModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "FranchiseModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public FranchiseModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandFranchisePagedResults : PagedResultsBase<BrandFranchiseModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandFranchiseSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "BrandID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the brand record.")]
		public int BrandID { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the brand record.")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the brand record.")]
		public string BrandName { get; set; }

		[ApiMember(Name = "Brand", DataType = "BrandModel", ParameterType = "body", IsRequired = false,
			Description = "The brand record.")]
		public BrandModel Brand { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandImagePagedResults : PagedResultsBase<BrandImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandInventoryLocationModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "InventoryLocationModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public InventoryLocationModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandInventoryLocationPagedResults : PagedResultsBase<BrandInventoryLocationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandInventoryLocationSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandInventoryLocationTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandLanguageModel : AmARelationshipTableBaseModel
	{
		public string OverrideLocale { get; set; }

		public string OverrideUnicodeName { get; set; }

		public string OverrideISO639_1_2002 { get; set; }

		public string OverrideISO639_2_1998 { get; set; }

		public string OverrideISO639_3_2007 { get; set; }

		public string OverrideISO639_5_2008 { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "LanguageModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public LanguageModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandLanguagePagedResults : PagedResultsBase<BrandLanguageModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandLanguageSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "OverrideISO639_1_2002", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideISO639_1_2002 { get; set; }

		[ApiMember(Name = "OverrideISO639_1_2002Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_1_2002Strict { get; set; }

		[ApiMember(Name = "OverrideISO639_1_2002IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_1_2002IncludeNull { get; set; }

		[ApiMember(Name = "OverrideISO639_2_1998", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideISO639_2_1998 { get; set; }

		[ApiMember(Name = "OverrideISO639_2_1998Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_2_1998Strict { get; set; }

		[ApiMember(Name = "OverrideISO639_2_1998IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_2_1998IncludeNull { get; set; }

		[ApiMember(Name = "OverrideISO639_3_2007", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideISO639_3_2007 { get; set; }

		[ApiMember(Name = "OverrideISO639_3_2007Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_3_2007Strict { get; set; }

		[ApiMember(Name = "OverrideISO639_3_2007IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_3_2007IncludeNull { get; set; }

		[ApiMember(Name = "OverrideISO639_5_2008", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideISO639_5_2008 { get; set; }

		[ApiMember(Name = "OverrideISO639_5_2008Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_5_2008Strict { get; set; }

		[ApiMember(Name = "OverrideISO639_5_2008IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_5_2008IncludeNull { get; set; }

		[ApiMember(Name = "OverrideLocale", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideLocale { get; set; }

		[ApiMember(Name = "OverrideLocaleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideLocaleStrict { get; set; }

		[ApiMember(Name = "OverrideLocaleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideLocaleIncludeNull { get; set; }

		[ApiMember(Name = "OverrideUnicodeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideUnicodeName { get; set; }

		[ApiMember(Name = "OverrideUnicodeNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUnicodeNameStrict { get; set; }

		[ApiMember(Name = "OverrideUnicodeNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUnicodeNameIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandManufacturerModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ManufacturerModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ManufacturerModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandManufacturerPagedResults : PagedResultsBase<BrandManufacturerModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandManufacturerSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandModel : NameableBaseModel
	{
		public List<BrandCurrencyModel> BrandCurrencies { get; set; }

		public List<BrandInventoryLocationModel> BrandInventoryLocations { get; set; }

		public List<BrandLanguageModel> BrandLanguages { get; set; }

		public List<BrandSiteDomainModel> BrandSiteDomains { get; set; }

		[ApiMember(Name = "Accounts", DataType = "List<BrandAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts this object is associated with")]
		public List<BrandAccountModel> Accounts { get; set; }

		[ApiMember(Name = "Categories", DataType = "List<BrandCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Categories this object is associated with")]
		public List<BrandCategoryModel> Categories { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<BrandFranchiseModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<BrandFranchiseModel> Franchises { get; set; }

		[ApiMember(Name = "Products", DataType = "List<BrandProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<BrandProductModel> Products { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<BrandStoreModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<BrandStoreModel> Stores { get; set; }

		[ApiMember(Name = "Users", DataType = "List<BrandUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Users this object is associated with")]
		public List<BrandUserModel> Users { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }

		[ApiMember(Name = "Images", DataType = "List<BrandImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<BrandImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		public string MinimumOrderDollarAmountBufferProductKey { get; set; }

		public string MinimumOrderDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderDollarAmountBufferProduct { get; set; }

		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		public string MinimumOrderQuantityAmountBufferProductKey { get; set; }

		public string MinimumOrderQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderQuantityAmountBufferProduct { get; set; }

		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryKey { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderDollarAmountBufferCategory { get; set; }

		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Dollar Amount")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Unit Quantity")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingDollarAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingQuantityAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingDollarAmountBufferCategory { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingQuantityAmountBufferCategory { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandPagedResults : PagedResultsBase<BrandModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandProductModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		public decimal? PriceBase { get; set; }

		public decimal? PriceMsrp { get; set; }

		public decimal? PriceReduction { get; set; }

		public decimal? PriceSale { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandProductPagedResults : PagedResultsBase<BrandProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }

		[ApiMember(Name = "MinPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceBase { get; set; }

		[ApiMember(Name = "MaxPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceBase { get; set; }

		[ApiMember(Name = "MatchPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceBase { get; set; }

		[ApiMember(Name = "MatchPriceBaseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceBaseIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceMsrp { get; set; }

		[ApiMember(Name = "MaxPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceMsrp { get; set; }

		[ApiMember(Name = "MatchPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceMsrp { get; set; }

		[ApiMember(Name = "MatchPriceMsrpIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceMsrpIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceReduction { get; set; }

		[ApiMember(Name = "MaxPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceReduction { get; set; }

		[ApiMember(Name = "MatchPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceReduction { get; set; }

		[ApiMember(Name = "MatchPriceReductionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceReductionIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceSale { get; set; }

		[ApiMember(Name = "MaxPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceSale { get; set; }

		[ApiMember(Name = "MatchPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceSale { get; set; }

		[ApiMember(Name = "MatchPriceSaleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceSaleIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandSiteDomainModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SiteDomainModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SiteDomainModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandSiteDomainPagedResults : PagedResultsBase<BrandSiteDomainModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandSiteDomainSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandStoreModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoreModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoreModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandStorePagedResults : PagedResultsBase<BrandStoreModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandStoreSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandUserModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string SlaveUserName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandUserPagedResults : PagedResultsBase<BrandUserModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandUserSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class BrandVendorModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public BrandModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "VendorModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public VendorModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandVendorPagedResults : PagedResultsBase<BrandVendorModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BrandVendorSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class BulkOrderHeadersModel
	{
		public IEnumerable<string> FileHeaders { get; set; }

		public IEnumerable<string> SystemHeaders { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalculatedPrice
	{
		public decimal BasePrice { get; set; }

		public decimal? SalePrice { get; set; }

		public decimal? MsrpPrice { get; set; }

		public decimal? ReductionPrice { get; set; }

		public string PricingProvider { get; set; }

		public string PriceKey { get; set; }

		public string PriceKeyAlt { get; set; }

		public List<PriceRuleModel> RelevantRules { get; set; }

		public List<PriceRuleModel> UsedRules { get; set; }

		public bool IsValid { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarAppointmentModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public CalendarModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AppointmentModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AppointmentModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarAppointmentPagedResults : PagedResultsBase<CalendarAppointmentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarAppointmentSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventDetailModel : NameableBaseModel
	{
		public int Day { get; set; }

		public DateTime? EndTime { get; set; }

		public DateTime? StartTime { get; set; }

		public string Location { get; set; }

		public int CalendarEventID { get; set; }

		public string CalendarEventKey { get; set; }

		public string CalendarEventName { get; set; }

		public CalendarEventModel CalendarEvent { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventDetailPagedResults : PagedResultsBase<CalendarEventDetailModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventDetailSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "CalendarEventID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CalendarEventID { get; set; }

		[ApiMember(Name = "MinDay", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDay { get; set; }

		[ApiMember(Name = "MaxDay", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDay { get; set; }

		[ApiMember(Name = "MatchDay", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDay { get; set; }

		[ApiMember(Name = "MinEndTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndTime { get; set; }

		[ApiMember(Name = "MaxEndTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndTime { get; set; }

		[ApiMember(Name = "MatchEndTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndTime { get; set; }

		[ApiMember(Name = "MatchEndTimeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndTimeIncludeNull { get; set; }

		[ApiMember(Name = "MinStartTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartTime { get; set; }

		[ApiMember(Name = "MaxStartTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartTime { get; set; }

		[ApiMember(Name = "MatchStartTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartTime { get; set; }

		[ApiMember(Name = "MatchStartTimeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStartTimeIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public CalendarEventModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventFilePagedResults : PagedResultsBase<CalendarEventFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventImagePagedResults : PagedResultsBase<CalendarEventImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventModel : NameableBaseModel
	{
		[ApiMember(Name = "StartDate", DataType = "DateTime", ParameterType = "body", IsRequired = false,
			Description = "This is the start date for when the event occurs. (Optional, will use DateTime.MinValue when not set)")]
		public DateTime StartDate { get; set; }

		public DateTime EndDate { get; set; }

		public int EventDuration { get; set; }

		public string EventDurationUnitOfMeasure { get; set; }

		public int MaxAttendees { get; set; }

		public string RecurrenceString { get; set; }

		public string ShortDescription { get; set; }

		public int? UserID { get; set; }

		public UserModel User { get; set; }

		public int? GroupID { get; set; }

		public string GroupKey { get; set; }

		public string GroupName { get; set; }

		public GroupModel Group { get; set; }

		public List<CalendarEventDetailModel> CalendarEventDetails { get; set; }

		public List<CalendarEventProductModel> CalendarEventProducts { get; set; }

		public int CurrentAttendeesCount { get; set; }

		public string Dates { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "Products", DataType = "List<CalendarEventProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<CalendarEventProductModel> Products { get; set; }

		public int ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }

		[ApiMember(Name = "Images", DataType = "List<CalendarEventImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<CalendarEventImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "StoredFiles", DataType = "List<CalendarEventFileModel>", ParameterType = "body", IsRequired = false,
			Description = "Stored Files for the object, optional")]
		public List<CalendarEventFileModel> StoredFiles { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventPagedResults : PagedResultsBase<CalendarEventModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventProductModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public CalendarEventModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventProductPagedResults : PagedResultsBase<CalendarEventProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventSearchModel : NameableBaseSearchModel
	{
		public string[] UserAttendanceTypeKeys { get; set; }

		public DateTime? EndDate { get; set; }

		public int? DaysUntilDeparture { get; set; }

		public int? StrictDaysUntilDeparture { get; set; }

		public int? UserID { get; set; }

		public bool? CurrentEventsOnly { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "MinEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndDate { get; set; }

		[ApiMember(Name = "MaxEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndDate { get; set; }

		[ApiMember(Name = "MatchEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndDate { get; set; }

		[ApiMember(Name = "MinStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartDate { get; set; }

		[ApiMember(Name = "MaxStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartDate { get; set; }

		[ApiMember(Name = "MatchStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartDate { get; set; }

		[ApiMember(Name = "MinEventDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinEventDuration { get; set; }

		[ApiMember(Name = "MaxEventDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxEventDuration { get; set; }

		[ApiMember(Name = "MatchEventDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchEventDuration { get; set; }

		[ApiMember(Name = "MinMaxAttendees", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinMaxAttendees { get; set; }

		[ApiMember(Name = "MaxMaxAttendees", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxMaxAttendees { get; set; }

		[ApiMember(Name = "MatchMaxAttendees", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchMaxAttendees { get; set; }

		[ApiMember(Name = "GroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? GroupID { get; set; }

		[ApiMember(Name = "GroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? GroupIDIncludeNull { get; set; }

		[ApiMember(Name = "EventDurationUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string EventDurationUnitOfMeasure { get; set; }

		[ApiMember(Name = "EventDurationUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EventDurationUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "EventDurationUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EventDurationUnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "RecurrenceString", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RecurrenceString { get; set; }

		[ApiMember(Name = "RecurrenceStringStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RecurrenceStringStrict { get; set; }

		[ApiMember(Name = "RecurrenceStringIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RecurrenceStringIncludeNull { get; set; }

		[ApiMember(Name = "ShortDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ShortDescription { get; set; }

		[ApiMember(Name = "ShortDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShortDescriptionStrict { get; set; }

		[ApiMember(Name = "ShortDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShortDescriptionIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarEventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarModel : BaseModel
	{
		public decimal? MondayHoursStart { get; set; }

		public decimal? MondayHoursEnd { get; set; }

		public decimal? TuesdayHoursStart { get; set; }

		public decimal? TuesdayHoursEnd { get; set; }

		public decimal? WednesdayHoursStart { get; set; }

		public decimal? WednesdayHoursEnd { get; set; }

		public decimal? ThursdayHoursStart { get; set; }

		public decimal? ThursdayHoursEnd { get; set; }

		public decimal? FridayHoursStart { get; set; }

		public decimal? FridayHoursEnd { get; set; }

		public decimal? SaturdayHoursStart { get; set; }

		public decimal? SaturdayHoursEnd { get; set; }

		public decimal? SundayHoursStart { get; set; }

		public decimal? SundayHoursEnd { get; set; }

		public int AccountID { get; set; }

		public string AccountKey { get; set; }

		public string AccountName { get; set; }

		public AccountModel Account { get; set; }

		public List<CalendarAppointmentModel> Appointments { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarPagedResults : PagedResultsBase<CalendarModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CalendarSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "AccountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "MinFridayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinFridayHoursEnd { get; set; }

		[ApiMember(Name = "MaxFridayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxFridayHoursEnd { get; set; }

		[ApiMember(Name = "MatchFridayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchFridayHoursEnd { get; set; }

		[ApiMember(Name = "MatchFridayHoursEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchFridayHoursEndIncludeNull { get; set; }

		[ApiMember(Name = "MinFridayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinFridayHoursStart { get; set; }

		[ApiMember(Name = "MaxFridayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxFridayHoursStart { get; set; }

		[ApiMember(Name = "MatchFridayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchFridayHoursStart { get; set; }

		[ApiMember(Name = "MatchFridayHoursStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchFridayHoursStartIncludeNull { get; set; }

		[ApiMember(Name = "MinMondayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMondayHoursEnd { get; set; }

		[ApiMember(Name = "MaxMondayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMondayHoursEnd { get; set; }

		[ApiMember(Name = "MatchMondayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMondayHoursEnd { get; set; }

		[ApiMember(Name = "MatchMondayHoursEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMondayHoursEndIncludeNull { get; set; }

		[ApiMember(Name = "MinMondayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMondayHoursStart { get; set; }

		[ApiMember(Name = "MaxMondayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMondayHoursStart { get; set; }

		[ApiMember(Name = "MatchMondayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMondayHoursStart { get; set; }

		[ApiMember(Name = "MatchMondayHoursStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMondayHoursStartIncludeNull { get; set; }

		[ApiMember(Name = "MinSaturdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSaturdayHoursEnd { get; set; }

		[ApiMember(Name = "MaxSaturdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSaturdayHoursEnd { get; set; }

		[ApiMember(Name = "MatchSaturdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSaturdayHoursEnd { get; set; }

		[ApiMember(Name = "MatchSaturdayHoursEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSaturdayHoursEndIncludeNull { get; set; }

		[ApiMember(Name = "MinSaturdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSaturdayHoursStart { get; set; }

		[ApiMember(Name = "MaxSaturdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSaturdayHoursStart { get; set; }

		[ApiMember(Name = "MatchSaturdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSaturdayHoursStart { get; set; }

		[ApiMember(Name = "MatchSaturdayHoursStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSaturdayHoursStartIncludeNull { get; set; }

		[ApiMember(Name = "MinSundayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSundayHoursEnd { get; set; }

		[ApiMember(Name = "MaxSundayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSundayHoursEnd { get; set; }

		[ApiMember(Name = "MatchSundayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSundayHoursEnd { get; set; }

		[ApiMember(Name = "MatchSundayHoursEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSundayHoursEndIncludeNull { get; set; }

		[ApiMember(Name = "MinSundayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSundayHoursStart { get; set; }

		[ApiMember(Name = "MaxSundayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSundayHoursStart { get; set; }

		[ApiMember(Name = "MatchSundayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSundayHoursStart { get; set; }

		[ApiMember(Name = "MatchSundayHoursStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSundayHoursStartIncludeNull { get; set; }

		[ApiMember(Name = "MinThursdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinThursdayHoursEnd { get; set; }

		[ApiMember(Name = "MaxThursdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxThursdayHoursEnd { get; set; }

		[ApiMember(Name = "MatchThursdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchThursdayHoursEnd { get; set; }

		[ApiMember(Name = "MatchThursdayHoursEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThursdayHoursEndIncludeNull { get; set; }

		[ApiMember(Name = "MinThursdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinThursdayHoursStart { get; set; }

		[ApiMember(Name = "MaxThursdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxThursdayHoursStart { get; set; }

		[ApiMember(Name = "MatchThursdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchThursdayHoursStart { get; set; }

		[ApiMember(Name = "MatchThursdayHoursStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThursdayHoursStartIncludeNull { get; set; }

		[ApiMember(Name = "MinTuesdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTuesdayHoursEnd { get; set; }

		[ApiMember(Name = "MaxTuesdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTuesdayHoursEnd { get; set; }

		[ApiMember(Name = "MatchTuesdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTuesdayHoursEnd { get; set; }

		[ApiMember(Name = "MatchTuesdayHoursEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTuesdayHoursEndIncludeNull { get; set; }

		[ApiMember(Name = "MinTuesdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTuesdayHoursStart { get; set; }

		[ApiMember(Name = "MaxTuesdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTuesdayHoursStart { get; set; }

		[ApiMember(Name = "MatchTuesdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTuesdayHoursStart { get; set; }

		[ApiMember(Name = "MatchTuesdayHoursStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTuesdayHoursStartIncludeNull { get; set; }

		[ApiMember(Name = "MinWednesdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinWednesdayHoursEnd { get; set; }

		[ApiMember(Name = "MaxWednesdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxWednesdayHoursEnd { get; set; }

		[ApiMember(Name = "MatchWednesdayHoursEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchWednesdayHoursEnd { get; set; }

		[ApiMember(Name = "MatchWednesdayHoursEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchWednesdayHoursEndIncludeNull { get; set; }

		[ApiMember(Name = "MinWednesdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinWednesdayHoursStart { get; set; }

		[ApiMember(Name = "MaxWednesdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxWednesdayHoursStart { get; set; }

		[ApiMember(Name = "MatchWednesdayHoursStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchWednesdayHoursStart { get; set; }

		[ApiMember(Name = "MatchWednesdayHoursStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchWednesdayHoursStartIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CampaignAdModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public CampaignModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AdModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AdModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CampaignAdPagedResults : PagedResultsBase<CampaignAdModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CampaignAdSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CampaignModel : NameableBaseModel
	{
		public DateTime? ProposedStart { get; set; }

		public DateTime? ProposedEnd { get; set; }

		public DateTime? ActualStart { get; set; }

		public DateTime? ActualEnd { get; set; }

		public decimal? BudgetedCost { get; set; }

		public decimal? OtherCost { get; set; }

		public decimal? ExpectedRevenue { get; set; }

		public decimal? TotalActualCost { get; set; }

		public decimal? TotalCampaignActivityActualCost { get; set; }

		public decimal? ExchangeRate { get; set; }

		public string CodeName { get; set; }

		public string PromotionCodeName { get; set; }

		public string Message { get; set; }

		public string Objective { get; set; }

		public int? ExpectedResponse { get; set; }

		public int? UTCConversionTimeZoneCode { get; set; }

		public bool? IsTemplate { get; set; }

		public int? CreatedByUserID { get; set; }

		public string CreatedByUserKey { get; set; }

		public List<CampaignAdModel> CampaignAds { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CampaignPagedResults : PagedResultsBase<CampaignModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CampaignSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "MinActualEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinActualEnd { get; set; }

		[ApiMember(Name = "MaxActualEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxActualEnd { get; set; }

		[ApiMember(Name = "MatchActualEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchActualEnd { get; set; }

		[ApiMember(Name = "MatchActualEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchActualEndIncludeNull { get; set; }

		[ApiMember(Name = "MinActualStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinActualStart { get; set; }

		[ApiMember(Name = "MaxActualStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxActualStart { get; set; }

		[ApiMember(Name = "MatchActualStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchActualStart { get; set; }

		[ApiMember(Name = "MatchActualStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchActualStartIncludeNull { get; set; }

		[ApiMember(Name = "MinBudgetedCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinBudgetedCost { get; set; }

		[ApiMember(Name = "MaxBudgetedCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxBudgetedCost { get; set; }

		[ApiMember(Name = "MatchBudgetedCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchBudgetedCost { get; set; }

		[ApiMember(Name = "MatchBudgetedCostIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchBudgetedCostIncludeNull { get; set; }

		[ApiMember(Name = "CreatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CreatedByUserID { get; set; }

		[ApiMember(Name = "CreatedByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CreatedByUserIDIncludeNull { get; set; }

		[ApiMember(Name = "MinExchangeRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinExchangeRate { get; set; }

		[ApiMember(Name = "MaxExchangeRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxExchangeRate { get; set; }

		[ApiMember(Name = "MatchExchangeRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchExchangeRate { get; set; }

		[ApiMember(Name = "MatchExchangeRateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchExchangeRateIncludeNull { get; set; }

		[ApiMember(Name = "MinExpectedResponse", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinExpectedResponse { get; set; }

		[ApiMember(Name = "MaxExpectedResponse", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxExpectedResponse { get; set; }

		[ApiMember(Name = "MatchExpectedResponse", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchExpectedResponse { get; set; }

		[ApiMember(Name = "MatchExpectedResponseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchExpectedResponseIncludeNull { get; set; }

		[ApiMember(Name = "MinExpectedRevenue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinExpectedRevenue { get; set; }

		[ApiMember(Name = "MaxExpectedRevenue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxExpectedRevenue { get; set; }

		[ApiMember(Name = "MatchExpectedRevenue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchExpectedRevenue { get; set; }

		[ApiMember(Name = "MatchExpectedRevenueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchExpectedRevenueIncludeNull { get; set; }

		[ApiMember(Name = "IsTemplate", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsTemplate { get; set; }

		[ApiMember(Name = "IsTemplateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsTemplateIncludeNull { get; set; }

		[ApiMember(Name = "MinOtherCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOtherCost { get; set; }

		[ApiMember(Name = "MaxOtherCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOtherCost { get; set; }

		[ApiMember(Name = "MatchOtherCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOtherCost { get; set; }

		[ApiMember(Name = "MatchOtherCostIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOtherCostIncludeNull { get; set; }

		[ApiMember(Name = "MinProposedEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinProposedEnd { get; set; }

		[ApiMember(Name = "MaxProposedEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxProposedEnd { get; set; }

		[ApiMember(Name = "MatchProposedEnd", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchProposedEnd { get; set; }

		[ApiMember(Name = "MatchProposedEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchProposedEndIncludeNull { get; set; }

		[ApiMember(Name = "MinProposedStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinProposedStart { get; set; }

		[ApiMember(Name = "MaxProposedStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxProposedStart { get; set; }

		[ApiMember(Name = "MatchProposedStart", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchProposedStart { get; set; }

		[ApiMember(Name = "MatchProposedStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchProposedStartIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotalActualCost { get; set; }

		[ApiMember(Name = "MaxTotalActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotalActualCost { get; set; }

		[ApiMember(Name = "MatchTotalActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotalActualCost { get; set; }

		[ApiMember(Name = "MatchTotalActualCostIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalActualCostIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalCampaignActivityActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotalCampaignActivityActualCost { get; set; }

		[ApiMember(Name = "MaxTotalCampaignActivityActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotalCampaignActivityActualCost { get; set; }

		[ApiMember(Name = "MatchTotalCampaignActivityActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotalCampaignActivityActualCost { get; set; }

		[ApiMember(Name = "MatchTotalCampaignActivityActualCostIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalCampaignActivityActualCostIncludeNull { get; set; }

		[ApiMember(Name = "MinUTCConversionTimeZoneCode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinUTCConversionTimeZoneCode { get; set; }

		[ApiMember(Name = "MaxUTCConversionTimeZoneCode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxUTCConversionTimeZoneCode { get; set; }

		[ApiMember(Name = "MatchUTCConversionTimeZoneCode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchUTCConversionTimeZoneCode { get; set; }

		[ApiMember(Name = "MatchUTCConversionTimeZoneCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchUTCConversionTimeZoneCodeIncludeNull { get; set; }

		[ApiMember(Name = "CodeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CodeName { get; set; }

		[ApiMember(Name = "CodeNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeNameStrict { get; set; }

		[ApiMember(Name = "CodeNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeNameIncludeNull { get; set; }

		[ApiMember(Name = "Message", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Message { get; set; }

		[ApiMember(Name = "MessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MessageStrict { get; set; }

		[ApiMember(Name = "MessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MessageIncludeNull { get; set; }

		[ApiMember(Name = "Objective", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Objective { get; set; }

		[ApiMember(Name = "ObjectiveStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ObjectiveStrict { get; set; }

		[ApiMember(Name = "ObjectiveIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ObjectiveIncludeNull { get; set; }

		[ApiMember(Name = "PromotionCodeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PromotionCodeName { get; set; }

		[ApiMember(Name = "PromotionCodeNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PromotionCodeNameStrict { get; set; }

		[ApiMember(Name = "PromotionCodeNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PromotionCodeNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CampaignStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CampaignTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartContactModel : AmARelationshipTableBaseModel
	{
		public CartModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartContactPagedResults : PagedResultsBase<CartContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartContactSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartEventModel : SalesEventBaseModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartEventPagedResults : PagedResultsBase<CartEventModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartEventSearchModel : SalesEventBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartEventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public CartModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartFilePagedResults : PagedResultsBase<CartFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartItemPagedResults : PagedResultsBase<SalesItemBaseModel`2>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartItemTargetPagedResults : PagedResultsBase<SalesItemTargetBaseModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartModel : SalesCollectionBaseModel<ICartTypeModel, CartTypeModel, ICartFileModel, CartFileModel, ICartContactModel, CartContactModel, ICartEventModel, CartEventModel, IAppliedCartDiscountModel, AppliedCartDiscountModel, IAppliedCartItemDiscountModel, AppliedCartItemDiscountModel>
	{
		public bool NothingToShip { get; set; }

		[ApiMember(Name = "RequestedShipDate", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The date when a user would like to receive their products")]
		public DateTime? RequestedShipDate { get; set; }

		public decimal? SubtotalShippingModifier { get; set; }

		public int? SubtotalShippingModifierMode { get; set; }

		public decimal? SubtotalTaxesModifier { get; set; }

		public int? SubtotalTaxesModifierMode { get; set; }

		public decimal? SubtotalFeesModifier { get; set; }

		public int? SubtotalFeesModifierMode { get; set; }

		public decimal? SubtotalHandlingModifier { get; set; }

		public int? SubtotalHandlingModifierMode { get; set; }

		public decimal? SubtotalDiscountsModifier { get; set; }

		public int? SubtotalDiscountsModifierMode { get; set; }

		public List<AppliedCartItemDiscountModel> ItemDiscounts { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartPagedResults : PagedResultsBase<CartModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartSearchModel : SalesCollectionBaseSearchModel
	{
		[ApiMember(Name = "MinSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MinSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFees { get; set; }

		[ApiMember(Name = "MaxSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFees { get; set; }

		[ApiMember(Name = "MatchSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFees { get; set; }

		[ApiMember(Name = "MinSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandling { get; set; }

		[ApiMember(Name = "MaxSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandling { get; set; }

		[ApiMember(Name = "MatchSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandling { get; set; }

		[ApiMember(Name = "MinSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalItems { get; set; }

		[ApiMember(Name = "MaxSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalItems { get; set; }

		[ApiMember(Name = "MatchSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalItems { get; set; }

		[ApiMember(Name = "MinSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShipping { get; set; }

		[ApiMember(Name = "MaxSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShipping { get; set; }

		[ApiMember(Name = "MatchSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShipping { get; set; }

		[ApiMember(Name = "MinSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxes { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxes { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxes { get; set; }

		[ApiMember(Name = "MinTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotal { get; set; }

		[ApiMember(Name = "MaxTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotal { get; set; }

		[ApiMember(Name = "MatchTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotal { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "MinDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDueDate { get; set; }

		[ApiMember(Name = "MaxDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDueDate { get; set; }

		[ApiMember(Name = "MatchDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDueDate { get; set; }

		[ApiMember(Name = "MatchDueDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDueDateIncludeNull { get; set; }

		[ApiMember(Name = "MinRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinRequestedShipDate { get; set; }

		[ApiMember(Name = "MaxRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxRequestedShipDate { get; set; }

		[ApiMember(Name = "MatchRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchRequestedShipDate { get; set; }

		[ApiMember(Name = "MatchRequestedShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRequestedShipDateIncludeNull { get; set; }

		[ApiMember(Name = "SessionID", DataType = "Guid?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public Guid? SessionID { get; set; }

		[ApiMember(Name = "SessionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SessionIDIncludeNull { get; set; }

		[ApiMember(Name = "ShipmentID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShipmentID { get; set; }

		[ApiMember(Name = "ShipmentIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShipmentIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShippingContactID { get; set; }

		[ApiMember(Name = "ShippingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingSameAsBilling", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBilling { get; set; }

		[ApiMember(Name = "ShippingSameAsBillingIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBillingIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalDiscountsModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscountsModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscountsModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscountsModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscountsModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscountsModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscountsModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalDiscountsModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalDiscountsModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalDiscountsModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscountsModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalDiscountsModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscountsModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalDiscountsModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscountsModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalDiscountsModifierModeIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalFeesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFeesModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalFeesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFeesModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalFeesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFeesModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalFeesModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalFeesModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalFeesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalFeesModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalFeesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalFeesModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalFeesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalFeesModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalFeesModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalFeesModifierModeIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalHandlingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandlingModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalHandlingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandlingModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalHandlingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandlingModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalHandlingModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalHandlingModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalHandlingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalHandlingModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalHandlingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalHandlingModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalHandlingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalHandlingModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalHandlingModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalHandlingModifierModeIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalShippingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShippingModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalShippingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShippingModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalShippingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShippingModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalShippingModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalShippingModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalShippingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalShippingModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalShippingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalShippingModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalShippingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalShippingModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalShippingModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalShippingModifierModeIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalTaxesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxesModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxesModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxesModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxesModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalTaxesModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalTaxesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalTaxesModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalTaxesModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalTaxesModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxesModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalTaxesModifierModeIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartStatePagedResults : PagedResultsBase<StateModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartTypeModel : TypableBaseModel
	{
		[ApiMember(Name = "CreatedByUserID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Created by this User ID (custom wish lists)")]
		public int? CreatedByUserID { get; set; }

		public string CreatedByUserKey { get; set; }

		[ApiMember(Name = "CreatedByUser", DataType = "UserModel", ParameterType = "body", IsRequired = false,
			Description = "Created by this User (custom wish lists)")]
		public UserModel CreatedByUser { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartTypePagedResults : PagedResultsBase<CartTypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CartTypeSearchModel : TypableBaseSearchModel
	{
		[ApiMember(Name = "CreatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CreatedByUserID { get; set; }

		[ApiMember(Name = "CreatedByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CreatedByUserIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryCatalogSearchForm : SearchFormBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CategoryFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the category.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public CategoryModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryFilePagedResults : PagedResultsBase<CategoryFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CategoryImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the category record.")]
		public int CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the category record.")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the category record.")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The category record.")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "Category", DataType = "CategoryModel", ParameterType = "body", IsRequired = false,
			Description = "The category record.")]
		public CategoryModel Category { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryImagePagedResults : PagedResultsBase<CategoryImageModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryIndexableModel : IndexableModelBase
	{
		public string Category { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CategoryModel : NameableBaseModel
	{
		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Display Name")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Sort Order")]
		public int? SortOrder { get; set; }

		[ApiMember(Name = "IsVisible", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Category is Visible")]
		public bool IsVisible { get; set; }

		[ApiMember(Name = "IncludeInMenu", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Show category in menu")]
		public bool IncludeInMenu { get; set; }

		[ApiMember(Name = "HeaderContent", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Category Header Content")]
		public string HeaderContent { get; set; }

		[ApiMember(Name = "SidebarContent", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Category Sidebar Content")]
		public string SidebarContent { get; set; }

		[ApiMember(Name = "FooterContent", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Category Footer Content")]
		public string FooterContent { get; set; }

		[ApiMember(Name = "HandlingCharge", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "Category Handling Charge (Fee, applied once during checkout if product in this category is being purchased)")]
		public decimal? HandlingCharge { get; set; }

		[ApiMember(Name = "RestockingFeePercent", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "Restocking Fee as a percentage of Product sold price")]
		public decimal? RestockingFeePercent { get; set; }

		[ApiMember(Name = "RestockingFeeAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "Restocking Fee Amount")]
		public decimal? RestockingFeeAmount { get; set; }

		[ApiMember(Name = "ParentName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Name of the Parent, if have a parent")]
		public string ParentName { get; set; }

		[ApiMember(Name = "ParentSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL of the Parent, if have a parent")]
		public string ParentSeoUrl { get; set; }

		public int? RestockingFeeAmountCurrencyID { get; set; }

		public string RestockingFeeAmountCurrencyKey { get; set; }

		public string RestockingFeeAmountCurrencyName { get; set; }

		public CurrencyModel RestockingFeeAmountCurrency { get; set; }

		[ApiMember(Name = "ProductCategories", DataType = "List<ProductCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Products assigned to this Category")]
		public List<ProductCategoryModel> ProductCategories { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandCategoryModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseCategoryModel> Franchises { get; set; }

		[ApiMember(Name = "Products", DataType = "List<ProductCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<ProductCategoryModel> Products { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<StoreCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<StoreCategoryModel> Stores { get; set; }

		[ApiMember(Name = "Images", DataType = "List<CategoryImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<CategoryImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "StoredFiles", DataType = "List<CategoryFileModel>", ParameterType = "body", IsRequired = false,
			Description = "Stored Files for the object, optional")]
		public List<CategoryFileModel> StoredFiles { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		public string MinimumOrderDollarAmountBufferProductKey { get; set; }

		public string MinimumOrderDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderDollarAmountBufferProduct { get; set; }

		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		public string MinimumOrderQuantityAmountBufferProductKey { get; set; }

		public string MinimumOrderQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderQuantityAmountBufferProduct { get; set; }

		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryKey { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderDollarAmountBufferCategory { get; set; }

		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Dollar Amount")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Unit Quantity")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingDollarAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingQuantityAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingDollarAmountBufferCategory { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "RequiresRoles", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "A comma delimited string? for Role Names that are required for access")]
		public string RequiresRoles { get; set; }

		[ApiMember(Name = "RequiresRolesList", DataType = "List<string>", ParameterType = "body", IsRequired = false,
			Description = "A List string? for Role Names that are required for access")]
		public List<string> RequiresRolesList { get; set; }

		[ApiMember(Name = "RequiresRolesAlt", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "A comma delimited string? for Role Names that are required for access. This is an alternate list for additional purposes.")]
		public string RequiresRolesAlt { get; set; }

		[ApiMember(Name = "RequiresRolesListAlt", DataType = "List<string>", ParameterType = "body", IsRequired = false,
			Description = "A List string? for Role Names that are required for access. This is an alternate list for additional purposes.")]
		public List<string> RequiresRolesListAlt { get; set; }

		[ApiMember(Name = "Reviews", DataType = "List<ReviewModel>", ParameterType = "body", IsRequired = false,
			Description = "Category Reviews")]
		public List<ReviewModel> Reviews { get; set; }

		public int? ParentID { get; set; }

		public string ParentKey { get; set; }

		public CategoryModel Parent { get; set; }

		public List<CategoryModel> Children { get; set; }

		[ApiMember(Name = "HasChildren", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "Whether or not the object has child objects (read-only)")]
		public bool HasChildren { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryPagedResults : PagedResultsBase<CategoryModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CategorySearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "ExcludeProductCategories", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "Exclude Product Categories")]
		public bool? ExcludeProductCategories { get; set; }

		[ApiMember(Name = "ParentSEOURL", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Parent SEO URL")]
		public string ParentSEOURL { get; set; }

		[ApiMember(Name = "ChildJsonAttributes", DataType = "Dictionary<string, string[]>", ParameterType = "query", IsRequired = false,
			Description = "Filter by a dictionary of attribute values (JSON version) of the children (up to 2 levels below current)")]
		public Dictionary<string, string[]> ChildJsonAttributes { get; set; }

		[ApiMember(Name = "HasProductsUnderAnotherCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Advanced filtering")]
		public int? HasProductsUnderAnotherCategoryID { get; set; }

		[ApiMember(Name = "HasProductsUnderAnotherCategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Advanced filtering")]
		public string HasProductsUnderAnotherCategoryKey { get; set; }

		[ApiMember(Name = "HasProductsUnderAnotherCategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Advanced filtering")]
		public string HasProductsUnderAnotherCategoryName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "ParentID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The identifier of the parent record. [Optional]")]
		public int? ParentID { get; set; }

		[ApiMember(Name = "ParentIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ParentIDIncludeNull { get; set; }

		[ApiMember(Name = "ParentKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The custom key of the parent record. [Optional]")]
		public string ParentKey { get; set; }

		[ApiMember(Name = "DisregardParents", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "Disregard Parents. [Optional, default=false]")]
		public bool? DisregardParents { get; set; }

		[ApiMember(Name = "HasChildren", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "A boolean indicating whether the record has (active) children. [Optional]")]
		public bool? HasChildren { get; set; }

		[ApiMember(Name = "IncludeChildrenInResults", DataType = "bool", ParameterType = "query", IsRequired = false,
			Description = "Include Children In Results. [Required, default=false]")]
		public bool IncludeChildrenInResults { get; set; }

		[ApiMember(Name = "ChildID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The identifier of a child record. [Optional]")]
		public int? ChildID { get; set; }

		[ApiMember(Name = "ChildKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The custom key of a child record. [Optional]")]
		public string ChildKey { get; set; }

		[ApiMember(Name = "IncludeInMenu", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IncludeInMenu { get; set; }

		[ApiMember(Name = "IsVisible", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisible { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinHandlingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinHandlingCharge { get; set; }

		[ApiMember(Name = "MaxHandlingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxHandlingCharge { get; set; }

		[ApiMember(Name = "MatchHandlingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchHandlingCharge { get; set; }

		[ApiMember(Name = "MatchHandlingChargeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchHandlingChargeIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MaxRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MatchRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MatchRestockingFeeAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRestockingFeeAmountIncludeNull { get; set; }

		[ApiMember(Name = "RestockingFeeAmountCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RestockingFeeAmountCurrencyID { get; set; }

		[ApiMember(Name = "RestockingFeeAmountCurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestockingFeeAmountCurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRestockingFeePercent { get; set; }

		[ApiMember(Name = "MaxRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRestockingFeePercent { get; set; }

		[ApiMember(Name = "MatchRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRestockingFeePercent { get; set; }

		[ApiMember(Name = "MatchRestockingFeePercentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRestockingFeePercentIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "FooterContent", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string FooterContent { get; set; }

		[ApiMember(Name = "FooterContentStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FooterContentStrict { get; set; }

		[ApiMember(Name = "FooterContentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FooterContentIncludeNull { get; set; }

		[ApiMember(Name = "HeaderContent", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string HeaderContent { get; set; }

		[ApiMember(Name = "HeaderContentStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HeaderContentStrict { get; set; }

		[ApiMember(Name = "HeaderContentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HeaderContentIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "RequiresRoles", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RequiresRoles { get; set; }

		[ApiMember(Name = "RequiresRolesStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresRolesStrict { get; set; }

		[ApiMember(Name = "RequiresRolesIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresRolesIncludeNull { get; set; }

		[ApiMember(Name = "RequiresRolesAlt", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RequiresRolesAlt { get; set; }

		[ApiMember(Name = "RequiresRolesAltStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresRolesAltStrict { get; set; }

		[ApiMember(Name = "RequiresRolesAltIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresRolesAltIncludeNull { get; set; }

		[ApiMember(Name = "SidebarContent", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SidebarContent { get; set; }

		[ApiMember(Name = "SidebarContentStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SidebarContentStrict { get; set; }

		[ApiMember(Name = "SidebarContentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SidebarContentIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategorySearchViewModel : SearchViewModelBase<CategoryCatalogSearchForm, CategoryIndexableModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategorySuggestResult : SuggestResultBase
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CategoryTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutModel
	{
		public CheckoutWithTaxes WithTaxes { get; set; }

		public CheckoutWithCartInfo WithCartInfo { get; set; }

		public CheckoutWithUserInfo WithUserInfo { get; set; }

		public CheckoutPayByWalletEntry PayByWalletEntry { get; set; }

		public CheckoutPayByCreditCard PayByCreditCard { get; set; }

		public CheckoutPayByECheck PayByECheck { get; set; }

		public CheckoutPayByBillMeLater PayByBillMeLater { get; set; }

		public CheckoutPayByPayPal PayByPayPal { get; set; }

		public CheckoutPayByPayoneer PayByPayoneer { get; set; }

		[ApiMember(Name = "ReferringStoreID", DataType = "int?", ParameterType = "body", IsRequired = true,
			Description = "Referring Store ID")]
		public int? ReferringStoreID { get; set; }

		[ApiMember(Name = "ReferringBrandID", DataType = "int?", ParameterType = "body", IsRequired = true,
			Description = "Referring Brand ID")]
		public int? ReferringBrandID { get; set; }

		[ApiMember(Name = "AffiliateAccountKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Key for the Affiliate Account on B2B orders")]
		public string AffiliateAccountKey { get; set; }

		[ApiMember(Name = "SalesOrderID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sales Order ID")]
		public int? SalesOrderID { get; set; }

		[ApiMember(Name = "Shipping", DataType = "ContactModel", ParameterType = "body", IsRequired = true,
			Description = "Shipping Information")]
		public ContactModel Shipping { get; set; }

		[ApiMember(Name = "SpecialInstructions", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Adds a note to the order on submission.")]
		public string SpecialInstructions { get; set; }

		[ApiMember(Name = "IsSameAsBilling", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Is Same As Billing")]
		public bool IsSameAsBilling { get; set; }

		[ApiMember(Name = "Billing", DataType = "ContactModel", ParameterType = "body", IsRequired = true,
			Description = "Billing Information")]
		public ContactModel Billing { get; set; }

		[ApiMember(Name = "PaymentStyle", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Payment Style")]
		public string PaymentStyle { get; set; }

		[ApiMember(Name = "IsPartialPayment", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Is a partial payment")]
		public bool IsPartialPayment { get; set; }

		[ApiMember(Name = "Amount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "Amount")]
		public decimal? Amount { get; set; }

		[ApiMember(Name = "CurrencyKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "CurrencyKey")]
		public string CurrencyKey { get; set; }

		[ApiMember(Name = "CategoryIDs", DataType = "int[]", ParameterType = "body", IsRequired = false,
			Description = "For Quote Submissions, list of category ids to attach")]
		public int[] CategoryIDs { get; set; }

		[ApiMember(Name = "FileNames", DataType = "List<string>", ParameterType = "body", IsRequired = false,
			Description = "For Quote Submissions, list of Uploaded File Names to attach")]
		public List<string> FileNames { get; set; }

		[ApiMember(Name = "SerializableAttributes", DataType = "SerializableAttributesDictionary", ParameterType = "body", IsRequired = false,
			Description = "For Order or Quote submissions, the custom attributes to apply to the record created")]
		public SerializableAttributesDictionary SerializableAttributes { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutPayByBillMeLater
	{
		[ApiMember(Name = "CustomerPurchaseOrderNumber", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Customer's PO Number")]
		public string CustomerPurchaseOrderNumber { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutPayByCreditCard
	{
		[ApiMember(Name = "CardType", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: Card Type")]
		public string CardType { get; set; }

		[ApiMember(Name = "CardReferenceName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: Card Reference Name (for adding to Wallet)")]
		public string CardReferenceName { get; set; }

		[ApiMember(Name = "CardHolderName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: Name on the Card")]
		public string CardHolderName { get; set; }

		[ApiMember(Name = "CardNumber", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: Card Number")]
		public string CardNumber { get; set; }

		[ApiMember(Name = "CVV", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: CVV")]
		public string CVV { get; set; }

		[ApiMember(Name = "ExpirationMonth", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: Expiration Month")]
		public int? ExpirationMonth { get; set; }

		[ApiMember(Name = "ExpirationYear", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: Expiration Year")]
		public int? ExpirationYear { get; set; }

		[ApiMember(Name = "CardToken", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: Token")]
		public string CardToken { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutPayByECheck
	{
		[ApiMember(Name = "AccountReferenceName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "eCheck Payment Method: Account Reference Name (for adding to Wallet)")]
		public string AccountReferenceName { get; set; }

		[ApiMember(Name = "AccountHolderName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "eCheck Payment Method: Name on the Account")]
		public string AccountHolderName { get; set; }

		[ApiMember(Name = "AccountNumber", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "eCheck Payment Method: Account Number")]
		public string AccountNumber { get; set; }

		[ApiMember(Name = "RoutingNumber", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "eCheck Payment Method: Routing Number")]
		public string RoutingNumber { get; set; }

		[ApiMember(Name = "BankName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "eCheck Payment Method: Bank Name")]
		public string BankName { get; set; }

		[ApiMember(Name = "AccountType", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "eCheck Payment Method: Account Type (Checking/Savings)")]
		public string AccountType { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutPayByPayoneer
	{
		[ApiMember(Name = "PayoneerAccountID", DataType = "long?", ParameterType = "body", IsRequired = false,
			Description = "Payoneer Account ID")]
		public long? PayoneerAccountID { get; set; }

		[ApiMember(Name = "PayoneerCustomerID", DataType = "long?", ParameterType = "body", IsRequired = false,
			Description = "Payoneer Customer ID")]
		public long? PayoneerCustomerID { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutPayByPayPal
	{
		[ApiMember(Name = "CancelUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "PayPal Checkout Method: Cancel Url")]
		public string CancelUrl { get; set; }

		[ApiMember(Name = "ReturnUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "PayPal Checkout Method: Return Url")]
		public string ReturnUrl { get; set; }

		[ApiMember(Name = "PayerID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "PayPal Checkout Method: Payer ID")]
		public string PayerID { get; set; }

		[ApiMember(Name = "PayPalToken", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "PayPal Checkout Method: Token")]
		public string PayPalToken { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutPayByWalletEntry
	{
		[ApiMember(Name = "WalletID", DataType = "int?", ParameterType = "body", IsRequired = true,
			Description = "Wallet ID")]
		public int? WalletID { get; set; }

		[ApiMember(Name = "WalletToken", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Wallet Token")]
		public string WalletToken { get; set; }

		[ApiMember(Name = "WalletCVV", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Credit Card Payment Method: CVV (Use with Wallet Entry")]
		public string WalletCVV { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutResult
	{
		public bool Succeeded { get; set; }

		public string WarningMessage { get; set; }

		public string ErrorMessage { get; set; }

		public int? OrderID { get; set; }

		public int? QuoteID { get; set; }

		public string PaymentTransactionID { get; set; }

		public string Token { get; set; }

		public List<string> WarningMessages { get; set; }

		public List<string> ErrorMessages { get; set; }

		public int[] OrderIDs { get; set; }

		public int[] QuoteIDs { get; set; }

		public string[] PaymentTransactionIDs { get; set; }

		public string[] Tokens { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutWithCartInfo
	{
		[ApiMember(Name = "CartID", DataType = "int?", ParameterType = "body", IsRequired = true,
			Description = "Cart ID")]
		public int? CartID { get; set; }

		[ApiMember(Name = "CartTypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Type of the cart to check out to an order")]
		public string CartTypeName { get; set; }

		[ApiMember(Name = "CartSessionID", DataType = "Guid?", ParameterType = "body", IsRequired = true,
			Description = "Cart Session ID")]
		public Guid? CartSessionID { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutWithTaxes
	{
		[ApiMember(Name = "VatID", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Optional VAT ID number for European customers")]
		public string VatID { get; set; }

		[ApiMember(Name = "TaxExemptionNumber", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "TaxExemptionNumber")]
		public string TaxExemptionNumber { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CheckoutWithUserInfo
	{
		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "body", IsRequired = true,
			Description = "User ID")]
		public int? UserID { get; set; }

		[ApiMember(Name = "IsNewAccount", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Is New Account")]
		public bool IsNewAccount { get; set; }

		[ApiMember(Name = "UserName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Account Username")]
		public string UserName { get; set; }

		[ApiMember(Name = "Password", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Account Password")]
		public string Password { get; set; }

		[ApiMember(Name = "ExternalUserID", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Account ExternalUser ID")]
		public string ExternalUserID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ContactImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContactImagePagedResults : PagedResultsBase<ContactImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContactImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContactImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ContactModel : BaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this object, optional")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this object, optional")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this object, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this object, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = true,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public List<ContactImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		public string FirstName { get; set; }

		public string MiddleName { get; set; }

		public string LastName { get; set; }

		public string FullName { get; set; }

		public string Phone1 { get; set; }

		public string Phone2 { get; set; }

		public string Phone3 { get; set; }

		public string Fax1 { get; set; }

		public string Email1 { get; set; }

		public string Website1 { get; set; }

		public bool SameAsBilling { get; set; }

		public string Title { get; set; }

		public int? AddressID { get; set; }

		public string AddressKey { get; set; }

		public AddressModel Address { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContactPagedResults : PagedResultsBase<ContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContactSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		public int? AddressID { get; set; }

		public bool? AddressIDIncludeNull { get; set; }

		public string Email1 { get; set; }

		public bool? Email1Strict { get; set; }

		public bool? Email1IncludeNull { get; set; }

		public string Fax1 { get; set; }

		public bool? Fax1Strict { get; set; }

		public bool? Fax1IncludeNull { get; set; }

		public string FirstName { get; set; }

		public bool? FirstNameStrict { get; set; }

		public bool? FirstNameIncludeNull { get; set; }

		public string FullName { get; set; }

		public bool? FullNameStrict { get; set; }

		public bool? FullNameIncludeNull { get; set; }

		public string LastName { get; set; }

		public bool? LastNameStrict { get; set; }

		public bool? LastNameIncludeNull { get; set; }

		public string MiddleName { get; set; }

		public bool? MiddleNameStrict { get; set; }

		public bool? MiddleNameIncludeNull { get; set; }

		public string Phone1 { get; set; }

		public bool? Phone1Strict { get; set; }

		public bool? Phone1IncludeNull { get; set; }

		public string Phone2 { get; set; }

		public bool? Phone2Strict { get; set; }

		public bool? Phone2IncludeNull { get; set; }

		public string Phone3 { get; set; }

		public bool? Phone3Strict { get; set; }

		public bool? Phone3IncludeNull { get; set; }

		public string Website1 { get; set; }

		public bool? Website1Strict { get; set; }

		public bool? Website1IncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContactTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContractorModel : BaseModel
	{
		public int? AccountID { get; set; }

		public string AccountKey { get; set; }

		public string AccountName { get; set; }

		public AccountModel Account { get; set; }

		public int? UserID { get; set; }

		public string UserKey { get; set; }

		public string UserName { get; set; }

		public UserModel User { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public StoreModel Store { get; set; }

		public List<ServiceAreaModel> ServiceAreas { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContractorPagedResults : PagedResultsBase<ContractorModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ContractorSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "AccountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ConversationModel : BaseModel
	{
		public bool? HasEnded { get; set; }

		public bool? CopyUserWhenEnded { get; set; }

		public List<MessageModel> Messages { get; set; }

		public List<ConversationUserModel> ConversationUsers { get; set; }

		public int? MessagesCount { get; set; }

		public int? ConversationUsersCount { get; set; }

		public List<string> ConversationUserUserNames { get; set; }

		[ApiMember(Name = "Users", DataType = "List<ConversationUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Users this object is associated with")]
		public List<ConversationUserModel> Users { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ConversationPagedResults : PagedResultsBase<ConversationModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ConversationSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "CopyUserWhenEnded", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyUserWhenEnded { get; set; }

		[ApiMember(Name = "CopyUserWhenEndedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyUserWhenEndedIncludeNull { get; set; }

		[ApiMember(Name = "HasEnded", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasEnded { get; set; }

		[ApiMember(Name = "HasEndedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasEndedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ConversationUserModel : AmARelationshipTableBaseModel
	{
		public bool? IsTyping { get; set; }

		public DateTime? LastHeartbeat { get; set; }

		[ApiMember(Name = "SlaveUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string SlaveUserName { get; set; }

		public ConversationModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ConversationUserPagedResults : PagedResultsBase<ConversationUserModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ConversationUserSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "IsTyping", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsTyping { get; set; }

		[ApiMember(Name = "IsTypingIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsTypingIncludeNull { get; set; }

		[ApiMember(Name = "MinLastHeartbeat", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinLastHeartbeat { get; set; }

		[ApiMember(Name = "MaxLastHeartbeat", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxLastHeartbeat { get; set; }

		[ApiMember(Name = "MatchLastHeartbeat", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchLastHeartbeat { get; set; }

		[ApiMember(Name = "MatchLastHeartbeatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLastHeartbeatIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CounterLogModel : BaseModel
	{
		public decimal? Value { get; set; }

		public int CounterID { get; set; }

		public string CounterKey { get; set; }

		public CounterModel Counter { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CounterLogPagedResults : PagedResultsBase<CounterLogModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CounterLogSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "CounterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CounterID { get; set; }

		[ApiMember(Name = "MinValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinValue { get; set; }

		[ApiMember(Name = "MaxValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxValue { get; set; }

		[ApiMember(Name = "MatchValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchValue { get; set; }

		[ApiMember(Name = "MatchValueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchValueIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CounterLogTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CounterModel : BaseModel
	{
		public decimal? Value { get; set; }

		public List<CounterLogModel> CounterLogs { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CounterPagedResults : PagedResultsBase<CounterModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CounterSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "MinValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinValue { get; set; }

		[ApiMember(Name = "MaxValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxValue { get; set; }

		[ApiMember(Name = "MatchValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchValue { get; set; }

		[ApiMember(Name = "MatchValueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchValueIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CounterTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CountryCurrencyModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public CountryModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CurrencyModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CurrencyModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CountryCurrencyPagedResults : PagedResultsBase<CountryCurrencyModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CountryCurrencySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CountryImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CountryImagePagedResults : PagedResultsBase<CountryImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CountryImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CountryImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CountryLanguageModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public CountryModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "LanguageModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public LanguageModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CountryLanguagePagedResults : PagedResultsBase<CountryLanguageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CountryLanguageSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CountryModel : NameableBaseModel
	{
		public string Code { get; set; }

		public string ISO3166Alpha2 { get; set; }

		public string ISO3166Alpha3 { get; set; }

		public int? ISO3166Numeric { get; set; }

		public string PhoneRegEx { get; set; }

		public string PhonePrefix { get; set; }

		public List<RegionModel> Regions { get; set; }

		[ApiMember(Name = "Images", DataType = "List<CountryImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<CountryImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "Currencies", DataType = "List<CountryCurrency>", ParameterType = "body", IsRequired = false,
			Description = "A List of currencies tied to this object")]
		public List<CountryCurrencyModel> Currencies { get; set; }

		[ApiMember(Name = "Languages", DataType = "List<CountryLanguage>", ParameterType = "body", IsRequired = false,
			Description = "A List of languages tied to this object")]
		public List<CountryLanguageModel> Languages { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CountryPagedResults : PagedResultsBase<CountryModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CountrySearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinISO3166Numeric", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinISO3166Numeric { get; set; }

		[ApiMember(Name = "MaxISO3166Numeric", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxISO3166Numeric { get; set; }

		[ApiMember(Name = "MatchISO3166Numeric", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchISO3166Numeric { get; set; }

		[ApiMember(Name = "MatchISO3166NumericIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchISO3166NumericIncludeNull { get; set; }

		[ApiMember(Name = "Code", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Code { get; set; }

		[ApiMember(Name = "CodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeStrict { get; set; }

		[ApiMember(Name = "CodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeIncludeNull { get; set; }

		[ApiMember(Name = "ISO3166Alpha2", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO3166Alpha2 { get; set; }

		[ApiMember(Name = "ISO3166Alpha2Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO3166Alpha2Strict { get; set; }

		[ApiMember(Name = "ISO3166Alpha2IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO3166Alpha2IncludeNull { get; set; }

		[ApiMember(Name = "ISO3166Alpha3", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO3166Alpha3 { get; set; }

		[ApiMember(Name = "ISO3166Alpha3Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO3166Alpha3Strict { get; set; }

		[ApiMember(Name = "ISO3166Alpha3IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO3166Alpha3IncludeNull { get; set; }

		[ApiMember(Name = "PhonePrefix", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PhonePrefix { get; set; }

		[ApiMember(Name = "PhonePrefixStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PhonePrefixStrict { get; set; }

		[ApiMember(Name = "PhonePrefixIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PhonePrefixIncludeNull { get; set; }

		[ApiMember(Name = "PhoneRegEx", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PhoneRegEx { get; set; }

		[ApiMember(Name = "PhoneRegExStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PhoneRegExStrict { get; set; }

		[ApiMember(Name = "PhoneRegExIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PhoneRegExIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CurrencyConversionModel : BaseModel
	{
		public decimal Rate { get; set; }

		public DateTime? StartDate { get; set; }

		public DateTime? EndDate { get; set; }

		public int StartingCurrencyID { get; set; }

		public string StartingCurrencyKey { get; set; }

		public string StartingCurrencyName { get; set; }

		public CurrencyModel StartingCurrency { get; set; }

		public int EndingCurrencyID { get; set; }

		public string EndingCurrencyKey { get; set; }

		public string EndingCurrencyName { get; set; }

		public CurrencyModel EndingCurrency { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CurrencyConversionPagedResults : PagedResultsBase<CurrencyConversionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CurrencyConversionSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "MinRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRate { get; set; }

		[ApiMember(Name = "MaxRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRate { get; set; }

		[ApiMember(Name = "MatchRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRate { get; set; }

		[ApiMember(Name = "EndingCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? EndingCurrencyID { get; set; }

		[ApiMember(Name = "StartingCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? StartingCurrencyID { get; set; }

		[ApiMember(Name = "MinEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndDate { get; set; }

		[ApiMember(Name = "MaxEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndDate { get; set; }

		[ApiMember(Name = "MatchEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndDate { get; set; }

		[ApiMember(Name = "MatchEndDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndDateIncludeNull { get; set; }

		[ApiMember(Name = "MinStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartDate { get; set; }

		[ApiMember(Name = "MaxStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartDate { get; set; }

		[ApiMember(Name = "MatchStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartDate { get; set; }

		[ApiMember(Name = "MatchStartDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStartDateIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CurrencyImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CurrencyImagePagedResults : PagedResultsBase<CurrencyImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CurrencyImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CurrencyImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class CurrencyModel : NameableBaseModel
	{
		public string ISO4217Alpha { get; set; }

		public int? ISO4217Numeric { get; set; }

		public decimal UnicodeSymbolValue { get; set; }

		public string HtmlCharacterCode { get; set; }

		public string RawCharacter { get; set; }

		public int? DecimalPlaceAccuracy { get; set; }

		public bool? UseSeparator { get; set; }

		public string RawDecimalCharacter { get; set; }

		public string HtmlDecimalCharacterCode { get; set; }

		public string RawSeparatorCharacter { get; set; }

		public string HtmlSeparatorCharacterCode { get; set; }

		[ApiMember(Name = "Images", DataType = "List<CurrencyImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<CurrencyImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CurrencyPagedResults : PagedResultsBase<CurrencyModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class CurrencySearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MaxUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MatchUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MinDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MaxDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MatchDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MatchDecimalPlaceAccuracyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDecimalPlaceAccuracyIncludeNull { get; set; }

		[ApiMember(Name = "MinISO4217Numeric", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinISO4217Numeric { get; set; }

		[ApiMember(Name = "MaxISO4217Numeric", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxISO4217Numeric { get; set; }

		[ApiMember(Name = "MatchISO4217Numeric", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchISO4217Numeric { get; set; }

		[ApiMember(Name = "MatchISO4217NumericIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchISO4217NumericIncludeNull { get; set; }

		[ApiMember(Name = "UseSeparator", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UseSeparator { get; set; }

		[ApiMember(Name = "UseSeparatorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UseSeparatorIncludeNull { get; set; }

		[ApiMember(Name = "HtmlCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string HtmlCharacterCode { get; set; }

		[ApiMember(Name = "HtmlCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HtmlCharacterCodeStrict { get; set; }

		[ApiMember(Name = "HtmlCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HtmlCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "HtmlDecimalCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string HtmlDecimalCharacterCode { get; set; }

		[ApiMember(Name = "HtmlDecimalCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HtmlDecimalCharacterCodeStrict { get; set; }

		[ApiMember(Name = "HtmlDecimalCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HtmlDecimalCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "HtmlSeparatorCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string HtmlSeparatorCharacterCode { get; set; }

		[ApiMember(Name = "HtmlSeparatorCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HtmlSeparatorCharacterCodeStrict { get; set; }

		[ApiMember(Name = "HtmlSeparatorCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HtmlSeparatorCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "ISO4217Alpha", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO4217Alpha { get; set; }

		[ApiMember(Name = "ISO4217AlphaStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO4217AlphaStrict { get; set; }

		[ApiMember(Name = "ISO4217AlphaIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO4217AlphaIncludeNull { get; set; }

		[ApiMember(Name = "RawCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RawCharacter { get; set; }

		[ApiMember(Name = "RawCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RawCharacterStrict { get; set; }

		[ApiMember(Name = "RawCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RawCharacterIncludeNull { get; set; }

		[ApiMember(Name = "RawDecimalCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RawDecimalCharacter { get; set; }

		[ApiMember(Name = "RawDecimalCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RawDecimalCharacterStrict { get; set; }

		[ApiMember(Name = "RawDecimalCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RawDecimalCharacterIncludeNull { get; set; }

		[ApiMember(Name = "RawSeparatorCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RawSeparatorCharacter { get; set; }

		[ApiMember(Name = "RawSeparatorCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RawSeparatorCharacterStrict { get; set; }

		[ApiMember(Name = "RawSeparatorCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RawSeparatorCharacterIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DashboardDataForListerAdminInner
	{
		public decimal TotalInvoices { get; set; }

		public Dictionary<string, int> InvoicesByStatus { get; set; }

		public int LotsWithReserve { get; set; }

		public decimal LotsWithReservePercent { get; set; }

		public int ReserveNotMet { get; set; }

		public decimal ReserveNotMetPercent { get; set; }

		public int NoBidLots { get; set; }

		public decimal NoBidLotsPercent { get; set; }

		public int NoShowsUnderX { get; set; }

		public decimal NoShowsUnderXPercent { get; set; }

		public Dictionary<string, int> ProcessedLots { get; set; }
	}
#endif

#if NOTSTOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DashboardDataForListerAdminResponse
	{
		public DashboardDataForListerAdminInner You { get; set; }

		public DashboardDataForListerAdminInner Us { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountAccountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AccountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AccountModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountAccountPagedResults : PagedResultsBase<DiscountAccountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountAccountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountAccountTypeModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "TypeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public TypeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountAccountTypePagedResults : PagedResultsBase<DiscountAccountTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountAccountTypeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountBrandModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "BrandModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public BrandModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountBrandPagedResults : PagedResultsBase<DiscountBrandModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountBrandSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCategoryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCategoryPagedResults : PagedResultsBase<DiscountCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCodeModel : BaseModel
	{
		public string Code { get; set; }

		public int DiscountID { get; set; }

		public string DiscountKey { get; set; }

		public string DiscountName { get; set; }

		public DiscountModel Discount { get; set; }

		public int? UserID { get; set; }

		public string UserKey { get; set; }

		public UserModel User { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCodePagedResults : PagedResultsBase<DiscountCodeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCodeSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "DiscountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? DiscountID { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "Code", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Code { get; set; }

		[ApiMember(Name = "CodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeStrict { get; set; }

		[ApiMember(Name = "CodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCountryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CountryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CountryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCountryPagedResults : PagedResultsBase<DiscountCountryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountCountrySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountFranchiseModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "FranchiseModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public FranchiseModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountFranchisePagedResults : PagedResultsBase<DiscountFranchiseModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountFranchiseSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountManufacturerModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ManufacturerModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ManufacturerModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountManufacturerPagedResults : PagedResultsBase<DiscountManufacturerModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountManufacturerSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class DiscountModel : NameableBaseModel
	{
		public bool CanCombine { get; set; }

		public bool IsAutoApplied { get; set; }

		public int RoundingOperation { get; set; }

		public int? UsageLimitPerAccount { get; set; }

		public int? UsageLimitPerUser { get; set; }

		public int? UsageLimitPerCart { get; set; }

		public int? UsageLimitGlobally { get; set; }

		public CompareOperator DiscountCompareOperator { get; set; }

		public int DiscountTypeID { get; set; }

		public int ValueType { get; set; }

		public int? RoundingType { get; set; }

		public int? Priority { get; set; }

		public DateTime? StartDate { get; set; }

		public DateTime? EndDate { get; set; }

		public decimal Value { get; set; }

		public decimal ThresholdAmount { get; set; }

		public decimal? BuyXValue { get; set; }

		public decimal? GetYValue { get; set; }

		public List<DiscountCodeModel> Codes { get; set; }

		public List<DiscountCountryModel> Countries { get; set; }

		public List<DiscountUserRoleModel> UserRoles { get; set; }

		public List<DiscountCategoryModel> Categories { get; set; }

		public List<DiscountAccountTypeModel> AccountTypes { get; set; }

		public List<DiscountProductTypeModel> ProductTypes { get; set; }

		public List<DiscountShipCarrierMethodModel> ShipCarrierMethods { get; set; }

		public decimal DiscountTotal { get; set; }

		[ApiMember(Name = "Accounts", DataType = "List<DiscountAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts this object is associated with")]
		public List<DiscountAccountModel> Accounts { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<DiscountBrandModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<DiscountBrandModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<DiscountFranchiseModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<DiscountFranchiseModel> Franchises { get; set; }

		[ApiMember(Name = "Manufacturers", DataType = "List<DiscountManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Manufacturers this object is associated with")]
		public List<DiscountManufacturerModel> Manufacturers { get; set; }

		[ApiMember(Name = "Products", DataType = "List<DiscountProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<DiscountProductModel> Products { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<DiscountStoreModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<DiscountStoreModel> Stores { get; set; }

		[ApiMember(Name = "Users", DataType = "List<DiscountUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Users this object is associated with")]
		public List<DiscountUserModel> Users { get; set; }

		[ApiMember(Name = "Vendors", DataType = "List<DiscountVendorModel>", ParameterType = "body", IsRequired = false,
			Description = "Vendors this object is associated with")]
		public List<DiscountVendorModel> Vendors { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountPagedResults : PagedResultsBase<DiscountModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountProductModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountProductPagedResults : PagedResultsBase<DiscountProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountProductTypeModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "TypeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public TypeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountProductTypePagedResults : PagedResultsBase<DiscountProductTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountProductTypeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "Code", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Code { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "CanCombine", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CanCombine { get; set; }

		[ApiMember(Name = "IsAutoApplied", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsAutoApplied { get; set; }

		[ApiMember(Name = "MinThresholdAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinThresholdAmount { get; set; }

		[ApiMember(Name = "MaxThresholdAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxThresholdAmount { get; set; }

		[ApiMember(Name = "MatchThresholdAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchThresholdAmount { get; set; }

		[ApiMember(Name = "MinValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinValue { get; set; }

		[ApiMember(Name = "MaxValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxValue { get; set; }

		[ApiMember(Name = "MatchValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchValue { get; set; }

		[ApiMember(Name = "DiscountTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? DiscountTypeID { get; set; }

		[ApiMember(Name = "MinRoundingOperation", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinRoundingOperation { get; set; }

		[ApiMember(Name = "MaxRoundingOperation", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxRoundingOperation { get; set; }

		[ApiMember(Name = "MatchRoundingOperation", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchRoundingOperation { get; set; }

		[ApiMember(Name = "MinValueType", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinValueType { get; set; }

		[ApiMember(Name = "MaxValueType", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxValueType { get; set; }

		[ApiMember(Name = "MatchValueType", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchValueType { get; set; }

		[ApiMember(Name = "MinBuyXValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinBuyXValue { get; set; }

		[ApiMember(Name = "MaxBuyXValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxBuyXValue { get; set; }

		[ApiMember(Name = "MatchBuyXValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchBuyXValue { get; set; }

		[ApiMember(Name = "MatchBuyXValueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchBuyXValueIncludeNull { get; set; }

		[ApiMember(Name = "MinDiscountCompareOperator", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDiscountCompareOperator { get; set; }

		[ApiMember(Name = "MaxDiscountCompareOperator", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDiscountCompareOperator { get; set; }

		[ApiMember(Name = "MatchDiscountCompareOperator", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDiscountCompareOperator { get; set; }

		[ApiMember(Name = "MatchDiscountCompareOperatorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDiscountCompareOperatorIncludeNull { get; set; }

		[ApiMember(Name = "MinEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndDate { get; set; }

		[ApiMember(Name = "MaxEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndDate { get; set; }

		[ApiMember(Name = "MatchEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndDate { get; set; }

		[ApiMember(Name = "MatchEndDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndDateIncludeNull { get; set; }

		[ApiMember(Name = "MinGetYValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinGetYValue { get; set; }

		[ApiMember(Name = "MaxGetYValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxGetYValue { get; set; }

		[ApiMember(Name = "MatchGetYValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchGetYValue { get; set; }

		[ApiMember(Name = "MatchGetYValueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchGetYValueIncludeNull { get; set; }

		[ApiMember(Name = "MinPriority", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinPriority { get; set; }

		[ApiMember(Name = "MaxPriority", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxPriority { get; set; }

		[ApiMember(Name = "MatchPriority", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchPriority { get; set; }

		[ApiMember(Name = "MatchPriorityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriorityIncludeNull { get; set; }

		[ApiMember(Name = "MinRoundingType", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinRoundingType { get; set; }

		[ApiMember(Name = "MaxRoundingType", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxRoundingType { get; set; }

		[ApiMember(Name = "MatchRoundingType", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchRoundingType { get; set; }

		[ApiMember(Name = "MatchRoundingTypeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRoundingTypeIncludeNull { get; set; }

		[ApiMember(Name = "MinStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartDate { get; set; }

		[ApiMember(Name = "MaxStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartDate { get; set; }

		[ApiMember(Name = "MatchStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartDate { get; set; }

		[ApiMember(Name = "MatchStartDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStartDateIncludeNull { get; set; }

		[ApiMember(Name = "MinUsageLimitGlobally", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinUsageLimitGlobally { get; set; }

		[ApiMember(Name = "MaxUsageLimitGlobally", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxUsageLimitGlobally { get; set; }

		[ApiMember(Name = "MatchUsageLimitGlobally", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchUsageLimitGlobally { get; set; }

		[ApiMember(Name = "MatchUsageLimitGloballyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchUsageLimitGloballyIncludeNull { get; set; }

		[ApiMember(Name = "MinUsageLimitPerAccount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinUsageLimitPerAccount { get; set; }

		[ApiMember(Name = "MaxUsageLimitPerAccount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxUsageLimitPerAccount { get; set; }

		[ApiMember(Name = "MatchUsageLimitPerAccount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchUsageLimitPerAccount { get; set; }

		[ApiMember(Name = "MatchUsageLimitPerAccountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchUsageLimitPerAccountIncludeNull { get; set; }

		[ApiMember(Name = "MinUsageLimitPerCart", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinUsageLimitPerCart { get; set; }

		[ApiMember(Name = "MaxUsageLimitPerCart", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxUsageLimitPerCart { get; set; }

		[ApiMember(Name = "MatchUsageLimitPerCart", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchUsageLimitPerCart { get; set; }

		[ApiMember(Name = "MatchUsageLimitPerCartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchUsageLimitPerCartIncludeNull { get; set; }

		[ApiMember(Name = "MinUsageLimitPerUser", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinUsageLimitPerUser { get; set; }

		[ApiMember(Name = "MaxUsageLimitPerUser", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxUsageLimitPerUser { get; set; }

		[ApiMember(Name = "MatchUsageLimitPerUser", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchUsageLimitPerUser { get; set; }

		[ApiMember(Name = "MatchUsageLimitPerUserIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchUsageLimitPerUserIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountsForInvoice
	{
		public List<AppliedSalesInvoiceDiscountModel> Discounts { get; set; }

		public List<AppliedSalesInvoiceItemDiscountModel> ItemDiscounts { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountsForOrderResponse
	{
		public List<AppliedSalesOrderDiscountModel> Discounts { get; set; }

		public List<AppliedSalesOrderItemDiscountModel> ItemDiscounts { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountsForQuote
	{
		public List<AppliedSalesQuoteDiscountModel> Discounts { get; set; }

		public List<AppliedSalesQuoteItemDiscountModel> ItemDiscounts { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountShipCarrierMethodModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ShipCarrierMethodModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ShipCarrierMethodModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountShipCarrierMethodPagedResults : PagedResultsBase<DiscountShipCarrierMethodModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountShipCarrierMethodSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountStoreModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoreModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoreModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountStorePagedResults : PagedResultsBase<DiscountStoreModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountStoreSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountUserModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string SlaveUserName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountUserPagedResults : PagedResultsBase<DiscountUserModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountUserRoleModel : BaseModel
	{
		public string RoleName { get; set; }

		public int MasterID { get; set; }

		public string MasterKey { get; set; }

		public string MasterName { get; set; }

		public DiscountModel Master { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountUserRolePagedResults : PagedResultsBase<DiscountUserRoleModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountUserRoleSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "RoleName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RoleName { get; set; }

		[ApiMember(Name = "RoleNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RoleNameStrict { get; set; }

		[ApiMember(Name = "RoleNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RoleNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountUserSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountVendorModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DiscountModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "VendorModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public VendorModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountVendorPagedResults : PagedResultsBase<DiscountVendorModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DiscountVendorSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictCurrencyModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public DistrictModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CurrencyModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CurrencyModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictCurrencyPagedResults : PagedResultsBase<DistrictCurrencyModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictCurrencySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictImagePagedResults : PagedResultsBase<DistrictImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictLanguageModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public DistrictModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "LanguageModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public LanguageModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictLanguagePagedResults : PagedResultsBase<DistrictLanguageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictLanguageSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class DistrictModel : NameableBaseModel
	{
		[ApiMember(Name = "Code", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "District Code")]
		public string Code { get; set; }

		[ApiMember(Name = "RegionID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Region ID")]
		public int? RegionID { get; set; }

		[ApiMember(Name = "RegionKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Region Key")]
		public string RegionKey { get; set; }

		[ApiMember(Name = "RegionName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Region Name")]
		public string RegionName { get; set; }

		[ApiMember(Name = "Region", DataType = "RegionModel", ParameterType = "body", IsRequired = false,
			Description = "Region")]
		public RegionModel Region { get; set; }

		[ApiMember(Name = "CountryID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Country ID")]
		public int CountryID { get; set; }

		[ApiMember(Name = "CountryKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Country Key")]
		public string CountryKey { get; set; }

		[ApiMember(Name = "CountryName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Country Name")]
		public string CountryName { get; set; }

		[ApiMember(Name = "Country", DataType = "CountryModel", ParameterType = "body", IsRequired = false,
			Description = "Country")]
		public CountryModel Country { get; set; }

		[ApiMember(Name = "Images", DataType = "List<DistrictImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<DistrictImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "Currencies", DataType = "List<DistrictCurrency>", ParameterType = "body", IsRequired = false,
			Description = "A List of currencies tied to this object")]
		public List<DistrictCurrencyModel> Currencies { get; set; }

		[ApiMember(Name = "Languages", DataType = "List<DistrictLanguage>", ParameterType = "body", IsRequired = false,
			Description = "A List of languages tied to this object")]
		public List<DistrictLanguageModel> Languages { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictPagedResults : PagedResultsBase<DistrictModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DistrictSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "CountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CountryID { get; set; }

		[ApiMember(Name = "RegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RegionID { get; set; }

		[ApiMember(Name = "RegionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RegionIDIncludeNull { get; set; }

		[ApiMember(Name = "Code", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Code { get; set; }

		[ApiMember(Name = "CodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeStrict { get; set; }

		[ApiMember(Name = "CodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class DownloadFileResult
	{
		public string DownloadUrl { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailQueueAttachmentModel : AmARelationshipTableNameableBaseModel
	{
		public int CreatedByUserID { get; set; }

		public string CreatedByUserKey { get; set; }

		public UserModel CreatedByUser { get; set; }

		public int? UpdatedByUserID { get; set; }

		public string UpdatedByUserKey { get; set; }

		public UserModel UpdatedByUser { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public EmailQueueModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailQueueAttachmentPagedResults : PagedResultsBase<EmailQueueAttachmentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailQueueAttachmentSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "CreatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CreatedByUserID { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }

		[ApiMember(Name = "UpdatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UpdatedByUserID { get; set; }

		[ApiMember(Name = "UpdatedByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UpdatedByUserIDIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailQueueModel : BaseModel
	{
		public string AddressesTo { get; set; }

		public string AddressesCc { get; set; }

		public string AddressesBcc { get; set; }

		public string AddressFrom { get; set; }

		public string Subject { get; set; }

		public string Body { get; set; }

		public bool IsHtml { get; set; }

		public int Attempts { get; set; }

		public bool HasError { get; set; }

		public int? EmailTemplateID { get; set; }

		public string EmailTemplateKey { get; set; }

		public string EmailTemplateName { get; set; }

		public EmailTemplateModel EmailTemplate { get; set; }

		public int? MessageRecipientID { get; set; }

		public string MessageRecipientKey { get; set; }

		public MessageRecipientModel MessageRecipient { get; set; }

		public List<EmailQueueAttachmentModel> EmailQueueAttachments { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailQueuePagedResults : PagedResultsBase<EmailQueueModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailQueueSearchModel : BaseSearchModel
	{
		public int? TemplateID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "HasError", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasError { get; set; }

		[ApiMember(Name = "IsHtml", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsHtml { get; set; }

		[ApiMember(Name = "MinAttempts", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinAttempts { get; set; }

		[ApiMember(Name = "MaxAttempts", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxAttempts { get; set; }

		[ApiMember(Name = "MatchAttempts", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchAttempts { get; set; }

		[ApiMember(Name = "EmailTemplateID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? EmailTemplateID { get; set; }

		[ApiMember(Name = "EmailTemplateIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EmailTemplateIDIncludeNull { get; set; }

		[ApiMember(Name = "MessageRecipientID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MessageRecipientID { get; set; }

		[ApiMember(Name = "MessageRecipientIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MessageRecipientIDIncludeNull { get; set; }

		[ApiMember(Name = "AddressesBcc", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AddressesBcc { get; set; }

		[ApiMember(Name = "AddressesBccStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressesBccStrict { get; set; }

		[ApiMember(Name = "AddressesBccIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressesBccIncludeNull { get; set; }

		[ApiMember(Name = "AddressesCc", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AddressesCc { get; set; }

		[ApiMember(Name = "AddressesCcStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressesCcStrict { get; set; }

		[ApiMember(Name = "AddressesCcIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressesCcIncludeNull { get; set; }

		[ApiMember(Name = "AddressesTo", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AddressesTo { get; set; }

		[ApiMember(Name = "AddressesToStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressesToStrict { get; set; }

		[ApiMember(Name = "AddressesToIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressesToIncludeNull { get; set; }

		[ApiMember(Name = "AddressFrom", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AddressFrom { get; set; }

		[ApiMember(Name = "AddressFromStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressFromStrict { get; set; }

		[ApiMember(Name = "AddressFromIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressFromIncludeNull { get; set; }

		[ApiMember(Name = "Body", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Body { get; set; }

		[ApiMember(Name = "BodyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BodyStrict { get; set; }

		[ApiMember(Name = "BodyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BodyIncludeNull { get; set; }

		[ApiMember(Name = "Subject", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Subject { get; set; }

		[ApiMember(Name = "SubjectStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SubjectStrict { get; set; }

		[ApiMember(Name = "SubjectIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SubjectIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailTemplateModel : NameableBaseModel
	{
		public string Subject { get; set; }

		public string Body { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailTemplatePagedResults : PagedResultsBase<EmailTemplateModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailTemplateSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "Body", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Body { get; set; }

		[ApiMember(Name = "BodyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BodyStrict { get; set; }

		[ApiMember(Name = "BodyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BodyIncludeNull { get; set; }

		[ApiMember(Name = "Subject", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Subject { get; set; }

		[ApiMember(Name = "SubjectStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SubjectStrict { get; set; }

		[ApiMember(Name = "SubjectIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SubjectIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EmailTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EndUserEventModel
	{
		public int? VisitorID { get; set; }

		public string VisitorKey { get; set; }

		public string VisitorName { get; set; }

		public VisitorModel Visitor { get; set; }

		public int? VisitID { get; set; }

		public string VisitKey { get; set; }

		public string VisitName { get; set; }

		public VisitModel Visit { get; set; }

		public int? EventID { get; set; }

		public string EventKey { get; set; }

		public string EventName { get; set; }

		public EventModel Event { get; set; }

		public int? PageViewID { get; set; }

		public string PageViewKey { get; set; }

		public string PageViewName { get; set; }

		public PageViewModel PageView { get; set; }

		public int? PageViewEventID { get; set; }

		public string PageViewEventKey { get; set; }

		public PageViewEventModel PageViewEvent { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EventLogModel : NameableBaseModel
	{
		public int? DataID { get; set; }

		[ApiMember(Name = "LogLevel", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Integer to indicate the logging level, optional/nullable.")]
		public int? LogLevel { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EventLogPagedResults : PagedResultsBase<EventLogModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EventLogSearchModel : NameableBaseSearchModel
	{
		public DateTime? MinDate { get; set; }

		public DateTime? MaxDate { get; set; }

		public int? LogLevel { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "DataID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? DataID { get; set; }

		[ApiMember(Name = "DataIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DataIDIncludeNull { get; set; }

		[ApiMember(Name = "MinLogLevel", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinLogLevel { get; set; }

		[ApiMember(Name = "MaxLogLevel", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxLogLevel { get; set; }

		[ApiMember(Name = "MatchLogLevel", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchLogLevel { get; set; }

		[ApiMember(Name = "MatchLogLevelIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLogLevelIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EventModel : NameableBaseModel
	{
		public int? VisitID { get; set; }

		public string VisitKey { get; set; }

		public string VisitName { get; set; }

		public VisitModel Visit { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }

		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The originating IP Address of the Request for the Event")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "Score", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Score of the Event")]
		public int? Score { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the Address storing location information for the Event")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string AddressKey { get; set; }

		[ApiMember(Name = "Address", DataType = "AddressModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Address storing location information for the Event")]
		public AddressModel Address { get; set; }

		[ApiMember(Name = "IPOrganizationID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the IP Organization related with this Event")]
		public int? IPOrganizationID { get; set; }

		[ApiMember(Name = "IPOrganizationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string IPOrganizationKey { get; set; }

		[ApiMember(Name = "IPOrganizationName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string IPOrganizationName { get; set; }

		[ApiMember(Name = "IPOrganization", DataType = "IPOrganizationModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the IP Organization related with this Event")]
		public IPOrganizationModel IPOrganization { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the Address storing location information for the Event")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string UserKey { get; set; }

		[ApiMember(Name = "User", DataType = "UserModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the User related with this Event")]
		public UserModel User { get; set; }

		[ApiMember(Name = "DidBounce", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "Did the visitor bounce from the site after coming to it?")]
		public bool? DidBounce { get; set; }

		[ApiMember(Name = "OperatingSystem", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Operating System used in the request for the Event")]
		public string OperatingSystem { get; set; }

		[ApiMember(Name = "Browser", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Browser used in the request for the Event")]
		public string Browser { get; set; }

		[ApiMember(Name = "Language", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Language of the Request for the Event")]
		public string Language { get; set; }

		[ApiMember(Name = "ContainsSocialProfile", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "Does the Event contain Social Profile Data?")]
		public bool? ContainsSocialProfile { get; set; }

		[ApiMember(Name = "Delta", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The number of changes from this Event")]
		public int? Delta { get; set; }

		[ApiMember(Name = "Duration", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The duration of this event in seconds")]
		public int? Duration { get; set; }

		[ApiMember(Name = "StartedOn", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The time at which the Event started")]
		public DateTime? StartedOn { get; set; }

		[ApiMember(Name = "EndedOn", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The time at which the Event ended")]
		public DateTime? EndedOn { get; set; }

		[ApiMember(Name = "Time", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The time of the Event")]
		public string Time { get; set; }

		[ApiMember(Name = "EntryPage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The entry page of the event")]
		public string EntryPage { get; set; }

		[ApiMember(Name = "ExitPage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The the exit page of the event")]
		public string ExitPage { get; set; }

		[ApiMember(Name = "IsFirstTrigger", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Is this the first time this event has triggered?")]
		public bool? IsFirstTrigger { get; set; }

		[ApiMember(Name = "Flash", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Was Flash used to trigger this event? If so, the version of Flash")]
		public string Flash { get; set; }

		[ApiMember(Name = "Keywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The keywords for the Event")]
		public string Keywords { get; set; }

		[ApiMember(Name = "PartitionKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Partition Key for the Event")]
		public string PartitionKey { get; set; }

		[ApiMember(Name = "Referrer", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Referring Source of the Event (such as Google, Bing or another website)")]
		public string Referrer { get; set; }

		[ApiMember(Name = "ReferringHost", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Host URL of the Referring Source of the Event (such as www.google.com)")]
		public string ReferringHost { get; set; }

		[ApiMember(Name = "RowKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Row Key for this Event")]
		public string RowKey { get; set; }

		[ApiMember(Name = "Source", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Source of this Event as an integer")]
		public int? Source { get; set; }

		[ApiMember(Name = "TotalTriggers", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The total number of Triggers for this event")]
		public int? TotalTriggers { get; set; }

		[ApiMember(Name = "CampaignID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Campaign related to this Event")]
		public int? CampaignID { get; set; }

		[ApiMember(Name = "Campaign", DataType = "CampaignModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Campaign related to this Event")]
		public CampaignModel Campaign { get; set; }

		[ApiMember(Name = "CampaignKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string CampaignKey { get; set; }

		[ApiMember(Name = "CampaignName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string CampaignName { get; set; }

		[ApiMember(Name = "SiteDomainID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Site Domain related to this Event")]
		public int? SiteDomainID { get; set; }

		[ApiMember(Name = "SiteDomain", DataType = "SiteDomainModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Site Domain related to this Event")]
		public SiteDomainModel SiteDomain { get; set; }

		[ApiMember(Name = "SiteDomainKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SiteDomainKey { get; set; }

		[ApiMember(Name = "SiteDomainName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SiteDomainName { get; set; }

		[ApiMember(Name = "VisitorID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Visitor related to this Event")]
		public int? VisitorID { get; set; }

		[ApiMember(Name = "Visitor", DataType = "VisitorModel?", ParameterType = "body", IsRequired = false,
			Description = "The body of the Visitor related to this Event")]
		public VisitorModel Visitor { get; set; }

		[ApiMember(Name = "VisitorKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string VisitorKey { get; set; }

		[ApiMember(Name = "VisitorName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string VisitorName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EventPagedResults : PagedResultsBase<EventModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EventSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressIDIncludeNull { get; set; }

		[ApiMember(Name = "CampaignID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CampaignID { get; set; }

		[ApiMember(Name = "CampaignIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CampaignIDIncludeNull { get; set; }

		[ApiMember(Name = "ContainsSocialProfile", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContainsSocialProfile { get; set; }

		[ApiMember(Name = "ContainsSocialProfileIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContainsSocialProfileIncludeNull { get; set; }

		[ApiMember(Name = "MinDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDelta { get; set; }

		[ApiMember(Name = "MaxDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDelta { get; set; }

		[ApiMember(Name = "MatchDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDelta { get; set; }

		[ApiMember(Name = "MatchDeltaIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDeltaIncludeNull { get; set; }

		[ApiMember(Name = "DidBounce", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DidBounce { get; set; }

		[ApiMember(Name = "DidBounceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DidBounceIncludeNull { get; set; }

		[ApiMember(Name = "MinDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDuration { get; set; }

		[ApiMember(Name = "MaxDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDuration { get; set; }

		[ApiMember(Name = "MatchDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDuration { get; set; }

		[ApiMember(Name = "MatchDurationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDurationIncludeNull { get; set; }

		[ApiMember(Name = "MinEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndedOn { get; set; }

		[ApiMember(Name = "MaxEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndedOn { get; set; }

		[ApiMember(Name = "MatchEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndedOn { get; set; }

		[ApiMember(Name = "MatchEndedOnIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndedOnIncludeNull { get; set; }

		[ApiMember(Name = "IPOrganizationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? IPOrganizationID { get; set; }

		[ApiMember(Name = "IPOrganizationIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPOrganizationIDIncludeNull { get; set; }

		[ApiMember(Name = "IsFirstTrigger", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsFirstTrigger { get; set; }

		[ApiMember(Name = "IsFirstTriggerIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsFirstTriggerIncludeNull { get; set; }

		[ApiMember(Name = "MinScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinScore { get; set; }

		[ApiMember(Name = "MaxScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxScore { get; set; }

		[ApiMember(Name = "MatchScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchScore { get; set; }

		[ApiMember(Name = "MatchScoreIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchScoreIncludeNull { get; set; }

		[ApiMember(Name = "SiteDomainID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SiteDomainID { get; set; }

		[ApiMember(Name = "SiteDomainIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SiteDomainIDIncludeNull { get; set; }

		[ApiMember(Name = "MinSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSource { get; set; }

		[ApiMember(Name = "MaxSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSource { get; set; }

		[ApiMember(Name = "MatchSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSource { get; set; }

		[ApiMember(Name = "MatchSourceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSourceIncludeNull { get; set; }

		[ApiMember(Name = "MinStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartedOn { get; set; }

		[ApiMember(Name = "MaxStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartedOn { get; set; }

		[ApiMember(Name = "MatchStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartedOn { get; set; }

		[ApiMember(Name = "MatchStartedOnIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStartedOnIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTotalTriggers { get; set; }

		[ApiMember(Name = "MaxTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTotalTriggers { get; set; }

		[ApiMember(Name = "MatchTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTotalTriggers { get; set; }

		[ApiMember(Name = "MatchTotalTriggersIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalTriggersIncludeNull { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "VisitID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VisitID { get; set; }

		[ApiMember(Name = "VisitIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VisitIDIncludeNull { get; set; }

		[ApiMember(Name = "VisitorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VisitorID { get; set; }

		[ApiMember(Name = "VisitorIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VisitorIDIncludeNull { get; set; }

		[ApiMember(Name = "Browser", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Browser { get; set; }

		[ApiMember(Name = "BrowserStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrowserStrict { get; set; }

		[ApiMember(Name = "BrowserIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrowserIncludeNull { get; set; }

		[ApiMember(Name = "EntryPage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string EntryPage { get; set; }

		[ApiMember(Name = "EntryPageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EntryPageStrict { get; set; }

		[ApiMember(Name = "EntryPageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EntryPageIncludeNull { get; set; }

		[ApiMember(Name = "ExitPage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ExitPage { get; set; }

		[ApiMember(Name = "ExitPageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExitPageStrict { get; set; }

		[ApiMember(Name = "ExitPageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExitPageIncludeNull { get; set; }

		[ApiMember(Name = "Flash", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Flash { get; set; }

		[ApiMember(Name = "FlashStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FlashStrict { get; set; }

		[ApiMember(Name = "FlashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FlashIncludeNull { get; set; }

		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "IPAddressStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressStrict { get; set; }

		[ApiMember(Name = "IPAddressIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressIncludeNull { get; set; }

		[ApiMember(Name = "Keywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Keywords { get; set; }

		[ApiMember(Name = "KeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? KeywordsStrict { get; set; }

		[ApiMember(Name = "KeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? KeywordsIncludeNull { get; set; }

		[ApiMember(Name = "Language", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Language { get; set; }

		[ApiMember(Name = "LanguageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LanguageStrict { get; set; }

		[ApiMember(Name = "LanguageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LanguageIncludeNull { get; set; }

		[ApiMember(Name = "OperatingSystem", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OperatingSystem { get; set; }

		[ApiMember(Name = "OperatingSystemStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingSystemStrict { get; set; }

		[ApiMember(Name = "OperatingSystemIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingSystemIncludeNull { get; set; }

		[ApiMember(Name = "PartitionKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PartitionKey { get; set; }

		[ApiMember(Name = "PartitionKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PartitionKeyStrict { get; set; }

		[ApiMember(Name = "PartitionKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PartitionKeyIncludeNull { get; set; }

		[ApiMember(Name = "Referrer", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Referrer { get; set; }

		[ApiMember(Name = "ReferrerStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferrerStrict { get; set; }

		[ApiMember(Name = "ReferrerIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferrerIncludeNull { get; set; }

		[ApiMember(Name = "ReferringHost", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ReferringHost { get; set; }

		[ApiMember(Name = "ReferringHostStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferringHostStrict { get; set; }

		[ApiMember(Name = "ReferringHostIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferringHostIncludeNull { get; set; }

		[ApiMember(Name = "RowKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RowKey { get; set; }

		[ApiMember(Name = "RowKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RowKeyStrict { get; set; }

		[ApiMember(Name = "RowKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RowKeyIncludeNull { get; set; }

		[ApiMember(Name = "Time", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Time { get; set; }

		[ApiMember(Name = "TimeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeStrict { get; set; }

		[ApiMember(Name = "TimeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EventStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class EventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteCategoryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public UserModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteCategoryPagedResults : PagedResultsBase<FavoriteCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		public int? CategoryID { get; set; }

		public string CategoryKey { get; set; }

		public string CategoryName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteManufacturerModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public UserModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ManufacturerModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ManufacturerModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteManufacturerPagedResults : PagedResultsBase<FavoriteManufacturerModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteManufacturerSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteShipCarrierModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public UserModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ShipCarrierModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ShipCarrierModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteShipCarrierPagedResults : PagedResultsBase<FavoriteShipCarrierModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteShipCarrierSearchModel : AmARelationshipTableBaseSearchModel
	{
		public int? ShipCarrierID { get; set; }

		public string ShipCarrierKey { get; set; }

		public string ShipCarrierName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteStoreModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public UserModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoreModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoreModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteStorePagedResults : PagedResultsBase<FavoriteStoreModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteStoreSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteVendorModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public UserModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "VendorModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public VendorModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteVendorPagedResults : PagedResultsBase<FavoriteVendorModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FavoriteVendorSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseAccountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "HasAccessToFranchise", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "A value indicating whether this account has access to the franchise")]
		public bool HasAccessToFranchise { get; set; }

		[ApiMember(Name = "PricePointID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The price point for this account when purchasing under this franchise.")]
		public int? PricePointID { get; set; }

		[ApiMember(Name = "PricePointKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The price point for this account when purchasing under this franchise.")]
		public string PricePointKey { get; set; }

		[ApiMember(Name = "PricePointName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The price point for this account when purchasing under this franchise.")]
		public string PricePointName { get; set; }

		[ApiMember(Name = "PricePoint", DataType = "PricePointModel", ParameterType = "body", IsRequired = false,
			Description = "The price point for this account when purchasing under this franchise.")]
		public PricePointModel PricePoint { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AccountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AccountModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseAccountPagedResults : PagedResultsBase<FranchiseAccountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseAccountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "HasAccessToFranchise", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasAccessToFranchise { get; set; }

		[ApiMember(Name = "PricePointID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PricePointID { get; set; }

		[ApiMember(Name = "PricePointIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PricePointIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseAuctionModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AuctionModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AuctionModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseAuctionPagedResults : PagedResultsBase<FranchiseAuctionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseAuctionSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseCatalogSearchForm : SearchFormBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseCategoryModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseCategoryPagedResults : PagedResultsBase<FranchiseCategoryModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseCountryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CountryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CountryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseCountryPagedResults : PagedResultsBase<FranchiseCountryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseCountrySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseCurrencyModel : AmARelationshipTableBaseModel
	{
		public bool IsPrimary { get; set; }

		public string CustomName { get; set; }

		public string CustomTranslationKey { get; set; }

		public decimal OverrideUnicodeSymbolValue { get; set; }

		public string OverrideHtmlCharacterCode { get; set; }

		public string OverrideRawCharacter { get; set; }

		public int? OverrideDecimalPlaceAccuracy { get; set; }

		public bool? OverrideUseSeparator { get; set; }

		public string OverrideRawDecimalCharacter { get; set; }

		public string OverrideHtmlDecimalCharacterCode { get; set; }

		public string OverrideRawSeparatorCharacter { get; set; }

		public string OverrideHtmlSeparatorCharacterCode { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CurrencyModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CurrencyModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseCurrencyPagedResults : PagedResultsBase<FranchiseCurrencyModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseCurrencySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "MinOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MaxOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MatchOverrideUnicodeSymbolValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOverrideUnicodeSymbolValue { get; set; }

		[ApiMember(Name = "MinOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MaxOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MatchOverrideDecimalPlaceAccuracy", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOverrideDecimalPlaceAccuracy { get; set; }

		[ApiMember(Name = "MatchOverrideDecimalPlaceAccuracyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOverrideDecimalPlaceAccuracyIncludeNull { get; set; }

		[ApiMember(Name = "OverrideUseSeparator", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUseSeparator { get; set; }

		[ApiMember(Name = "OverrideUseSeparatorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUseSeparatorIncludeNull { get; set; }

		[ApiMember(Name = "CustomName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CustomName { get; set; }

		[ApiMember(Name = "CustomNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomNameStrict { get; set; }

		[ApiMember(Name = "CustomNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomNameIncludeNull { get; set; }

		[ApiMember(Name = "CustomTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CustomTranslationKey { get; set; }

		[ApiMember(Name = "CustomTranslationKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomTranslationKeyStrict { get; set; }

		[ApiMember(Name = "CustomTranslationKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CustomTranslationKeyIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlDecimalCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlDecimalCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlDecimalCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlDecimalCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideHtmlSeparatorCharacterCode { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlSeparatorCharacterCodeStrict { get; set; }

		[ApiMember(Name = "OverrideHtmlSeparatorCharacterCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideHtmlSeparatorCharacterCodeIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawCharacter { get; set; }

		[ApiMember(Name = "OverrideRawCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawCharacterIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawDecimalCharacter { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawDecimalCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawDecimalCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawDecimalCharacterIncludeNull { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacter", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideRawSeparatorCharacter { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacterStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawSeparatorCharacterStrict { get; set; }

		[ApiMember(Name = "OverrideRawSeparatorCharacterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideRawSeparatorCharacterIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseDistrictModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DistrictModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DistrictModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseDistrictPagedResults : PagedResultsBase<FranchiseDistrictModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseDistrictSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the Franchise record.")]
		public int FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the Franchise record.")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the Franchise record.")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "Franchise", DataType = "FranchiseModel", ParameterType = "body", IsRequired = false,
			Description = "The Franchise record.")]
		public FranchiseModel Franchise { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseImagePagedResults : PagedResultsBase<FranchiseImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseIndexableModel : IndexableModelBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseInventoryLocationModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "InventoryLocationModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public InventoryLocationModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseInventoryLocationPagedResults : PagedResultsBase<FranchiseInventoryLocationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseInventoryLocationSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseInventoryLocationTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseLanguageModel : AmARelationshipTableBaseModel
	{
		public string OverrideLocale { get; set; }

		public string OverrideUnicodeName { get; set; }

		public string OverrideISO639_1_2002 { get; set; }

		public string OverrideISO639_2_1998 { get; set; }

		public string OverrideISO639_3_2007 { get; set; }

		public string OverrideISO639_5_2008 { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "LanguageModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public LanguageModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseLanguagePagedResults : PagedResultsBase<FranchiseLanguageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseLanguageSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "OverrideISO639_1_2002", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideISO639_1_2002 { get; set; }

		[ApiMember(Name = "OverrideISO639_1_2002Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_1_2002Strict { get; set; }

		[ApiMember(Name = "OverrideISO639_1_2002IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_1_2002IncludeNull { get; set; }

		[ApiMember(Name = "OverrideISO639_2_1998", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideISO639_2_1998 { get; set; }

		[ApiMember(Name = "OverrideISO639_2_1998Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_2_1998Strict { get; set; }

		[ApiMember(Name = "OverrideISO639_2_1998IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_2_1998IncludeNull { get; set; }

		[ApiMember(Name = "OverrideISO639_3_2007", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideISO639_3_2007 { get; set; }

		[ApiMember(Name = "OverrideISO639_3_2007Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_3_2007Strict { get; set; }

		[ApiMember(Name = "OverrideISO639_3_2007IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_3_2007IncludeNull { get; set; }

		[ApiMember(Name = "OverrideISO639_5_2008", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideISO639_5_2008 { get; set; }

		[ApiMember(Name = "OverrideISO639_5_2008Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_5_2008Strict { get; set; }

		[ApiMember(Name = "OverrideISO639_5_2008IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideISO639_5_2008IncludeNull { get; set; }

		[ApiMember(Name = "OverrideLocale", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideLocale { get; set; }

		[ApiMember(Name = "OverrideLocaleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideLocaleStrict { get; set; }

		[ApiMember(Name = "OverrideLocaleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideLocaleIncludeNull { get; set; }

		[ApiMember(Name = "OverrideUnicodeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideUnicodeName { get; set; }

		[ApiMember(Name = "OverrideUnicodeNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUnicodeNameStrict { get; set; }

		[ApiMember(Name = "OverrideUnicodeNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideUnicodeNameIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseManufacturerModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ManufacturerModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ManufacturerModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseManufacturerPagedResults : PagedResultsBase<FranchiseManufacturerModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseManufacturerSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseModel : NameableBaseModel
	{
		[ApiMember(Name = "FranchiseRegions", DataType = "List<FranchiseRegionModel>", ParameterType = "body", IsRequired = false,
			Description = "Region Book for the Franchise")]
		public List<FranchiseRegionModel> FranchiseRegions { get; set; }

		[ApiMember(Name = "FranchiseCountries", DataType = "List<FranchiseRegionModel>", ParameterType = "body", IsRequired = false,
			Description = "Region Book for the Franchise")]
		public List<FranchiseCountryModel> FranchiseCountries { get; set; }

		[ApiMember(Name = "FranchiseDistricts", DataType = "List<FranchiseDistrictModel>", ParameterType = "body", IsRequired = false,
			Description = "Region Book for the Franchise")]
		public List<FranchiseDistrictModel> FranchiseDistricts { get; set; }

		[ApiMember(Name = "FranchiseCurrencies", DataType = "List<FranchiseCurrencyModel>", ParameterType = "body", IsRequired = false,
			Description = "Region Book for the Franchise")]
		public List<FranchiseCurrencyModel> FranchiseCurrencies { get; set; }

		[ApiMember(Name = "FranchiseInventoryLocations", DataType = "List<FranchiseInventoryLocationModel>", ParameterType = "body", IsRequired = false,
			Description = "Region Book for the Franchise")]
		public List<FranchiseInventoryLocationModel> FranchiseInventoryLocations { get; set; }

		[ApiMember(Name = "FranchiseLanguages", DataType = "List<FranchiseLanguageModel>", ParameterType = "body", IsRequired = false,
			Description = "Region Book for the Franchise")]
		public List<FranchiseLanguageModel> FranchiseLanguages { get; set; }

		[ApiMember(Name = "FranchiseSiteDomains", DataType = "List<FranchiseSiteDomainModel>", ParameterType = "body", IsRequired = false,
			Description = "Region Book for the Franchise")]
		public List<FranchiseSiteDomainModel> FranchiseSiteDomains { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "Accounts", DataType = "List<FranchiseAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts this object is associated with")]
		public List<FranchiseAccountModel> Accounts { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandFranchiseModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandFranchiseModel> Brands { get; set; }

		[ApiMember(Name = "Categories", DataType = "List<FranchiseCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Categories this object is associated with")]
		public List<FranchiseCategoryModel> Categories { get; set; }

		[ApiMember(Name = "Manufacturers", DataType = "List<FranchiseManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Manufacturers this object is associated with")]
		public List<FranchiseManufacturerModel> Manufacturers { get; set; }

		[ApiMember(Name = "Products", DataType = "List<FranchiseProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<FranchiseProductModel> Products { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<FranchiseStoreModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<FranchiseStoreModel> Stores { get; set; }

		[ApiMember(Name = "Users", DataType = "List<FranchiseUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Users this object is associated with")]
		public List<FranchiseUserModel> Users { get; set; }

		[ApiMember(Name = "Vendors", DataType = "List<FranchiseVendorModel>", ParameterType = "body", IsRequired = false,
			Description = "Vendors this object is associated with")]
		public List<FranchiseVendorModel> Vendors { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }

		[ApiMember(Name = "Images", DataType = "List<FranchiseImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<FranchiseImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		public string MinimumOrderDollarAmountBufferProductKey { get; set; }

		public string MinimumOrderDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderDollarAmountBufferProduct { get; set; }

		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		public string MinimumOrderQuantityAmountBufferProductKey { get; set; }

		public string MinimumOrderQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderQuantityAmountBufferProduct { get; set; }

		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryKey { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderDollarAmountBufferCategory { get; set; }

		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Dollar Amount")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Unit Quantity")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingDollarAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingQuantityAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingDollarAmountBufferCategory { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingQuantityAmountBufferCategory { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchisePagedResults : PagedResultsBase<FranchiseModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseProductModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		public decimal? PriceBase { get; set; }

		public decimal? PriceMsrp { get; set; }

		public decimal? PriceReduction { get; set; }

		public decimal? PriceSale { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseProductPagedResults : PagedResultsBase<FranchiseProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }

		[ApiMember(Name = "MinPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceBase { get; set; }

		[ApiMember(Name = "MaxPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceBase { get; set; }

		[ApiMember(Name = "MatchPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceBase { get; set; }

		[ApiMember(Name = "MatchPriceBaseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceBaseIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceMsrp { get; set; }

		[ApiMember(Name = "MaxPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceMsrp { get; set; }

		[ApiMember(Name = "MatchPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceMsrp { get; set; }

		[ApiMember(Name = "MatchPriceMsrpIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceMsrpIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceReduction { get; set; }

		[ApiMember(Name = "MaxPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceReduction { get; set; }

		[ApiMember(Name = "MatchPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceReduction { get; set; }

		[ApiMember(Name = "MatchPriceReductionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceReductionIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceSale { get; set; }

		[ApiMember(Name = "MaxPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceSale { get; set; }

		[ApiMember(Name = "MatchPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceSale { get; set; }

		[ApiMember(Name = "MatchPriceSaleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceSaleIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseRegionModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "RegionModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public RegionModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseRegionPagedResults : PagedResultsBase<FranchiseRegionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseRegionSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseSearchViewModel : SearchViewModelBase<FranchiseCatalogSearchForm, FranchiseIndexableModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseSiteDomainModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SiteDomainModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SiteDomainModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseSiteDomainPagedResults : PagedResultsBase<FranchiseSiteDomainModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseSiteDomainSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseStoreModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoreModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoreModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseStorePagedResults : PagedResultsBase<FranchiseStoreModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseStoreSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseSuggestResult : SuggestResultBase
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseUserModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string SlaveUserName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseUserPagedResults : PagedResultsBase<FranchiseUserModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseUserSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class FranchiseVendorModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public FranchiseModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "VendorModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public VendorModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseVendorPagedResults : PagedResultsBase<FranchiseVendorModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FranchiseVendorSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FutureImportModel : NameableBaseModel
	{
		[ApiMember(Name = "FileName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "The filename including extension. This will be joined to the relative folder path where the uploads would go automatically.")]
		public string FileName { get; set; }

		[ApiMember(Name = "RunImportAt", DataType = "DateTime", ParameterType = "body", IsRequired = true,
			Description = "The date and time at which to run the import (must be in the future)")]
		public DateTime RunImportAt { get; set; }

		[ApiMember(Name = "Attempts", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "How many attempts have been made to import this file")]
		public int Attempts { get; set; }

		[ApiMember(Name = "HasError", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether or not the import had any errors when it last ran")]
		public bool HasError { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }

		public int? VendorID { get; set; }

		public string VendorKey { get; set; }

		public string VendorName { get; set; }

		public VendorModel Vendor { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FutureImportPagedResults : PagedResultsBase<FutureImportModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FutureImportSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "HasError", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasError { get; set; }

		[ApiMember(Name = "MinRunImportAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinRunImportAt { get; set; }

		[ApiMember(Name = "MaxRunImportAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxRunImportAt { get; set; }

		[ApiMember(Name = "MatchRunImportAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchRunImportAt { get; set; }

		[ApiMember(Name = "MinAttempts", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinAttempts { get; set; }

		[ApiMember(Name = "MaxAttempts", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxAttempts { get; set; }

		[ApiMember(Name = "MatchAttempts", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchAttempts { get; set; }

		[ApiMember(Name = "FileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string FileName { get; set; }

		[ApiMember(Name = "FileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FileNameStrict { get; set; }

		[ApiMember(Name = "FileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class FutureImportStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class GeneralAttributeModel : TypableBaseModel
	{
		public bool HideFromStorefront { get; set; }

		public bool HideFromSuppliers { get; set; }

		public bool HideFromCatalogViews { get; set; }

		public bool HideFromProductDetailView { get; set; }

		public bool IsComparable { get; set; }

		public bool IsFilter { get; set; }

		public bool IsMarkup { get; set; }

		public bool IsPredefined { get; set; }

		public bool IsTab { get; set; }

		public string Group { get; set; }

		public int? AttributeGroupID { get; set; }

		public string AttributeGroupKey { get; set; }

		public string AttributeGroupName { get; set; }

		public string AttributeGroupDisplayName { get; set; }

		public AttributeGroupModel AttributeGroup { get; set; }

		public int? AttributeTabID { get; set; }

		public string AttributeTabKey { get; set; }

		public string AttributeTabName { get; set; }

		public string AttributeTabDisplayName { get; set; }

		public AttributeTabModel AttributeTab { get; set; }

		public List<GeneralAttributePredefinedOptionModel> GeneralAttributePredefinedOptions { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "AttributeTypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public AttributeTypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class GeneralAttributePagedResults : PagedResultsBase<GeneralAttributeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class GeneralAttributePredefinedOptionModel : BaseModel
	{
		public string Value { get; set; }

		public string UofM { get; set; }

		public int? SortOrder { get; set; }

		public int AttributeID { get; set; }

		public string AttributeKey { get; set; }

		public string AttributeName { get; set; }

		public GeneralAttributeModel Attribute { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GeneralAttributePredefinedOptionPagedResults : PagedResultsBase<GeneralAttributePredefinedOptionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GeneralAttributePredefinedOptionSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "AttributeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AttributeID { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "UofM", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UofM { get; set; }

		[ApiMember(Name = "UofMStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UofMStrict { get; set; }

		[ApiMember(Name = "UofMIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UofMIncludeNull { get; set; }

		[ApiMember(Name = "Value", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Value { get; set; }

		[ApiMember(Name = "ValueStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ValueStrict { get; set; }

		[ApiMember(Name = "ValueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ValueIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class GeneralAttributeSearchModel : TypableBaseSearchModel
	{
		[ApiMember(Name = "IncludeGeneralWithTypeName", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IncludeGeneralWithTypeName { get; set; }

		public string Group { get; set; }

		public string AttributeGroupKey { get; set; }

		public string AttributeGroupName { get; set; }

		public string AttributeGroupDisplayName { get; set; }

		public string AttributeTabKey { get; set; }

		public string AttributeTabName { get; set; }

		public string AttributeTabDisplayName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "HideFromCatalogViews", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HideFromCatalogViews { get; set; }

		[ApiMember(Name = "HideFromProductDetailView", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HideFromProductDetailView { get; set; }

		[ApiMember(Name = "HideFromStorefront", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HideFromStorefront { get; set; }

		[ApiMember(Name = "HideFromSuppliers", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HideFromSuppliers { get; set; }

		[ApiMember(Name = "IsComparable", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsComparable { get; set; }

		[ApiMember(Name = "IsFilter", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsFilter { get; set; }

		[ApiMember(Name = "IsMarkup", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsMarkup { get; set; }

		[ApiMember(Name = "IsPredefined", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPredefined { get; set; }

		[ApiMember(Name = "IsTab", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsTab { get; set; }

		[ApiMember(Name = "AttributeGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AttributeGroupID { get; set; }

		[ApiMember(Name = "AttributeGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AttributeGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "AttributeTabID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AttributeTabID { get; set; }

		[ApiMember(Name = "AttributeTabIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AttributeTabIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GroupModel : NameableBaseModel
	{
		public int? GroupOwnerID { get; set; }

		public string GroupOwnerKey { get; set; }

		public UserModel GroupOwner { get; set; }

		public List<GroupUserModel> GroupUsers { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "Users", DataType = "List<GroupUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Users this object is associated with")]
		public List<GroupUserModel> Users { get; set; }

		public int? ParentID { get; set; }

		public string ParentKey { get; set; }

		public GroupModel Parent { get; set; }

		public List<GroupModel> Children { get; set; }

		[ApiMember(Name = "HasChildren", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "Whether or not the object has child objects (read-only)")]
		public bool HasChildren { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GroupPagedResults : PagedResultsBase<GroupModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GroupSearchModel : NameableBaseSearchModel
	{
		public int? OwnerID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "ParentID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The identifier of the parent record. [Optional]")]
		public int? ParentID { get; set; }

		[ApiMember(Name = "ParentIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ParentIDIncludeNull { get; set; }

		[ApiMember(Name = "ParentKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The custom key of the parent record. [Optional]")]
		public string ParentKey { get; set; }

		[ApiMember(Name = "DisregardParents", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "Disregard Parents. [Optional, default=false]")]
		public bool? DisregardParents { get; set; }

		[ApiMember(Name = "HasChildren", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "A boolean indicating whether the record has (active) children. [Optional]")]
		public bool? HasChildren { get; set; }

		[ApiMember(Name = "IncludeChildrenInResults", DataType = "bool", ParameterType = "query", IsRequired = false,
			Description = "Include Children In Results. [Required, default=false]")]
		public bool IncludeChildrenInResults { get; set; }

		[ApiMember(Name = "ChildID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The identifier of a child record. [Optional]")]
		public int? ChildID { get; set; }

		[ApiMember(Name = "ChildKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The custom key of a child record. [Optional]")]
		public string ChildKey { get; set; }

		[ApiMember(Name = "GroupOwnerID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? GroupOwnerID { get; set; }

		[ApiMember(Name = "GroupOwnerIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? GroupOwnerIDIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GroupStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GroupTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GroupUserModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string SlaveUserName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public GroupModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GroupUserPagedResults : PagedResultsBase<GroupUserModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class GroupUserSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalAddressValidationModel : BaseModel
	{
		public string Provider { get; set; }

		public long? AddressHash { get; set; }

		public DateTime OnDate { get; set; }

		public bool IsValid { get; set; }

		public string SerializedRequest { get; set; }

		public string SerializedResponse { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalAddressValidationPagedResults : PagedResultsBase<HistoricalAddressValidationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalAddressValidationSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "IsValid", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsValid { get; set; }

		[ApiMember(Name = "MinOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinOnDate { get; set; }

		[ApiMember(Name = "MaxOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxOnDate { get; set; }

		[ApiMember(Name = "MatchOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchOnDate { get; set; }

		[ApiMember(Name = "MinAddressHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MinAddressHash { get; set; }

		[ApiMember(Name = "MaxAddressHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MaxAddressHash { get; set; }

		[ApiMember(Name = "MatchAddressHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MatchAddressHash { get; set; }

		[ApiMember(Name = "MatchAddressHashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchAddressHashIncludeNull { get; set; }

		[ApiMember(Name = "Provider", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Provider { get; set; }

		[ApiMember(Name = "ProviderStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProviderStrict { get; set; }

		[ApiMember(Name = "ProviderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProviderIncludeNull { get; set; }

		[ApiMember(Name = "SerializedRequest", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SerializedRequest { get; set; }

		[ApiMember(Name = "SerializedRequestStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedRequestStrict { get; set; }

		[ApiMember(Name = "SerializedRequestIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedRequestIncludeNull { get; set; }

		[ApiMember(Name = "SerializedResponse", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SerializedResponse { get; set; }

		[ApiMember(Name = "SerializedResponseStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedResponseStrict { get; set; }

		[ApiMember(Name = "SerializedResponseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedResponseIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalCurrencyRateModel : BaseModel
	{
		public decimal Rate { get; set; }

		public DateTime OnDate { get; set; }

		public int StartingCurrencyID { get; set; }

		public string StartingCurrencyKey { get; set; }

		public string StartingCurrencyName { get; set; }

		public CurrencyModel StartingCurrency { get; set; }

		public int EndingCurrencyID { get; set; }

		public string EndingCurrencyKey { get; set; }

		public string EndingCurrencyName { get; set; }

		public CurrencyModel EndingCurrency { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalCurrencyRatePagedResults : PagedResultsBase<HistoricalCurrencyRateModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalCurrencyRateSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "StartingCurrencyKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Starting Currency Key for search")]
		public string StartingCurrencyKey { get; set; }

		[ApiMember(Name = "EndingCurrencyKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Ending Currency Key for search")]
		public string EndingCurrencyKey { get; set; }

		[ApiMember(Name = "MinOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinOnDate { get; set; }

		[ApiMember(Name = "MaxOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxOnDate { get; set; }

		[ApiMember(Name = "MatchOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchOnDate { get; set; }

		[ApiMember(Name = "MinRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRate { get; set; }

		[ApiMember(Name = "MaxRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRate { get; set; }

		[ApiMember(Name = "MatchRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRate { get; set; }

		[ApiMember(Name = "EndingCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? EndingCurrencyID { get; set; }

		[ApiMember(Name = "StartingCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? StartingCurrencyID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalTaxRateModel : BaseModel
	{
		public string Provider { get; set; }

		public long? CartHash { get; set; }

		public DateTime OnDate { get; set; }

		public decimal? CountryLevelRate { get; set; }

		public decimal? RegionLevelRate { get; set; }

		public decimal? DistrictLevelRate { get; set; }

		public decimal? TotalAmount { get; set; }

		public decimal? TotalTaxable { get; set; }

		public decimal? TotalTax { get; set; }

		public decimal? TotalTaxCalculated { get; set; }

		public decimal Rate { get; set; }

		public string SerializedRequest { get; set; }

		public string SerializedResponse { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalTaxRatePagedResults : PagedResultsBase<HistoricalTaxRateModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class HistoricalTaxRateSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "MinOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinOnDate { get; set; }

		[ApiMember(Name = "MaxOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxOnDate { get; set; }

		[ApiMember(Name = "MatchOnDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchOnDate { get; set; }

		[ApiMember(Name = "MinRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRate { get; set; }

		[ApiMember(Name = "MaxRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRate { get; set; }

		[ApiMember(Name = "MatchRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRate { get; set; }

		[ApiMember(Name = "MinCartHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MinCartHash { get; set; }

		[ApiMember(Name = "MaxCartHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MaxCartHash { get; set; }

		[ApiMember(Name = "MatchCartHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MatchCartHash { get; set; }

		[ApiMember(Name = "MatchCartHashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchCartHashIncludeNull { get; set; }

		[ApiMember(Name = "MinCountryLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinCountryLevelRate { get; set; }

		[ApiMember(Name = "MaxCountryLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxCountryLevelRate { get; set; }

		[ApiMember(Name = "MatchCountryLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchCountryLevelRate { get; set; }

		[ApiMember(Name = "MatchCountryLevelRateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchCountryLevelRateIncludeNull { get; set; }

		[ApiMember(Name = "MinDistrictLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDistrictLevelRate { get; set; }

		[ApiMember(Name = "MaxDistrictLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDistrictLevelRate { get; set; }

		[ApiMember(Name = "MatchDistrictLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDistrictLevelRate { get; set; }

		[ApiMember(Name = "MatchDistrictLevelRateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDistrictLevelRateIncludeNull { get; set; }

		[ApiMember(Name = "MinRegionLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRegionLevelRate { get; set; }

		[ApiMember(Name = "MaxRegionLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRegionLevelRate { get; set; }

		[ApiMember(Name = "MatchRegionLevelRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRegionLevelRate { get; set; }

		[ApiMember(Name = "MatchRegionLevelRateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRegionLevelRateIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotalAmount { get; set; }

		[ApiMember(Name = "MaxTotalAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotalAmount { get; set; }

		[ApiMember(Name = "MatchTotalAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotalAmount { get; set; }

		[ApiMember(Name = "MatchTotalAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalTax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotalTax { get; set; }

		[ApiMember(Name = "MaxTotalTax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotalTax { get; set; }

		[ApiMember(Name = "MatchTotalTax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotalTax { get; set; }

		[ApiMember(Name = "MatchTotalTaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalTaxIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalTaxable", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotalTaxable { get; set; }

		[ApiMember(Name = "MaxTotalTaxable", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotalTaxable { get; set; }

		[ApiMember(Name = "MatchTotalTaxable", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotalTaxable { get; set; }

		[ApiMember(Name = "MatchTotalTaxableIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalTaxableIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalTaxCalculated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotalTaxCalculated { get; set; }

		[ApiMember(Name = "MaxTotalTaxCalculated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotalTaxCalculated { get; set; }

		[ApiMember(Name = "MatchTotalTaxCalculated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotalTaxCalculated { get; set; }

		[ApiMember(Name = "MatchTotalTaxCalculatedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalTaxCalculatedIncludeNull { get; set; }

		[ApiMember(Name = "Provider", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Provider { get; set; }

		[ApiMember(Name = "ProviderStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProviderStrict { get; set; }

		[ApiMember(Name = "ProviderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProviderIncludeNull { get; set; }

		[ApiMember(Name = "SerializedRequest", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SerializedRequest { get; set; }

		[ApiMember(Name = "SerializedRequestStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedRequestStrict { get; set; }

		[ApiMember(Name = "SerializedRequestIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedRequestIncludeNull { get; set; }

		[ApiMember(Name = "SerializedResponse", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SerializedResponse { get; set; }

		[ApiMember(Name = "SerializedResponseStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedResponseStrict { get; set; }

		[ApiMember(Name = "SerializedResponseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedResponseIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsCartLookupBase
	{
		[ApiMember(Name = "StoreID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the store to use, if any")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the franchise to use, if any")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "BrandID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the brand to use, if any")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsCartLookupForAdminBase : ImplementsCartLookupBase
	{
		[ApiMember(Name = "UserID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the user to use, if any")]
		public int UserID { get; set; }

		[ApiMember(Name = "AccountID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the brand to use, if any")]
		public int AccountID { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsCartLookupForStorefrontBase : ImplementsCartLookupBase
	{
		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Cart Type Name")]
		public string TypeName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsDisplayNameBase
	{
		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "path", IsRequired = true,
			Description = "The Display Name of the record to call.")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ImplementsIDBase
	{
		[ApiMember(Name = "ID", DataType = "int", ParameterType = "path", IsRequired = true,
			Description = "The identifier for the record to call.")]
		public int ID { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsIDForAdminBase : ImplementsCartLookupForAdminBase
	{
		[ApiMember(Name = "ID", DataType = "int", ParameterType = "path", IsRequired = true,
			Description = "The identifier for the record to call.")]
		public int ID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsIDOnBodyBase
	{
		[ApiMember(Name = "ID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier for the record to call.")]
		public int ID { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsIDOnBodyForAdminBase : ImplementsCartLookupForAdminBase
	{
		[ApiMember(Name = "ID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier for the record to call.")]
		public int ID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsIDOnQueryBase
	{
		[ApiMember(Name = "ID", DataType = "int", ParameterType = "query", IsRequired = true,
			Description = "The identifier for the record to call.")]
		public int ID { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsKeyBase
	{
		[ApiMember(Name = "Key", DataType = "string", ParameterType = "path", IsRequired = true,
			Description = "The CustomKey of the record to call")]
		public string Key { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsKeyOnQueryBase
	{
		[ApiMember(Name = "Key", DataType = "string", ParameterType = "query", IsRequired = true,
			Description = "The CustomKey of the record to call")]
		public string Key { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsNameBase
	{
		[ApiMember(Name = "Name", DataType = "string", ParameterType = "path", IsRequired = true,
			Description = "The Name of the record to call.")]
		public string Name { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsSeoUrlBase
	{
		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = true,
			Description = "The SEO URL of the record to call.")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsTypeNameBase
	{
		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Cart Type Name")]
		public string TypeName { get; set; }

		[ApiMember(Name = "noCache", DataType = "bool", ParameterType = "long", IsRequired = false,
			Description = "Specifying a value will reduce or prevent chance of getting cached data.")]
		public long? noCache { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImplementsTypeNameForStorefrontBase : ImplementsCartLookupForStorefrontBase
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImportExportMappingModel : NameableBaseModel
	{
		public string MappingJson { get; set; }

		public long? MappingJsonHash { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImportExportMappingPagedResults : PagedResultsBase<ImportExportMappingModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ImportExportMappingSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinMappingJsonHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MinMappingJsonHash { get; set; }

		[ApiMember(Name = "MaxMappingJsonHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MaxMappingJsonHash { get; set; }

		[ApiMember(Name = "MatchMappingJsonHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MatchMappingJsonHash { get; set; }

		[ApiMember(Name = "MatchMappingJsonHashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMappingJsonHashIncludeNull { get; set; }

		[ApiMember(Name = "MappingJson", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MappingJson { get; set; }

		[ApiMember(Name = "MappingJsonStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MappingJsonStrict { get; set; }

		[ApiMember(Name = "MappingJsonIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MappingJsonIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ImportResponse
	{
		public List<string> InfoMessages { get; set; }

		public List<string> ErrorMessages { get; set; }

		public List<string> DebugMessages { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IndexableBadgeFilter : IndexableFilterBase
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IndexableDistrictModel : IndexableFilterBase
	{
		public long? DocCount { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IndexableFilterBase
	{
		public int ID { get; set; }

		public string Key { get; set; }

		public string Name { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IndexableModelBase
	{
		public object Suggest { get; set; }

		public object SuggestedByName { get; set; }

		public object SuggestedByDescription { get; set; }

		public object SuggestedByCustomKey { get; set; }

		public object SuggestedByQueryableSerializableAttributes { get; set; }

		public object SuggestedByBrand { get; set; }

		public object SuggestedByCategory { get; set; }

		public object SuggestedByFranchise { get; set; }

		public object SuggestedByManufacturer { get; set; }

		public object SuggestedByProduct { get; set; }

		public object SuggestedByStore { get; set; }

		public object SuggestedByVendor { get; set; }

		public int ID { get; set; }

		public string CustomKey { get; set; }

		public bool Active { get; set; }

		public DateTime CreatedDate { get; set; }

		public DateTime? UpdatedDate { get; set; }

		public string Name { get; set; }

		public string Description { get; set; }

		public string FilterableJsonAttributes { get; set; }

		public string QueryableJsonAttributes { get; set; }

		public IEnumerable<IndexableAttributeobjectFilter> FilterableAttributes { get; set; }

		public IEnumerable<IndexableAttributeobjectFilter> QueryableAttributes { get; set; }

		public string QueryableSerializableAttributeValuesAggregate { get; set; }

		public bool HasBrands { get; set; }

		public IEnumerable<IndexableBrandFilter> Brands { get; set; }

		public bool HasCategories { get; set; }

		public string CategoryNamePrimary { get; set; }

		public string CategoryNameSecondary { get; set; }

		public string CategoryNameTertiary { get; set; }

		public IEnumerable<IndexableCategoryFilter> Categories { get; set; }

		public bool HasFranchises { get; set; }

		public IEnumerable<IndexableFranchiseFilter> Franchises { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public string ContactCity { get; set; }

		public int? ContactCountryID { get; set; }

		public int? ContactRegionID { get; set; }

		public string ContactRegionName { get; set; }

		public bool HasDistricts { get; set; }

		public IEnumerable<IndexableDistrictFilter> Districts { get; set; }

		public int? ContactDistrictID { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool HasManufacturers { get; set; }

		public IEnumerable<IndexableManufacturerFilter> Manufacturers { get; set; }

		public decimal PricingToIndexAs { get; set; }

		public bool HasProducts { get; set; }

		public IEnumerable<IndexableProductFilter> Products { get; set; }

		public decimal RatingToIndexAs { get; set; }

		public string RequiresRoles { get; set; }

		public IEnumerable<IndexableRoleFilter> RequiresRolesList { get; set; }

		public string RequiresRolesAlt { get; set; }

		public IEnumerable<IndexableRoleFilter> RequiresRolesListAlt { get; set; }

		public string SeoKeywords { get; set; }

		public string SeoUrl { get; set; }

		public string SeoDescription { get; set; }

		public string SeoMetaData { get; set; }

		public string SeoPageTitle { get; set; }

		public bool HasStores { get; set; }

		public IEnumerable<IndexableStoreFilter> Stores { get; set; }

		public int? TypeID { get; set; }

		public string TypeKey { get; set; }

		public string TypeName { get; set; }

		public int TypeSortOrder { get; set; }

		public bool HasVendors { get; set; }

		public IEnumerable<IndexableVendorFilter> Vendors { get; set; }

		public int? SortOrder { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IndexableRegionModel : IndexableFilterBase
	{
		public long? DocCount { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IndexableTypeModel : IndexableFilterBase
	{
		public int SortOrder { get; set; }

		public long Count { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationModel : NameableBaseModel
	{
		public List<InventoryLocationSectionModel> Sections { get; set; }

		public List<InventoryLocationRegionModel> Regions { get; set; }

		public List<InventoryLocationUserModel> Users { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandInventoryLocationModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandInventoryLocationModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseInventoryLocationModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseInventoryLocationModel> Franchises { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<StoreInventoryLocationModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<StoreInventoryLocationModel> Stores { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationPagedResults : PagedResultsBase<InventoryLocationModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationRegionModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public InventoryLocationModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "RegionModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public RegionModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationRegionPagedResults : PagedResultsBase<InventoryLocationRegionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationRegionSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "CountryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CountryName { get; set; }

		[ApiMember(Name = "StateName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string StateName { get; set; }

		[ApiMember(Name = "PostalCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PostalCode { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationSectionModel : NameableBaseModel
	{
		public int InventoryLocationID { get; set; }

		public string InventoryLocationKey { get; set; }

		public string InventoryLocationName { get; set; }

		public InventoryLocationModel InventoryLocation { get; set; }

		public List<ProductInventoryLocationSectionModel> ProductInventoryLocationSections { get; set; }

		public List<ShipmentModel> Shipments { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationSectionPagedResults : PagedResultsBase<InventoryLocationSectionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationSectionSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "InventoryLocationName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Inventory Location Name")]
		public string InventoryLocationName { get; set; }

		[ApiMember(Name = "InventoryLocationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? InventoryLocationID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationUserModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public InventoryLocationModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationUserPagedResults : PagedResultsBase<InventoryLocationUserModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class InventoryLocationUserSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IPOrganizationModel : NameableBaseModel
	{
		public string IPAddress { get; set; }

		public int? Score { get; set; }

		public string VisitorKey { get; set; }

		public int? PrimaryUserID { get; set; }

		public string PrimaryUserKey { get; set; }

		public int? AddressID { get; set; }

		public string AddressKey { get; set; }

		public AddressModel Address { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IPOrganizationPagedResults : PagedResultsBase<IPOrganizationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IPOrganizationSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressIDIncludeNull { get; set; }

		[ApiMember(Name = "PrimaryUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PrimaryUserID { get; set; }

		[ApiMember(Name = "PrimaryUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PrimaryUserIDIncludeNull { get; set; }

		[ApiMember(Name = "MinScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinScore { get; set; }

		[ApiMember(Name = "MaxScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxScore { get; set; }

		[ApiMember(Name = "MatchScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchScore { get; set; }

		[ApiMember(Name = "MatchScoreIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchScoreIncludeNull { get; set; }

		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "IPAddressStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressStrict { get; set; }

		[ApiMember(Name = "IPAddressIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressIncludeNull { get; set; }

		[ApiMember(Name = "VisitorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string VisitorKey { get; set; }

		[ApiMember(Name = "VisitorKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VisitorKeyStrict { get; set; }

		[ApiMember(Name = "VisitorKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VisitorKeyIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class IPOrganizationStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class LanguageImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LanguageImagePagedResults : PagedResultsBase<LanguageImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LanguageImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LanguageImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class LanguageModel : BaseModel
	{
		public string Locale { get; set; }

		public string UnicodeName { get; set; }

		public string ISO639_1_2002 { get; set; }

		public string ISO639_2_1998 { get; set; }

		public string ISO639_3_2007 { get; set; }

		public string ISO639_5_2008 { get; set; }

		[ApiMember(Name = "Images", DataType = "List<LanguageImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<LanguageImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LanguagePagedResults : PagedResultsBase<LanguageModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LanguageSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "ISO639_1_2002", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO639_1_2002 { get; set; }

		[ApiMember(Name = "ISO639_1_2002Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO639_1_2002Strict { get; set; }

		[ApiMember(Name = "ISO639_1_2002IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO639_1_2002IncludeNull { get; set; }

		[ApiMember(Name = "ISO639_2_1998", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO639_2_1998 { get; set; }

		[ApiMember(Name = "ISO639_2_1998Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO639_2_1998Strict { get; set; }

		[ApiMember(Name = "ISO639_2_1998IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO639_2_1998IncludeNull { get; set; }

		[ApiMember(Name = "ISO639_3_2007", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO639_3_2007 { get; set; }

		[ApiMember(Name = "ISO639_3_2007Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO639_3_2007Strict { get; set; }

		[ApiMember(Name = "ISO639_3_2007IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO639_3_2007IncludeNull { get; set; }

		[ApiMember(Name = "ISO639_5_2008", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO639_5_2008 { get; set; }

		[ApiMember(Name = "ISO639_5_2008Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO639_5_2008Strict { get; set; }

		[ApiMember(Name = "ISO639_5_2008IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO639_5_2008IncludeNull { get; set; }

		[ApiMember(Name = "Locale", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Locale { get; set; }

		[ApiMember(Name = "LocaleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocaleStrict { get; set; }

		[ApiMember(Name = "LocaleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocaleIncludeNull { get; set; }

		[ApiMember(Name = "UnicodeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UnicodeName { get; set; }

		[ApiMember(Name = "UnicodeNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnicodeNameStrict { get; set; }

		[ApiMember(Name = "UnicodeNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnicodeNameIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotCatalogSearchForm : SearchFormBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class LotCategoryModel : AmARelationshipTableBaseModel
	{
		public int? SortOrder { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public LotModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotCategoryPagedResults : PagedResultsBase<LotCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class LotGroupModel : TypableBaseModel
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotGroupPagedResults : PagedResultsBase<LotGroupModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotGroupSearchModel : TypableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotIndexableModel : IndexableModelBase
	{
		public int BidCount { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class LotModel : NameableBaseModel
	{
		public decimal? BiddingReserve { get; set; }

		public bool BuyNowAvailable { get; set; }

		public bool PreventBuyMultiple { get; set; }

		public bool NoShow { get; set; }

		public DateTime? PickupTime { get; set; }

		public decimal? QuantityAvailable { get; set; }

		public decimal? QuantitySold { get; set; }

		public int? LotGroupID { get; set; }

		public string LotGroupKey { get; set; }

		public string LotGroupName { get; set; }

		public LotGroupModel LotGroup { get; set; }

		public int AuctionID { get; set; }

		public string AuctionKey { get; set; }

		public string AuctionName { get; set; }

		public AuctionModel Auction { get; set; }

		public int? PickupLocationID { get; set; }

		public string PickupLocationKey { get; set; }

		public ContactModel PickupLocation { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "Categories", DataType = "List<LotCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Categories this object is associated with")]
		public List<LotCategoryModel> Categories { get; set; }

		[ApiMember(Name = "ProductID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the product record.")]
		public int ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the product record.")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the product record.")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The product record.")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "Product", DataType = "ProductModel", ParameterType = "body", IsRequired = false,
			Description = "The product record.")]
		public ProductModel Product { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotPagedResults : PagedResultsBase<LotModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "BuyNowAvailable", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BuyNowAvailable { get; set; }

		[ApiMember(Name = "NoShow", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? NoShow { get; set; }

		[ApiMember(Name = "PreventBuyMultiple", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PreventBuyMultiple { get; set; }

		[ApiMember(Name = "AuctionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AuctionID { get; set; }

		[ApiMember(Name = "MinBiddingReserve", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinBiddingReserve { get; set; }

		[ApiMember(Name = "MaxBiddingReserve", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxBiddingReserve { get; set; }

		[ApiMember(Name = "MatchBiddingReserve", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchBiddingReserve { get; set; }

		[ApiMember(Name = "MatchBiddingReserveIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchBiddingReserveIncludeNull { get; set; }

		[ApiMember(Name = "LotGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? LotGroupID { get; set; }

		[ApiMember(Name = "LotGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LotGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "PickupLocationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PickupLocationID { get; set; }

		[ApiMember(Name = "PickupLocationIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PickupLocationIDIncludeNull { get; set; }

		[ApiMember(Name = "MinPickupTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinPickupTime { get; set; }

		[ApiMember(Name = "MaxPickupTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxPickupTime { get; set; }

		[ApiMember(Name = "MatchPickupTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchPickupTime { get; set; }

		[ApiMember(Name = "MatchPickupTimeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPickupTimeIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityAvailable", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityAvailable { get; set; }

		[ApiMember(Name = "MaxQuantityAvailable", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityAvailable { get; set; }

		[ApiMember(Name = "MatchQuantityAvailable", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityAvailable { get; set; }

		[ApiMember(Name = "MatchQuantityAvailableIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityAvailableIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantitySold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantitySold { get; set; }

		[ApiMember(Name = "MaxQuantitySold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantitySold { get; set; }

		[ApiMember(Name = "MatchQuantitySold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantitySold { get; set; }

		[ApiMember(Name = "MatchQuantitySoldIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantitySoldIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotSearchViewModel : SearchViewModelBase<LotCatalogSearchForm, LotIndexableModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotSuggestResult : SuggestResultBase
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class LotTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ManufacturerCatalogSearchForm : SearchFormBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ManufacturerImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ManufacturerImagePagedResults : PagedResultsBase<ManufacturerImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ManufacturerImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ManufacturerImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ManufacturerIndexableModel : IndexableModelBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ManufacturerModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandManufacturerModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseManufacturerModel> Franchises { get; set; }

		[ApiMember(Name = "Products", DataType = "List<ManufacturerProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<ManufacturerProductModel> Products { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<StoreManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<StoreManufacturerModel> Stores { get; set; }

		[ApiMember(Name = "Vendors", DataType = "List<VendorManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Vendors this object is associated with")]
		public List<VendorManufacturerModel> Vendors { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }

		[ApiMember(Name = "Images", DataType = "List<ManufacturerImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<ManufacturerImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		public string MinimumOrderDollarAmountBufferProductKey { get; set; }

		public string MinimumOrderDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderDollarAmountBufferProduct { get; set; }

		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		public string MinimumOrderQuantityAmountBufferProductKey { get; set; }

		public string MinimumOrderQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderQuantityAmountBufferProduct { get; set; }

		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryKey { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderDollarAmountBufferCategory { get; set; }

		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Dollar Amount")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Unit Quantity")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingDollarAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingQuantityAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingDollarAmountBufferCategory { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "Reviews", DataType = "List<ReviewModel>", ParameterType = "body", IsRequired = false,
			Description = "Manufacturer Reviews")]
		public List<ReviewModel> Reviews { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ManufacturerPagedResults : PagedResultsBase<ManufacturerModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ManufacturerProductModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public ManufacturerModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ManufacturerProductPagedResults : PagedResultsBase<ManufacturerProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ManufacturerProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ManufacturerSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Address ID for search")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ManufacturerSearchViewModel : SearchViewModelBase<ManufacturerCatalogSearchForm, ManufacturerIndexableModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ManufacturerSuggestResult : SuggestResultBase
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ManufacturerTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class MembershipAdZoneAccessByLevelModel : AmARelationshipTableBaseModel
	{
		public int SubscriberCountThreshold { get; set; }

		public int UniqueAdLimit { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public MembershipAdZoneAccessModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "MembershipLevelModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public MembershipLevelModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipAdZoneAccessByLevelPagedResults : PagedResultsBase<MembershipAdZoneAccessByLevelModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipAdZoneAccessByLevelSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "MinSubscriberCountThreshold", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubscriberCountThreshold { get; set; }

		[ApiMember(Name = "MaxSubscriberCountThreshold", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubscriberCountThreshold { get; set; }

		[ApiMember(Name = "MatchSubscriberCountThreshold", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubscriberCountThreshold { get; set; }

		[ApiMember(Name = "MinUniqueAdLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinUniqueAdLimit { get; set; }

		[ApiMember(Name = "MaxUniqueAdLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxUniqueAdLimit { get; set; }

		[ApiMember(Name = "MatchUniqueAdLimit", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchUniqueAdLimit { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipAdZoneAccessModel : AmARelationshipTableBaseModel
	{
		public List<MembershipAdZoneAccessByLevelModel> MembershipAdZoneAccessByLevels { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "MasterDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Master record.")]
		public string MasterDisplayName { get; set; }

		[ApiMember(Name = "MasterTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Master record.")]
		public string MasterTranslationKey { get; set; }

		[ApiMember(Name = "MasterSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Master record.")]
		public int? MasterSortOrder { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public MembershipModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AdZoneAccessModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AdZoneAccessModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipAdZoneAccessPagedResults : PagedResultsBase<MembershipAdZoneAccessModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipAdZoneAccessSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class MembershipLevelModel : TypableBaseModel
	{
		public string RolesApplied { get; set; }

		public int MembershipID { get; set; }

		public string MembershipKey { get; set; }

		public string MembershipName { get; set; }

		public MembershipModel Membership { get; set; }

		public List<MembershipAdZoneAccessByLevelModel> MembershipAdZoneAccessByLevels { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipLevelPagedResults : PagedResultsBase<MembershipLevelModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipLevelSearchModel : TypableBaseSearchModel
	{
		[ApiMember(Name = "MembershipID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MembershipID { get; set; }

		[ApiMember(Name = "RolesApplied", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RolesApplied { get; set; }

		[ApiMember(Name = "RolesAppliedStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RolesAppliedStrict { get; set; }

		[ApiMember(Name = "RolesAppliedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RolesAppliedIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class MembershipModel : TypableBaseModel
	{
		public bool IsContractual { get; set; }

		public List<MembershipLevelModel> MembershipLevels { get; set; }

		public List<MembershipRepeatTypeModel> MembershipRepeatTypes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipPagedResults : PagedResultsBase<MembershipModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class MembershipRepeatTypeModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "MasterDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Master record.")]
		public string MasterDisplayName { get; set; }

		[ApiMember(Name = "MasterTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Master record.")]
		public string MasterTranslationKey { get; set; }

		[ApiMember(Name = "MasterSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Master record.")]
		public int? MasterSortOrder { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public MembershipModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "RepeatTypeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public RepeatTypeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipRepeatTypePagedResults : PagedResultsBase<MembershipRepeatTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipRepeatTypeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MembershipSearchModel : TypableBaseSearchModel
	{
		[ApiMember(Name = "IsContractual", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsContractual { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MenuCategoryModel
	{
		[ApiMember(Name = "ID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? ID { get; set; }

		[ApiMember(Name = "HasChildren", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool HasChildren { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "Name", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string Name { get; set; }

		[ApiMember(Name = "CustomKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string CustomKey { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }

		[ApiMember(Name = "Children", DataType = "List<MenuCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "")]
		public List<MenuCategoryModel> Children { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessageAttachmentModel : AmARelationshipTableNameableBaseModel
	{
		public int CreatedByUserID { get; set; }

		public string CreatedByUserKey { get; set; }

		public UserModel CreatedByUser { get; set; }

		public int? UpdatedByUserID { get; set; }

		public string UpdatedByUserKey { get; set; }

		public UserModel UpdatedByUser { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public MessageModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessageAttachmentPagedResults : PagedResultsBase<MessageAttachmentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessageAttachmentSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "CreatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CreatedByUserID { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }

		[ApiMember(Name = "UpdatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UpdatedByUserID { get; set; }

		[ApiMember(Name = "UpdatedByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UpdatedByUserIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessageModel : BaseModel
	{
		public string Subject { get; set; }

		public string Body { get; set; }

		public string Context { get; set; }

		public bool IsReplyAllAllowed { get; set; }

		public int? ConversationID { get; set; }

		public string ConversationKey { get; set; }

		public ConversationModel Conversation { get; set; }

		public int? SentByUserID { get; set; }

		public string SentByUserKey { get; set; }

		public string SentByUserUserName { get; set; }

		public string SentByUserContactFirstName { get; set; }

		public string SentByUserContactLastName { get; set; }

		public UserModel SentByUser { get; set; }

		public List<MessageRecipientModel> MessageRecipients { get; set; }

		public List<MessageAttachmentModel> MessageAttachments { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessagePagedResults : PagedResultsBase<MessageModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessageRecipientModel : AmARelationshipTableBaseModel
	{
		public bool IsRead { get; set; }

		public DateTime? ReadAt { get; set; }

		public bool IsArchived { get; set; }

		public DateTime? ArchivedAt { get; set; }

		public bool HasSentAnEmail { get; set; }

		public DateTime? EmailSentAt { get; set; }

		public int? GroupID { get; set; }

		public string GroupKey { get; set; }

		public string GroupName { get; set; }

		public GroupModel Group { get; set; }

		[ApiMember(Name = "SlaveUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string SlaveUserName { get; set; }

		public MessageModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessageRecipientPagedResults : PagedResultsBase<MessageRecipientModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessageRecipientSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "HasSentAnEmail", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasSentAnEmail { get; set; }

		[ApiMember(Name = "IsArchived", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsArchived { get; set; }

		[ApiMember(Name = "IsRead", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsRead { get; set; }

		[ApiMember(Name = "MinArchivedAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinArchivedAt { get; set; }

		[ApiMember(Name = "MaxArchivedAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxArchivedAt { get; set; }

		[ApiMember(Name = "MatchArchivedAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchArchivedAt { get; set; }

		[ApiMember(Name = "MatchArchivedAtIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchArchivedAtIncludeNull { get; set; }

		[ApiMember(Name = "MinEmailSentAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEmailSentAt { get; set; }

		[ApiMember(Name = "MaxEmailSentAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEmailSentAt { get; set; }

		[ApiMember(Name = "MatchEmailSentAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEmailSentAt { get; set; }

		[ApiMember(Name = "MatchEmailSentAtIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEmailSentAtIncludeNull { get; set; }

		[ApiMember(Name = "GroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? GroupID { get; set; }

		[ApiMember(Name = "GroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? GroupIDIncludeNull { get; set; }

		[ApiMember(Name = "MinReadAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinReadAt { get; set; }

		[ApiMember(Name = "MaxReadAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxReadAt { get; set; }

		[ApiMember(Name = "MatchReadAt", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchReadAt { get; set; }

		[ApiMember(Name = "MatchReadAtIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchReadAtIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class MessageSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "SentFromOrToUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Limit messages to relevancy by user id (From or To)")]
		public int? SentFromOrToUserID { get; set; }

		[ApiMember(Name = "SentFromUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Limit messages to relevancy by from user id")]
		public int? SentFromUserID { get; set; }

		[ApiMember(Name = "SentToUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Limit messages to relevancy by to user id")]
		public int? SentToUserID { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "IsReplyAllAllowed", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsReplyAllAllowed { get; set; }

		[ApiMember(Name = "ConversationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ConversationID { get; set; }

		[ApiMember(Name = "ConversationIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ConversationIDIncludeNull { get; set; }

		[ApiMember(Name = "SentByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SentByUserID { get; set; }

		[ApiMember(Name = "SentByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SentByUserIDIncludeNull { get; set; }

		[ApiMember(Name = "Body", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Body { get; set; }

		[ApiMember(Name = "BodyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BodyStrict { get; set; }

		[ApiMember(Name = "BodyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BodyIncludeNull { get; set; }

		[ApiMember(Name = "Context", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Context { get; set; }

		[ApiMember(Name = "ContextStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContextStrict { get; set; }

		[ApiMember(Name = "ContextIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContextIncludeNull { get; set; }

		[ApiMember(Name = "Subject", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Subject { get; set; }

		[ApiMember(Name = "SubjectStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SubjectStrict { get; set; }

		[ApiMember(Name = "SubjectIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SubjectIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class MFARequirementsModel
	{
		public bool Phone { get; set; }

		public bool Email { get; set; }

		public string PhoneLastFour { get; set; }

		public string EmailFirstAndLastFour { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class NoteModel : BaseModel
	{
		public string Note1 { get; set; }

		public int? CreatedByUserID { get; set; }

		public string CreatedByUserKey { get; set; }

		public string CreatedByUserUsername { get; set; }

		public string CreatedByUserContactFirstName { get; set; }

		public string CreatedByUserContactLastName { get; set; }

		public UserModel CreatedByUser { get; set; }

		public int? UpdatedByUserID { get; set; }

		public string UpdatedByUserKey { get; set; }

		public UserModel UpdatedByUser { get; set; }

		public int? AccountID { get; set; }

		public int? UserID { get; set; }

		public int? BrandID { get; set; }

		public int? FranchiseID { get; set; }

		public int? StoreID { get; set; }

		public int? VendorID { get; set; }

		public int? ManufacturerID { get; set; }

		public int? SalesGroupID { get; set; }

		public int? PurchaseOrderID { get; set; }

		public int? SalesOrderID { get; set; }

		public int? SalesInvoiceID { get; set; }

		public int? SalesQuoteID { get; set; }

		public int? SampleRequestID { get; set; }

		public int? SalesReturnID { get; set; }

		public int? CartID { get; set; }

		public int? PurchaseOrderItemID { get; set; }

		public int? SalesOrderItemID { get; set; }

		public int? SalesInvoiceItemID { get; set; }

		public int? SalesQuoteItemID { get; set; }

		public int? SampleRequestItemID { get; set; }

		public int? SalesReturnItemID { get; set; }

		public int? CartItemID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "NoteTypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public NoteTypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class NotePagedResults : PagedResultsBase<NoteModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class NoteSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "AccountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "CartID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CartID { get; set; }

		[ApiMember(Name = "CartIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CartIDIncludeNull { get; set; }

		[ApiMember(Name = "CartItemID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CartItemID { get; set; }

		[ApiMember(Name = "CartItemIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CartItemIDIncludeNull { get; set; }

		[ApiMember(Name = "CreatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CreatedByUserID { get; set; }

		[ApiMember(Name = "CreatedByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CreatedByUserIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ManufacturerIDIncludeNull { get; set; }

		[ApiMember(Name = "PurchaseOrderID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PurchaseOrderID { get; set; }

		[ApiMember(Name = "PurchaseOrderIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PurchaseOrderIDIncludeNull { get; set; }

		[ApiMember(Name = "PurchaseOrderItemID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PurchaseOrderItemID { get; set; }

		[ApiMember(Name = "PurchaseOrderItemIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PurchaseOrderItemIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupID { get; set; }

		[ApiMember(Name = "SalesGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesInvoiceID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesInvoiceID { get; set; }

		[ApiMember(Name = "SalesInvoiceIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesInvoiceIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesInvoiceItemID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesInvoiceItemID { get; set; }

		[ApiMember(Name = "SalesInvoiceItemIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesInvoiceItemIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesOrderID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesOrderID { get; set; }

		[ApiMember(Name = "SalesOrderIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesOrderIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesOrderItemID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesOrderItemID { get; set; }

		[ApiMember(Name = "SalesOrderItemIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesOrderItemIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesQuoteID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesQuoteID { get; set; }

		[ApiMember(Name = "SalesQuoteIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesQuoteIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesQuoteItemID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesQuoteItemID { get; set; }

		[ApiMember(Name = "SalesQuoteItemIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesQuoteItemIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesReturnID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesReturnID { get; set; }

		[ApiMember(Name = "SalesReturnIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesReturnIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesReturnItemID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesReturnItemID { get; set; }

		[ApiMember(Name = "SalesReturnItemIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesReturnItemIDIncludeNull { get; set; }

		[ApiMember(Name = "SampleRequestID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SampleRequestID { get; set; }

		[ApiMember(Name = "SampleRequestIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SampleRequestIDIncludeNull { get; set; }

		[ApiMember(Name = "SampleRequestItemID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SampleRequestItemID { get; set; }

		[ApiMember(Name = "SampleRequestItemIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SampleRequestItemIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "UpdatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UpdatedByUserID { get; set; }

		[ApiMember(Name = "UpdatedByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UpdatedByUserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "VendorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VendorIDIncludeNull { get; set; }

		[ApiMember(Name = "Note1", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Note1 { get; set; }

		[ApiMember(Name = "Note1Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Note1Strict { get; set; }

		[ApiMember(Name = "Note1IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Note1IncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class NoteTypeModel : TypableBaseModel
	{
		[ApiMember(Name = "IsPublic", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "Note Is Public")]
		public bool IsPublic { get; set; }

		[ApiMember(Name = "IsCustomer", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "Note Is Customer")]
		public bool IsCustomer { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class NoteTypePagedResults : PagedResultsBase<NoteTypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class NoteTypeSearchModel : TypableBaseSearchModel
	{
		[ApiMember(Name = "IsCustomer", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsCustomer { get; set; }

		[ApiMember(Name = "IsPublic", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPublic { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class Object
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PackageModel : NameableBaseModel
	{
		public decimal Weight { get; set; }

		public string WeightUnitOfMeasure { get; set; }

		public decimal Width { get; set; }

		public string WidthUnitOfMeasure { get; set; }

		public decimal Height { get; set; }

		public string HeightUnitOfMeasure { get; set; }

		public decimal Depth { get; set; }

		public string DepthUnitOfMeasure { get; set; }

		public decimal DimensionalWeight { get; set; }

		public string DimensionalWeightUnitOfMeasure { get; set; }

		public bool IsCustom { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PackagePagedResults : PagedResultsBase<PackageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PackageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsCustom", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsCustom { get; set; }

		[ApiMember(Name = "MinDepth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDepth { get; set; }

		[ApiMember(Name = "MaxDepth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDepth { get; set; }

		[ApiMember(Name = "MatchDepth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDepth { get; set; }

		[ApiMember(Name = "MinDimensionalWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDimensionalWeight { get; set; }

		[ApiMember(Name = "MaxDimensionalWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDimensionalWeight { get; set; }

		[ApiMember(Name = "MatchDimensionalWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDimensionalWeight { get; set; }

		[ApiMember(Name = "MinHeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinHeight { get; set; }

		[ApiMember(Name = "MaxHeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxHeight { get; set; }

		[ApiMember(Name = "MatchHeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchHeight { get; set; }

		[ApiMember(Name = "MinWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinWeight { get; set; }

		[ApiMember(Name = "MaxWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxWeight { get; set; }

		[ApiMember(Name = "MatchWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchWeight { get; set; }

		[ApiMember(Name = "MinWidth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinWidth { get; set; }

		[ApiMember(Name = "MaxWidth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxWidth { get; set; }

		[ApiMember(Name = "MatchWidth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchWidth { get; set; }

		[ApiMember(Name = "DepthUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DepthUnitOfMeasure { get; set; }

		[ApiMember(Name = "DepthUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DepthUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "DepthUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DepthUnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "DimensionalWeightUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DimensionalWeightUnitOfMeasure { get; set; }

		[ApiMember(Name = "DimensionalWeightUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DimensionalWeightUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "DimensionalWeightUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DimensionalWeightUnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "HeightUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string HeightUnitOfMeasure { get; set; }

		[ApiMember(Name = "HeightUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HeightUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "HeightUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HeightUnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "WeightUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string WeightUnitOfMeasure { get; set; }

		[ApiMember(Name = "WeightUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? WeightUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "WeightUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? WeightUnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "WidthUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string WidthUnitOfMeasure { get; set; }

		[ApiMember(Name = "WidthUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? WidthUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "WidthUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? WidthUnitOfMeasureIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PackageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PageViewEventModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PageViewModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "EventModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public EventModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PageViewEventPagedResults : PagedResultsBase<PageViewEventModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PageViewEventSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PageViewModel : NameableBaseModel
	{
		public string Title { get; set; }

		public string URI { get; set; }

		public DateTime? ViewedOn { get; set; }

		public string VisitKey { get; set; }

		public int? CategoryID { get; set; }

		public string CategoryKey { get; set; }

		public string CategoryName { get; set; }

		public int? ProductID { get; set; }

		public string ProductKey { get; set; }

		public string ProductName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }

		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The originating IP Address of the Request for the Event")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "Score", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Score of the Event")]
		public int? Score { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the Address storing location information for the Event")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string AddressKey { get; set; }

		[ApiMember(Name = "Address", DataType = "AddressModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Address storing location information for the Event")]
		public AddressModel Address { get; set; }

		[ApiMember(Name = "IPOrganizationID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the IP Organization related with this Event")]
		public int? IPOrganizationID { get; set; }

		[ApiMember(Name = "IPOrganizationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string IPOrganizationKey { get; set; }

		[ApiMember(Name = "IPOrganizationName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string IPOrganizationName { get; set; }

		[ApiMember(Name = "IPOrganization", DataType = "IPOrganizationModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the IP Organization related with this Event")]
		public IPOrganizationModel IPOrganization { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the Address storing location information for the Event")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string UserKey { get; set; }

		[ApiMember(Name = "User", DataType = "UserModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the User related with this Event")]
		public UserModel User { get; set; }

		[ApiMember(Name = "DidBounce", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "Did the visitor bounce from the site after coming to it?")]
		public bool? DidBounce { get; set; }

		[ApiMember(Name = "OperatingSystem", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Operating System used in the request for the Event")]
		public string OperatingSystem { get; set; }

		[ApiMember(Name = "Browser", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Browser used in the request for the Event")]
		public string Browser { get; set; }

		[ApiMember(Name = "Language", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Language of the Request for the Event")]
		public string Language { get; set; }

		[ApiMember(Name = "ContainsSocialProfile", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "Does the Event contain Social Profile Data?")]
		public bool? ContainsSocialProfile { get; set; }

		[ApiMember(Name = "Delta", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The number of changes from this Event")]
		public int? Delta { get; set; }

		[ApiMember(Name = "Duration", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The duration of this event in seconds")]
		public int? Duration { get; set; }

		[ApiMember(Name = "StartedOn", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The time at which the Event started")]
		public DateTime? StartedOn { get; set; }

		[ApiMember(Name = "EndedOn", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The time at which the Event ended")]
		public DateTime? EndedOn { get; set; }

		[ApiMember(Name = "Time", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The time of the Event")]
		public string Time { get; set; }

		[ApiMember(Name = "EntryPage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The entry page of the event")]
		public string EntryPage { get; set; }

		[ApiMember(Name = "ExitPage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The the exit page of the event")]
		public string ExitPage { get; set; }

		[ApiMember(Name = "IsFirstTrigger", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Is this the first time this event has triggered?")]
		public bool? IsFirstTrigger { get; set; }

		[ApiMember(Name = "Flash", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Was Flash used to trigger this event? If so, the version of Flash")]
		public string Flash { get; set; }

		[ApiMember(Name = "Keywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The keywords for the Event")]
		public string Keywords { get; set; }

		[ApiMember(Name = "PartitionKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Partition Key for the Event")]
		public string PartitionKey { get; set; }

		[ApiMember(Name = "Referrer", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Referring Source of the Event (such as Google, Bing or another website)")]
		public string Referrer { get; set; }

		[ApiMember(Name = "ReferringHost", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Host URL of the Referring Source of the Event (such as www.google.com)")]
		public string ReferringHost { get; set; }

		[ApiMember(Name = "RowKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Row Key for this Event")]
		public string RowKey { get; set; }

		[ApiMember(Name = "Source", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Source of this Event as an integer")]
		public int? Source { get; set; }

		[ApiMember(Name = "TotalTriggers", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The total number of Triggers for this event")]
		public int? TotalTriggers { get; set; }

		[ApiMember(Name = "CampaignID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Campaign related to this Event")]
		public int? CampaignID { get; set; }

		[ApiMember(Name = "Campaign", DataType = "CampaignModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Campaign related to this Event")]
		public CampaignModel Campaign { get; set; }

		[ApiMember(Name = "CampaignKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string CampaignKey { get; set; }

		[ApiMember(Name = "CampaignName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string CampaignName { get; set; }

		[ApiMember(Name = "SiteDomainID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Site Domain related to this Event")]
		public int? SiteDomainID { get; set; }

		[ApiMember(Name = "SiteDomain", DataType = "SiteDomainModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Site Domain related to this Event")]
		public SiteDomainModel SiteDomain { get; set; }

		[ApiMember(Name = "SiteDomainKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SiteDomainKey { get; set; }

		[ApiMember(Name = "SiteDomainName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SiteDomainName { get; set; }

		[ApiMember(Name = "VisitorID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Visitor related to this Event")]
		public int? VisitorID { get; set; }

		[ApiMember(Name = "Visitor", DataType = "VisitorModel?", ParameterType = "body", IsRequired = false,
			Description = "The body of the Visitor related to this Event")]
		public VisitorModel Visitor { get; set; }

		[ApiMember(Name = "VisitorKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string VisitorKey { get; set; }

		[ApiMember(Name = "VisitorName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string VisitorName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PageViewPagedResults : PagedResultsBase<PageViewModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PageViewSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressIDIncludeNull { get; set; }

		[ApiMember(Name = "CampaignID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CampaignID { get; set; }

		[ApiMember(Name = "CampaignIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CampaignIDIncludeNull { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "ContainsSocialProfile", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContainsSocialProfile { get; set; }

		[ApiMember(Name = "ContainsSocialProfileIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContainsSocialProfileIncludeNull { get; set; }

		[ApiMember(Name = "MinDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDelta { get; set; }

		[ApiMember(Name = "MaxDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDelta { get; set; }

		[ApiMember(Name = "MatchDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDelta { get; set; }

		[ApiMember(Name = "MatchDeltaIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDeltaIncludeNull { get; set; }

		[ApiMember(Name = "DidBounce", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DidBounce { get; set; }

		[ApiMember(Name = "DidBounceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DidBounceIncludeNull { get; set; }

		[ApiMember(Name = "MinDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDuration { get; set; }

		[ApiMember(Name = "MaxDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDuration { get; set; }

		[ApiMember(Name = "MatchDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDuration { get; set; }

		[ApiMember(Name = "MatchDurationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDurationIncludeNull { get; set; }

		[ApiMember(Name = "MinEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndedOn { get; set; }

		[ApiMember(Name = "MaxEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndedOn { get; set; }

		[ApiMember(Name = "MatchEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndedOn { get; set; }

		[ApiMember(Name = "MatchEndedOnIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndedOnIncludeNull { get; set; }

		[ApiMember(Name = "IPOrganizationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? IPOrganizationID { get; set; }

		[ApiMember(Name = "IPOrganizationIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPOrganizationIDIncludeNull { get; set; }

		[ApiMember(Name = "IsFirstTrigger", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsFirstTrigger { get; set; }

		[ApiMember(Name = "IsFirstTriggerIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsFirstTriggerIncludeNull { get; set; }

		[ApiMember(Name = "ProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinScore { get; set; }

		[ApiMember(Name = "MaxScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxScore { get; set; }

		[ApiMember(Name = "MatchScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchScore { get; set; }

		[ApiMember(Name = "MatchScoreIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchScoreIncludeNull { get; set; }

		[ApiMember(Name = "SiteDomainID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SiteDomainID { get; set; }

		[ApiMember(Name = "SiteDomainIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SiteDomainIDIncludeNull { get; set; }

		[ApiMember(Name = "MinSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSource { get; set; }

		[ApiMember(Name = "MaxSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSource { get; set; }

		[ApiMember(Name = "MatchSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSource { get; set; }

		[ApiMember(Name = "MatchSourceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSourceIncludeNull { get; set; }

		[ApiMember(Name = "MinStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartedOn { get; set; }

		[ApiMember(Name = "MaxStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartedOn { get; set; }

		[ApiMember(Name = "MatchStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartedOn { get; set; }

		[ApiMember(Name = "MatchStartedOnIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStartedOnIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTotalTriggers { get; set; }

		[ApiMember(Name = "MaxTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTotalTriggers { get; set; }

		[ApiMember(Name = "MatchTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTotalTriggers { get; set; }

		[ApiMember(Name = "MatchTotalTriggersIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalTriggersIncludeNull { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "MinViewedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinViewedOn { get; set; }

		[ApiMember(Name = "MaxViewedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxViewedOn { get; set; }

		[ApiMember(Name = "MatchViewedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchViewedOn { get; set; }

		[ApiMember(Name = "MatchViewedOnIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchViewedOnIncludeNull { get; set; }

		[ApiMember(Name = "VisitorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VisitorID { get; set; }

		[ApiMember(Name = "VisitorIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VisitorIDIncludeNull { get; set; }

		[ApiMember(Name = "Browser", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Browser { get; set; }

		[ApiMember(Name = "BrowserStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrowserStrict { get; set; }

		[ApiMember(Name = "BrowserIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrowserIncludeNull { get; set; }

		[ApiMember(Name = "EntryPage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string EntryPage { get; set; }

		[ApiMember(Name = "EntryPageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EntryPageStrict { get; set; }

		[ApiMember(Name = "EntryPageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EntryPageIncludeNull { get; set; }

		[ApiMember(Name = "ExitPage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ExitPage { get; set; }

		[ApiMember(Name = "ExitPageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExitPageStrict { get; set; }

		[ApiMember(Name = "ExitPageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExitPageIncludeNull { get; set; }

		[ApiMember(Name = "Flash", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Flash { get; set; }

		[ApiMember(Name = "FlashStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FlashStrict { get; set; }

		[ApiMember(Name = "FlashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FlashIncludeNull { get; set; }

		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "IPAddressStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressStrict { get; set; }

		[ApiMember(Name = "IPAddressIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressIncludeNull { get; set; }

		[ApiMember(Name = "Keywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Keywords { get; set; }

		[ApiMember(Name = "KeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? KeywordsStrict { get; set; }

		[ApiMember(Name = "KeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? KeywordsIncludeNull { get; set; }

		[ApiMember(Name = "Language", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Language { get; set; }

		[ApiMember(Name = "LanguageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LanguageStrict { get; set; }

		[ApiMember(Name = "LanguageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LanguageIncludeNull { get; set; }

		[ApiMember(Name = "OperatingSystem", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OperatingSystem { get; set; }

		[ApiMember(Name = "OperatingSystemStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingSystemStrict { get; set; }

		[ApiMember(Name = "OperatingSystemIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingSystemIncludeNull { get; set; }

		[ApiMember(Name = "PartitionKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PartitionKey { get; set; }

		[ApiMember(Name = "PartitionKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PartitionKeyStrict { get; set; }

		[ApiMember(Name = "PartitionKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PartitionKeyIncludeNull { get; set; }

		[ApiMember(Name = "Referrer", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Referrer { get; set; }

		[ApiMember(Name = "ReferrerStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferrerStrict { get; set; }

		[ApiMember(Name = "ReferrerIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferrerIncludeNull { get; set; }

		[ApiMember(Name = "ReferringHost", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ReferringHost { get; set; }

		[ApiMember(Name = "ReferringHostStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferringHostStrict { get; set; }

		[ApiMember(Name = "ReferringHostIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferringHostIncludeNull { get; set; }

		[ApiMember(Name = "RowKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RowKey { get; set; }

		[ApiMember(Name = "RowKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RowKeyStrict { get; set; }

		[ApiMember(Name = "RowKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RowKeyIncludeNull { get; set; }

		[ApiMember(Name = "Time", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Time { get; set; }

		[ApiMember(Name = "TimeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeStrict { get; set; }

		[ApiMember(Name = "TimeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeIncludeNull { get; set; }

		[ApiMember(Name = "Title", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Title { get; set; }

		[ApiMember(Name = "TitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TitleStrict { get; set; }

		[ApiMember(Name = "TitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TitleIncludeNull { get; set; }

		[ApiMember(Name = "URI", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string URI { get; set; }

		[ApiMember(Name = "URIStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? URIStrict { get; set; }

		[ApiMember(Name = "URIIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? URIIncludeNull { get; set; }

		[ApiMember(Name = "VisitKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string VisitKey { get; set; }

		[ApiMember(Name = "VisitKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VisitKeyStrict { get; set; }

		[ApiMember(Name = "VisitKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VisitKeyIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PageViewStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PageViewTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PaymentMethodModel : NameableBaseModel
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PaymentMethodPagedResults : PagedResultsBase<PaymentMethodModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PaymentMethodSearchModel : NameableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PaymentModel : BaseModel
	{
		public string RoutingNumber { get; set; }

		public string AccountNumber { get; set; }

		public string BankName { get; set; }

		public decimal? Amount { get; set; }

		public string CardNumber { get; set; }

		public string CVV { get; set; }

		public int? ExpirationMonth { get; set; }

		public int? ExpirationYear { get; set; }

		public string Token { get; set; }

		public string CardType { get; set; }

		public string CardHolderName { get; set; }

		public string Zip { get; set; }

		public string InvoiceNumber { get; set; }

		public string PurchaseOrderNumber { get; set; }

		public string TransactionID { get; set; }

		public string Reference1 { get; set; }

		public string Reference2 { get; set; }

		public string Reference3 { get; set; }

		public string PaymentData { get; set; }

		public bool? Authorized { get; set; }

		public string AuthCode { get; set; }

		public bool? Received { get; set; }

		public DateTime? StatusDate { get; set; }

		public DateTime? AuthDate { get; set; }

		public DateTime? ReceivedDate { get; set; }

		public DateTime? PaymentDate { get; set; }

		public string ReferenceNo { get; set; }

		public string Response { get; set; }

		public string ExternalCustomerID { get; set; }

		public string ExternalPaymentID { get; set; }

		public long? PayoneerAccountID { get; set; }

		public long? PayoneerCustomerID { get; set; }

		public int? CardTypeID { get; set; }

		public string CardMask { get; set; }

		public string Last4CardDigits { get; set; }

		public string TransactionNumber { get; set; }

		public string CheckNumber { get; set; }

		public string RoutingNumberLast4 { get; set; }

		public string AccountNumberLast4 { get; set; }

		public int? WalletID { get; set; }

		public string ReferenceName { get; set; }

		public int? BillingContactID { get; set; }

		public string BillingContactKey { get; set; }

		public ContactModel BillingContact { get; set; }

		public int? PaymentMethodID { get; set; }

		public string PaymentMethodKey { get; set; }

		public PaymentMethodModel PaymentMethod { get; set; }

		public string PaymentMethodName { get; set; }

		public int? CurrencyID { get; set; }

		public string CurrencyKey { get; set; }

		public string CurrencyName { get; set; }

		public CurrencyModel Currency { get; set; }

		public List<SalesInvoicePaymentModel> SalesInvoicePayments { get; set; }

		public List<SalesOrderPaymentModel> SalesOrderPayments { get; set; }

		public List<SubscriptionHistoryModel> SubscriptionHistories { get; set; }

		public List<SubscriptionModel> Subscriptions { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PaymentPagedResults : PagedResultsBase<PaymentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PaymentSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "MinAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinAmount { get; set; }

		[ApiMember(Name = "MaxAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxAmount { get; set; }

		[ApiMember(Name = "MatchAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchAmount { get; set; }

		[ApiMember(Name = "MatchAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinAuthDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinAuthDate { get; set; }

		[ApiMember(Name = "MaxAuthDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxAuthDate { get; set; }

		[ApiMember(Name = "MatchAuthDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchAuthDate { get; set; }

		[ApiMember(Name = "MatchAuthDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchAuthDateIncludeNull { get; set; }

		[ApiMember(Name = "Authorized", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Authorized { get; set; }

		[ApiMember(Name = "AuthorizedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorizedIncludeNull { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "CardTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CardTypeID { get; set; }

		[ApiMember(Name = "CardTypeIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CardTypeIDIncludeNull { get; set; }

		[ApiMember(Name = "CurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CurrencyID { get; set; }

		[ApiMember(Name = "CurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinExpirationMonth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinExpirationMonth { get; set; }

		[ApiMember(Name = "MaxExpirationMonth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxExpirationMonth { get; set; }

		[ApiMember(Name = "MatchExpirationMonth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchExpirationMonth { get; set; }

		[ApiMember(Name = "MatchExpirationMonthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchExpirationMonthIncludeNull { get; set; }

		[ApiMember(Name = "MinExpirationYear", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinExpirationYear { get; set; }

		[ApiMember(Name = "MaxExpirationYear", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxExpirationYear { get; set; }

		[ApiMember(Name = "MatchExpirationYear", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchExpirationYear { get; set; }

		[ApiMember(Name = "MatchExpirationYearIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchExpirationYearIncludeNull { get; set; }

		[ApiMember(Name = "PaymentMethodID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PaymentMethodID { get; set; }

		[ApiMember(Name = "PaymentMethodIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PaymentMethodIDIncludeNull { get; set; }

		[ApiMember(Name = "Received", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Received { get; set; }

		[ApiMember(Name = "ReceivedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReceivedIncludeNull { get; set; }

		[ApiMember(Name = "MinReceivedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinReceivedDate { get; set; }

		[ApiMember(Name = "MaxReceivedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxReceivedDate { get; set; }

		[ApiMember(Name = "MatchReceivedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchReceivedDate { get; set; }

		[ApiMember(Name = "MatchReceivedDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchReceivedDateIncludeNull { get; set; }

		[ApiMember(Name = "MinStatusDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStatusDate { get; set; }

		[ApiMember(Name = "MaxStatusDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStatusDate { get; set; }

		[ApiMember(Name = "MatchStatusDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStatusDate { get; set; }

		[ApiMember(Name = "MatchStatusDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStatusDateIncludeNull { get; set; }

		[ApiMember(Name = "AccountNumberLast4", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountNumberLast4 { get; set; }

		[ApiMember(Name = "AccountNumberLast4Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountNumberLast4Strict { get; set; }

		[ApiMember(Name = "AccountNumberLast4IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountNumberLast4IncludeNull { get; set; }

		[ApiMember(Name = "AuthCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AuthCode { get; set; }

		[ApiMember(Name = "AuthCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthCodeStrict { get; set; }

		[ApiMember(Name = "AuthCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthCodeIncludeNull { get; set; }

		[ApiMember(Name = "BankName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string BankName { get; set; }

		[ApiMember(Name = "BankNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BankNameStrict { get; set; }

		[ApiMember(Name = "BankNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BankNameIncludeNull { get; set; }

		[ApiMember(Name = "CardMask", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CardMask { get; set; }

		[ApiMember(Name = "CardMaskStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CardMaskStrict { get; set; }

		[ApiMember(Name = "CardMaskIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CardMaskIncludeNull { get; set; }

		[ApiMember(Name = "CheckNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CheckNumber { get; set; }

		[ApiMember(Name = "CheckNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CheckNumberStrict { get; set; }

		[ApiMember(Name = "CheckNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CheckNumberIncludeNull { get; set; }

		[ApiMember(Name = "CVV", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CVV { get; set; }

		[ApiMember(Name = "CVVStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CVVStrict { get; set; }

		[ApiMember(Name = "CVVIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CVVIncludeNull { get; set; }

		[ApiMember(Name = "ExternalCustomerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ExternalCustomerID { get; set; }

		[ApiMember(Name = "ExternalCustomerIDStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExternalCustomerIDStrict { get; set; }

		[ApiMember(Name = "ExternalCustomerIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExternalCustomerIDIncludeNull { get; set; }

		[ApiMember(Name = "ExternalPaymentID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ExternalPaymentID { get; set; }

		[ApiMember(Name = "ExternalPaymentIDStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExternalPaymentIDStrict { get; set; }

		[ApiMember(Name = "ExternalPaymentIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExternalPaymentIDIncludeNull { get; set; }

		[ApiMember(Name = "Last4CardDigits", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Last4CardDigits { get; set; }

		[ApiMember(Name = "Last4CardDigitsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Last4CardDigitsStrict { get; set; }

		[ApiMember(Name = "Last4CardDigitsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Last4CardDigitsIncludeNull { get; set; }

		[ApiMember(Name = "PaymentData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PaymentData { get; set; }

		[ApiMember(Name = "PaymentDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PaymentDataStrict { get; set; }

		[ApiMember(Name = "PaymentDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PaymentDataIncludeNull { get; set; }

		[ApiMember(Name = "ReferenceNo", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ReferenceNo { get; set; }

		[ApiMember(Name = "ReferenceNoStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferenceNoStrict { get; set; }

		[ApiMember(Name = "ReferenceNoIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferenceNoIncludeNull { get; set; }

		[ApiMember(Name = "Response", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Response { get; set; }

		[ApiMember(Name = "ResponseStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ResponseStrict { get; set; }

		[ApiMember(Name = "ResponseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ResponseIncludeNull { get; set; }

		[ApiMember(Name = "RoutingNumberLast4", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RoutingNumberLast4 { get; set; }

		[ApiMember(Name = "RoutingNumberLast4Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RoutingNumberLast4Strict { get; set; }

		[ApiMember(Name = "RoutingNumberLast4IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RoutingNumberLast4IncludeNull { get; set; }

		[ApiMember(Name = "TransactionNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TransactionNumber { get; set; }

		[ApiMember(Name = "TransactionNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TransactionNumberStrict { get; set; }

		[ApiMember(Name = "TransactionNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TransactionNumberIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PaymentStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PaymentTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PermissionModel
	{
		[ApiMember(Name = "Id", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "")]
		public int Id { get; set; }

		[ApiMember(Name = "Name", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "")]
		public string Name { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PhonePrefixLookupModel : BaseModel
	{
		public string Prefix { get; set; }

		public string TimeZone { get; set; }

		public string CityName { get; set; }

		public int? CountryID { get; set; }

		public string CountryKey { get; set; }

		public string CountryCode { get; set; }

		public string CountryName { get; set; }

		public CountryModel Country { get; set; }

		public int? RegionID { get; set; }

		public string RegionKey { get; set; }

		public string RegionCode { get; set; }

		public string RegionName { get; set; }

		public RegionModel Region { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PhonePrefixLookupPagedResults : PagedResultsBase<PhonePrefixLookupModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PhonePrefixLookupSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "CountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CountryID { get; set; }

		[ApiMember(Name = "CountryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CountryIDIncludeNull { get; set; }

		[ApiMember(Name = "RegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RegionID { get; set; }

		[ApiMember(Name = "RegionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RegionIDIncludeNull { get; set; }

		[ApiMember(Name = "CityName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CityName { get; set; }

		[ApiMember(Name = "CityNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CityNameStrict { get; set; }

		[ApiMember(Name = "CityNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CityNameIncludeNull { get; set; }

		[ApiMember(Name = "Prefix", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Prefix { get; set; }

		[ApiMember(Name = "PrefixStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PrefixStrict { get; set; }

		[ApiMember(Name = "PrefixIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PrefixIncludeNull { get; set; }

		[ApiMember(Name = "TimeZone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TimeZone { get; set; }

		[ApiMember(Name = "TimeZoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeZoneStrict { get; set; }

		[ApiMember(Name = "TimeZoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeZoneIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PreviouslyOrderedProductPagedResults : PagedResultsBase<ProductModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PricePointModel : TypableBaseModel
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PricePointPagedResults : PagedResultsBase<PricePointModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PricePointSearchModel : TypableBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRoundingModel : BaseModel
	{
		public string ProductKey { get; set; }

		public string CurrencyKey { get; set; }

		public string PricePointKey { get; set; }

		public string UnitOfMeasure { get; set; }

		public int RoundHow { get; set; }

		public int RoundTo { get; set; }

		public int RoundingAmount { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRoundingPagedResults : PagedResultsBase<PriceRoundingModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRoundingSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "MinRoundHow", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinRoundHow { get; set; }

		[ApiMember(Name = "MaxRoundHow", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxRoundHow { get; set; }

		[ApiMember(Name = "MatchRoundHow", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchRoundHow { get; set; }

		[ApiMember(Name = "MinRoundingAmount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinRoundingAmount { get; set; }

		[ApiMember(Name = "MaxRoundingAmount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxRoundingAmount { get; set; }

		[ApiMember(Name = "MatchRoundingAmount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchRoundingAmount { get; set; }

		[ApiMember(Name = "MinRoundTo", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinRoundTo { get; set; }

		[ApiMember(Name = "MaxRoundTo", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxRoundTo { get; set; }

		[ApiMember(Name = "MatchRoundTo", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchRoundTo { get; set; }

		[ApiMember(Name = "CurrencyKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CurrencyKey { get; set; }

		[ApiMember(Name = "CurrencyKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CurrencyKeyStrict { get; set; }

		[ApiMember(Name = "CurrencyKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CurrencyKeyIncludeNull { get; set; }

		[ApiMember(Name = "PricePointKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PricePointKey { get; set; }

		[ApiMember(Name = "PricePointKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PricePointKeyStrict { get; set; }

		[ApiMember(Name = "PricePointKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PricePointKeyIncludeNull { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProductKeyStrict { get; set; }

		[ApiMember(Name = "ProductKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProductKeyIncludeNull { get; set; }

		[ApiMember(Name = "UnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UnitOfMeasure { get; set; }

		[ApiMember(Name = "UnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "UnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleAccountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AccountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AccountModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleAccountPagedResults : PagedResultsBase<PriceRuleAccountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleAccountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleAccountTypeModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "TypeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public TypeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleAccountTypePagedResults : PagedResultsBase<PriceRuleAccountTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleAccountTypeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleBrandModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "BrandModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public BrandModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleBrandPagedResults : PagedResultsBase<PriceRuleBrandModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleBrandSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleCategoryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleCategoryPagedResults : PagedResultsBase<PriceRuleCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleCountryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CountryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CountryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleCountryPagedResults : PagedResultsBase<PriceRuleCountryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleCountrySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleFranchiseModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "FranchiseModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public FranchiseModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleFranchisePagedResults : PagedResultsBase<PriceRuleFranchiseModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleFranchiseSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleManufacturerModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ManufacturerModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ManufacturerModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleManufacturerPagedResults : PagedResultsBase<PriceRuleManufacturerModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleManufacturerSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleModel : NameableBaseModel
	{
		public DateTime? StartDate { get; set; }

		public DateTime? EndDate { get; set; }

		public decimal PriceAdjustment { get; set; }

		public decimal? MinQuantity { get; set; }

		public decimal? MaxQuantity { get; set; }

		public string UnitOfMeasure { get; set; }

		public bool IsPercentage { get; set; }

		public bool IsMarkup { get; set; }

		public bool UsePriceBase { get; set; }

		public bool IsExclusive { get; set; }

		public bool IsOnlyForAnonymousUsers { get; set; }

		public int? Priority { get; set; }

		public int? CurrencyID { get; set; }

		public string CurrencyKey { get; set; }

		public string CurrencyName { get; set; }

		public CurrencyModel Currency { get; set; }

		public List<PriceRuleCountryModel> PriceRuleCountries { get; set; }

		public List<PriceRuleUserRoleModel> PriceRuleUserRoles { get; set; }

		public List<PriceRuleCategoryModel> PriceRuleCategories { get; set; }

		public List<PriceRuleAccountTypeModel> PriceRuleAccountTypes { get; set; }

		public List<PriceRuleProductTypeModel> PriceRuleProductTypes { get; set; }

		[ApiMember(Name = "Accounts", DataType = "List<PriceRuleAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts this object is associated with")]
		public List<PriceRuleAccountModel> Accounts { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<PriceRuleBrandModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<PriceRuleBrandModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<PriceRuleFranchiseModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<PriceRuleFranchiseModel> Franchises { get; set; }

		[ApiMember(Name = "Manufacturers", DataType = "List<PriceRuleManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Manufacturers this object is associated with")]
		public List<PriceRuleManufacturerModel> Manufacturers { get; set; }

		[ApiMember(Name = "Products", DataType = "List<PriceRuleProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<PriceRuleProductModel> Products { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<PriceRuleStoreModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<PriceRuleStoreModel> Stores { get; set; }

		[ApiMember(Name = "Vendors", DataType = "List<PriceRuleVendorModel>", ParameterType = "body", IsRequired = false,
			Description = "Vendors this object is associated with")]
		public List<PriceRuleVendorModel> Vendors { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRulePagedResults : PagedResultsBase<PriceRuleModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleProductModel : AmARelationshipTableBaseModel
	{
		public bool OverridePrice { get; set; }

		public decimal? OverrideBasePrice { get; set; }

		public decimal? OverrideSalePrice { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleProductPagedResults : PagedResultsBase<PriceRuleProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "OverridePrice", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverridePrice { get; set; }

		[ApiMember(Name = "MinOverrideBasePrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOverrideBasePrice { get; set; }

		[ApiMember(Name = "MaxOverrideBasePrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOverrideBasePrice { get; set; }

		[ApiMember(Name = "MatchOverrideBasePrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOverrideBasePrice { get; set; }

		[ApiMember(Name = "MatchOverrideBasePriceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOverrideBasePriceIncludeNull { get; set; }

		[ApiMember(Name = "MinOverrideSalePrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOverrideSalePrice { get; set; }

		[ApiMember(Name = "MaxOverrideSalePrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOverrideSalePrice { get; set; }

		[ApiMember(Name = "MatchOverrideSalePrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOverrideSalePrice { get; set; }

		[ApiMember(Name = "MatchOverrideSalePriceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOverrideSalePriceIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleProductTypeModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "TypeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public TypeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleProductTypePagedResults : PagedResultsBase<PriceRuleProductTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleProductTypeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "Priority", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The priority of the price rule, must match exact value if set.")]
		public int? Priority { get; set; }

		public decimal? MinQuantityMin { get; set; }

		public decimal? MinQuantityMax { get; set; }

		public decimal? MaxQuantityMin { get; set; }

		public decimal? MaxQuantityMax { get; set; }

		public DateTime? StartDateMin { get; set; }

		public DateTime? StartDateMax { get; set; }

		public DateTime? EndDateMin { get; set; }

		public DateTime? EndDateMax { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "IsExclusive", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsExclusive { get; set; }

		[ApiMember(Name = "IsMarkup", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsMarkup { get; set; }

		[ApiMember(Name = "IsOnlyForAnonymousUsers", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsOnlyForAnonymousUsers { get; set; }

		[ApiMember(Name = "IsPercentage", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPercentage { get; set; }

		[ApiMember(Name = "UsePriceBase", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UsePriceBase { get; set; }

		[ApiMember(Name = "MinPriceAdjustment", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceAdjustment { get; set; }

		[ApiMember(Name = "MaxPriceAdjustment", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceAdjustment { get; set; }

		[ApiMember(Name = "MatchPriceAdjustment", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceAdjustment { get; set; }

		[ApiMember(Name = "CurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CurrencyID { get; set; }

		[ApiMember(Name = "CurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndDate { get; set; }

		[ApiMember(Name = "MaxEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndDate { get; set; }

		[ApiMember(Name = "MatchEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndDate { get; set; }

		[ApiMember(Name = "MatchEndDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndDateIncludeNull { get; set; }

		[ApiMember(Name = "MinMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaxQuantity { get; set; }

		[ApiMember(Name = "MaxMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaxQuantity { get; set; }

		[ApiMember(Name = "MatchMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaxQuantity { get; set; }

		[ApiMember(Name = "MatchMaxQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaxQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinQuantity { get; set; }

		[ApiMember(Name = "MaxMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinQuantity { get; set; }

		[ApiMember(Name = "MatchMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinQuantity { get; set; }

		[ApiMember(Name = "MatchMinQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinPriority", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinPriority { get; set; }

		[ApiMember(Name = "MaxPriority", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxPriority { get; set; }

		[ApiMember(Name = "MatchPriority", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchPriority { get; set; }

		[ApiMember(Name = "MatchPriorityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriorityIncludeNull { get; set; }

		[ApiMember(Name = "MinStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartDate { get; set; }

		[ApiMember(Name = "MaxStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartDate { get; set; }

		[ApiMember(Name = "MatchStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartDate { get; set; }

		[ApiMember(Name = "MatchStartDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStartDateIncludeNull { get; set; }

		[ApiMember(Name = "UnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UnitOfMeasure { get; set; }

		[ApiMember(Name = "UnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "UnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleStoreModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoreModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoreModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleStorePagedResults : PagedResultsBase<PriceRuleStoreModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleStoreSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleUserRoleModel : BaseModel
	{
		public string RoleName { get; set; }

		public int PriceRuleID { get; set; }

		public string PriceRuleKey { get; set; }

		public string PriceRuleName { get; set; }

		public PriceRuleModel PriceRule { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleUserRolePagedResults : PagedResultsBase<PriceRuleUserRoleModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleUserRoleSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "PriceRuleID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PriceRuleID { get; set; }

		[ApiMember(Name = "RoleName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RoleName { get; set; }

		[ApiMember(Name = "RoleNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RoleNameStrict { get; set; }

		[ApiMember(Name = "RoleNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RoleNameIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PriceRuleVendorModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PriceRuleModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "VendorModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public VendorModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleVendorPagedResults : PagedResultsBase<PriceRuleVendorModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PriceRuleVendorSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductAssociationModel : AmARelationshipTableBaseModel
	{
		public decimal? Quantity { get; set; }

		public string UnitOfMeasure { get; set; }

		public int? SortOrder { get; set; }

		public string MasterSeoUrl { get; set; }

		public string MasterPrimaryImageFileName { get; set; }

		public bool MasterIsVisible { get; set; }

		public SerializableAttributesDictionary MasterSerializableAttributes { get; set; }

		public string SlaveSeoUrl { get; set; }

		public string SlavePrimaryImageFileName { get; set; }

		public bool SlaveIsVisible { get; set; }

		public SerializableAttributesDictionary SlaveSerializableAttributes { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public ProductModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductAssociationPagedResults : PagedResultsBase<ProductAssociationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductAssociationSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "MinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantity { get; set; }

		[ApiMember(Name = "MaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantity { get; set; }

		[ApiMember(Name = "MatchQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantity { get; set; }

		[ApiMember(Name = "MatchQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "UnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UnitOfMeasure { get; set; }

		[ApiMember(Name = "UnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "UnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductAssociationTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductByCategoryModel
	{
		public int? CategoryID { get; set; }

		public string CategoryName { get; set; }

		public int? SortOrder { get; set; }

		public List<ProductModel> Products { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductCatalogSearchForm : SearchFormBase
	{
		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string BrandName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductCategoryModel : AmARelationshipTableBaseModel
	{
		public int? SortOrder { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public ProductModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductCategoryPagedResults : PagedResultsBase<ProductCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductCategorySelectorModel : NameableBaseModel
	{
		public string SeoUrl { get; set; }

		public int? ParentID { get; set; }

		public int? SortOrder { get; set; }

		public bool? HasChildren { get; set; }

		public bool IsSelfSelected { get; set; }

		public bool IsChildSelected { get; set; }

		public List<ProductCategorySelectorModel> Children { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductDownloadModel : NameableBaseModel
	{
		[ApiMember(Name = "IsAbsoluteUrl", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "True if this Download uses absolute url, false if not.")]
		public bool IsAbsoluteUrl { get; set; }

		[ApiMember(Name = "AbsoluteUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The absolute URL.")]
		public string AbsoluteUrl { get; set; }

		[ApiMember(Name = "RelativeUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The relative URL to initiate the download.")]
		public string RelativeUrl { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "ProductID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the product record.")]
		public int ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the product record.")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the product record.")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The product record.")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "Product", DataType = "ProductModel", ParameterType = "body", IsRequired = false,
			Description = "The product record.")]
		public ProductModel Product { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductDownloadPagedResults : PagedResultsBase<ProductDownloadModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductDownloadSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "IsAbsoluteUrl", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsAbsoluteUrl { get; set; }

		[ApiMember(Name = "AbsoluteUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AbsoluteUrl { get; set; }

		[ApiMember(Name = "AbsoluteUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AbsoluteUrlStrict { get; set; }

		[ApiMember(Name = "AbsoluteUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AbsoluteUrlIncludeNull { get; set; }

		[ApiMember(Name = "RelativeUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RelativeUrl { get; set; }

		[ApiMember(Name = "RelativeUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RelativeUrlStrict { get; set; }

		[ApiMember(Name = "RelativeUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RelativeUrlIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductDownloadTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public ProductModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductFilePagedResults : PagedResultsBase<ProductFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductImagePagedResults : PagedResultsBase<ProductImageModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductIndexableModel : IndexableModelBase
	{
		public object SuggestedByBrandName { get; set; }

		public object SuggestedByManufacturerPartNumber { get; set; }

		public object SuggestedByShortDescription { get; set; }

		public string ManufacturerPartNumber { get; set; }

		public string ShortDescription { get; set; }

		public string BrandName { get; set; }

		public string BrandNameAgg { get; set; }

		public bool IsVisible { get; set; }

		public bool? IsQuotable { get; set; }

		public bool? IsTaxable { get; set; }

		public bool? IsSale { get; set; }

		public bool? IsFreeShipping { get; set; }

		public string UnitOfMeasure { get; set; }

		public DateTime? AvailableStartDate { get; set; }

		public DateTime? AvailableEndDate { get; set; }

		public decimal? Weight { get; set; }

		public string WeightUnitOfMeasure { get; set; }

		public decimal? Width { get; set; }

		public string WidthUnitOfMeasure { get; set; }

		public decimal? Depth { get; set; }

		public string DepthUnitOfMeasure { get; set; }

		public decimal? Height { get; set; }

		public string HeightUnitOfMeasure { get; set; }

		public decimal? TotalPurchasedAmount { get; set; }

		public int? TotalPurchasedAmountCurrencyID { get; set; }

		public decimal? TotalPurchasedQuantity { get; set; }

		public IEnumerable<IndexableVariantAttributesFilter> ProductVariantAttributes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductInventoryLocationSectionModel : AmARelationshipTableBaseModel
	{
		public decimal? Quantity { get; set; }

		public decimal? QuantityAllocated { get; set; }

		public decimal? QuantityPreSold { get; set; }

		public decimal? QuantityBroken { get; set; }

		public decimal? FlatQuantity { get; set; }

		public decimal? FlatQuantityAllocated { get; set; }

		public int? InventoryLocationSectionInventoryLocationID { get; set; }

		public string InventoryLocationSectionInventoryLocationKey { get; set; }

		public string InventoryLocationSectionInventoryLocationName { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public ProductModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "InventoryLocationSectionModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public InventoryLocationSectionModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductInventoryLocationSectionPagedResults : PagedResultsBase<ProductInventoryLocationSectionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductInventoryLocationSectionSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "InventoryLocationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Inventory Location ID")]
		public int? InventoryLocationID { get; set; }

		[ApiMember(Name = "InventoryLocationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Inventory Location Key")]
		public string InventoryLocationKey { get; set; }

		[ApiMember(Name = "InventoryLocationName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Inventory Location Name")]
		public string InventoryLocationName { get; set; }

		[ApiMember(Name = "HasBrokenQuantity", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "If the location contains broken quantities")]
		public bool? HasBrokenQuantity { get; set; }

		[ApiMember(Name = "HasPreSoldQuantity", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "If the location contains pre-sold quantities")]
		public bool? HasPreSoldQuantity { get; set; }

		[ApiMember(Name = "StoreID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Store ID (single, And'd if set)")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDs", DataType = "List<int>", ParameterType = "query", IsRequired = false,
			Description = "Store IDs (multiple, Internally Or'd together)")]
		public List<int> StoreIDs { get; set; }

		[ApiMember(Name = "ProductIDs", DataType = "List<int>", ParameterType = "query", IsRequired = false,
			Description = "Product IDs (multiple, Internally Or'd together)")]
		public List<int> ProductIDs { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "MinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantity { get; set; }

		[ApiMember(Name = "MaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantity { get; set; }

		[ApiMember(Name = "MatchQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantity { get; set; }

		[ApiMember(Name = "MatchQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityAllocated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityAllocated { get; set; }

		[ApiMember(Name = "MaxQuantityAllocated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityAllocated { get; set; }

		[ApiMember(Name = "MatchQuantityAllocated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityAllocated { get; set; }

		[ApiMember(Name = "MatchQuantityAllocatedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityAllocatedIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityBroken", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityBroken { get; set; }

		[ApiMember(Name = "MaxQuantityBroken", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityBroken { get; set; }

		[ApiMember(Name = "MatchQuantityBroken", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityBroken { get; set; }

		[ApiMember(Name = "MatchQuantityBrokenIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityBrokenIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityPreSold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityPreSold { get; set; }

		[ApiMember(Name = "MaxQuantityPreSold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityPreSold { get; set; }

		[ApiMember(Name = "MatchQuantityPreSold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityPreSold { get; set; }

		[ApiMember(Name = "MatchQuantityPreSoldIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityPreSoldIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductMembershipLevelModel : AmARelationshipTableBaseModel
	{
		public int MembershipRepeatTypeID { get; set; }

		public string MembershipRepeatTypeKey { get; set; }

		public MembershipRepeatTypeModel MembershipRepeatType { get; set; }

		public List<SubscriptionModel> Subscriptions { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public ProductModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "MembershipLevelModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public MembershipLevelModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductMembershipLevelPagedResults : PagedResultsBase<ProductMembershipLevelModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductMembershipLevelSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "MembershipRepeatTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MembershipRepeatTypeID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductModel : NameableBaseModel
	{
		public decimal? Weight { get; set; }

		public string WeightUnitOfMeasure { get; set; }

		public decimal? Width { get; set; }

		public string WidthUnitOfMeasure { get; set; }

		public decimal? Depth { get; set; }

		public string DepthUnitOfMeasure { get; set; }

		public decimal? Height { get; set; }

		public string HeightUnitOfMeasure { get; set; }

		public bool IsVisible { get; set; }

		public bool IsDiscontinued { get; set; }

		public bool IsEligibleForReturn { get; set; }

		public bool IsTaxable { get; set; }

		public bool AllowBackOrder { get; set; }

		public bool AllowPreSale { get; set; }

		public bool IsUnlimitedStock { get; set; }

		public bool IsFreeShipping { get; set; }

		public bool NothingToShip { get; set; }

		public bool DropShipOnly { get; set; }

		public bool ShippingLeadTimeIsCalendarDays { get; set; }

		public string ShortDescription { get; set; }

		public string ManufacturerPartNumber { get; set; }

		public string BrandName { get; set; }

		public string TaxCode { get; set; }

		public string IndexSynonyms { get; set; }

		public string UnitOfMeasure { get; set; }

		public int? SortOrder { get; set; }

		public decimal? HandlingCharge { get; set; }

		public decimal? FlatShippingCharge { get; set; }

		[ApiMember(Name = "RestockingFeePercent", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "Restocking Fee Percentage of Product selling at")]
		public decimal? RestockingFeePercent { get; set; }

		[ApiMember(Name = "RestockingFeeAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "Restocking Fee Amount")]
		public decimal? RestockingFeeAmount { get; set; }

		public DateTime? AvailableStartDate { get; set; }

		public DateTime? AvailableEndDate { get; set; }

		public DateTime? PreSellEndDate { get; set; }

		public decimal? QuantityPerMasterPack { get; set; }

		public decimal? QuantityMasterPackPerLayer { get; set; }

		public decimal? QuantityMasterPackLayersPerPallet { get; set; }

		public decimal? QuantityMasterPackPerPallet { get; set; }

		public decimal? QuantityPerLayer { get; set; }

		public decimal? QuantityLayersPerPallet { get; set; }

		public decimal? QuantityPerPallet { get; set; }

		public decimal? KitBaseQuantityPriceMultiplier { get; set; }

		public int? ShippingLeadTimeDays { get; set; }

		public decimal? MinimumPurchaseQuantity { get; set; }

		public decimal? MinimumPurchaseQuantityIfPastPurchased { get; set; }

		public decimal? MaximumPurchaseQuantity { get; set; }

		public decimal? MaximumPurchaseQuantityIfPastPurchased { get; set; }

		public decimal? MaximumBackOrderPurchaseQuantity { get; set; }

		public decimal? MaximumBackOrderPurchaseQuantityIfPastPurchased { get; set; }

		public decimal? MaximumBackOrderPurchaseQuantityGlobal { get; set; }

		public decimal? MaximumPrePurchaseQuantity { get; set; }

		public decimal? MaximumPrePurchaseQuantityIfPastPurchased { get; set; }

		public decimal? MaximumPrePurchaseQuantityGlobal { get; set; }

		public string DocumentRequiredForPurchase { get; set; }

		public string DocumentRequiredForPurchaseMissingWarningMessage { get; set; }

		public string DocumentRequiredForPurchaseExpiredWarningMessage { get; set; }

		public decimal? DocumentRequiredForPurchaseOverrideFee { get; set; }

		public bool DocumentRequiredForPurchaseOverrideFeeIsPercent { get; set; }

		public string DocumentRequiredForPurchaseOverrideFeeWarningMessage { get; set; }

		public string DocumentRequiredForPurchaseOverrideFeeAcceptedMessage { get; set; }

		public decimal? MustPurchaseInMultiplesOfAmount { get; set; }

		public string MustPurchaseInMultiplesOfAmountWarningMessage { get; set; }

		public decimal? MustPurchaseInMultiplesOfAmountOverrideFee { get; set; }

		public bool MustPurchaseInMultiplesOfAmountOverrideFeeIsPercent { get; set; }

		public string MustPurchaseInMultiplesOfAmountOverrideFeeWarningMessage { get; set; }

		public string MustPurchaseInMultiplesOfAmountOverrideFeeAcceptedMessage { get; set; }

		public decimal? TotalPurchasedAmount { get; set; }

		public int? TotalPurchasedAmountCurrencyID { get; set; }

		public string TotalPurchasedAmountCurrencyKey { get; set; }

		public string TotalPurchasedAmountCurrencyName { get; set; }

		public CurrencyModel TotalPurchasedAmountCurrency { get; set; }

		public decimal? TotalPurchasedQuantity { get; set; }

		public bool IsShippingRestricted { get; set; }

		public int? PackageID { get; set; }

		public PackageModel Package { get; set; }

		public string PackageKey { get; set; }

		public string PackageName { get; set; }

		public int? MasterPackID { get; set; }

		public PackageModel MasterPack { get; set; }

		public string MasterPackKey { get; set; }

		public string MasterPackName { get; set; }

		public int? PalletID { get; set; }

		public PackageModel Pallet { get; set; }

		public string PalletKey { get; set; }

		public string PalletName { get; set; }

		public string RestockingFeeAmountCurrencyKey { get; set; }

		public string RestockingFeeAmountCurrencyName { get; set; }

		public int? RestockingFeeAmountCurrencyID { get; set; }

		public CurrencyModel RestockingFeeAmountCurrency { get; set; }

		public List<ProductCategoryModel> ProductCategories { get; set; }

		public List<ProductShipCarrierMethodModel> ProductShipCarrierMethods { get; set; }

		public List<ProductDownloadModel> ProductDownloads { get; set; }

		public List<ProductAssociationModel> ProductAssociations { get; set; }

		public List<ProductAssociationModel> ProductsAssociatedWith { get; set; }

		public List<ProductRestrictionModel> ProductRestrictions { get; set; }

		public List<ProductSubscriptionTypeModel> ProductSubscriptionTypes { get; set; }

		public List<ProductMembershipLevelModel> ProductMembershipLevels { get; set; }

		public List<ProductNotificationModel> ProductNotifications { get; set; }

		[ApiMember(Name = "IsVendorAdmin", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "When true, will only return values as part of the vendor's admin's filter. This value is set by the server and cannot be overriden.")]
		public bool? IsVendorAdmin { get; set; }

		[ApiMember(Name = "VendorAdminID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "When set, will only return values as part of the vendor's admin's filter. This value is set by the server and cannot be overriden.")]
		public int? VendorAdminID { get; set; }

		[ApiMember(Name = "IsManufacturerAdmin", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "When true, will only return values as part of the manufacturer's admin's filter. This value is set by the server and cannot be overriden.")]
		public bool? IsManufacturerAdmin { get; set; }

		[ApiMember(Name = "ManufacturerAdminID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "When set, will only return values as part of the manufacturer's admin's filter. This value is set by the server and cannot be overriden.")]
		public int? ManufacturerAdminID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "Accounts", DataType = "List<AccountProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts this object is associated with")]
		public List<AccountProductModel> Accounts { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandProductModel> Brands { get; set; }

		[ApiMember(Name = "Categories", DataType = "List<ProductCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Categories this object is associated with")]
		public List<ProductCategoryModel> Categories { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseProductModel> Franchises { get; set; }

		[ApiMember(Name = "Manufacturers", DataType = "List<ManufacturerProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Manufacturers this object is associated with")]
		public List<ManufacturerProductModel> Manufacturers { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<StoreProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<StoreProductModel> Stores { get; set; }

		[ApiMember(Name = "Vendors", DataType = "List<VendorProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Vendors this object is associated with")]
		public List<VendorProductModel> Vendors { get; set; }

		[ApiMember(Name = "Images", DataType = "List<ProductImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<ProductImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "StoredFiles", DataType = "List<ProductFileModel>", ParameterType = "body", IsRequired = false,
			Description = "Stored Files for the object, optional")]
		public List<ProductFileModel> StoredFiles { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "RequiresRoles", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "A comma delimited string? for Role Names that are required for access")]
		public string RequiresRoles { get; set; }

		[ApiMember(Name = "RequiresRolesList", DataType = "List<string>", ParameterType = "body", IsRequired = false,
			Description = "A List string? for Role Names that are required for access")]
		public List<string> RequiresRolesList { get; set; }

		[ApiMember(Name = "RequiresRolesAlt", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "A comma delimited string? for Role Names that are required for access. This is an alternate list for additional purposes.")]
		public string RequiresRolesAlt { get; set; }

		[ApiMember(Name = "RequiresRolesListAlt", DataType = "List<string>", ParameterType = "body", IsRequired = false,
			Description = "A List string? for Role Names that are required for access. This is an alternate list for additional purposes.")]
		public List<string> RequiresRolesListAlt { get; set; }

		[ApiMember(Name = "Reviews", DataType = "List<ReviewModel>", ParameterType = "body", IsRequired = false,
			Description = "Product Reviews")]
		public List<ReviewModel> Reviews { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductNotificationModel : NameableBaseModel
	{
		[ApiMember(Name = "ProductID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the product record.")]
		public int ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the product record.")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the product record.")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The product record.")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "Product", DataType = "ProductModel", ParameterType = "body", IsRequired = false,
			Description = "The product record.")]
		public ProductModel Product { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductNotificationPagedResults : PagedResultsBase<ProductNotificationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductNotificationSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductPagedResults : PagedResultsBase<ProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductPricePointModel : AmARelationshipTableBaseModel
	{
		public decimal? MinQuantity { get; set; }

		public decimal? MaxQuantity { get; set; }

		public string UnitOfMeasure { get; set; }

		public decimal? Price { get; set; }

		public decimal? PercentDiscount { get; set; }

		public DateTime? From { get; set; }

		public DateTime? To { get; set; }

		public int? CurrencyID { get; set; }

		public string CurrencyKey { get; set; }

		public string CurrencyName { get; set; }

		public CurrencyModel Currency { get; set; }

		public int? PriceRoundingID { get; set; }

		public string PriceRoundingKey { get; set; }

		public PriceRoundingModel PriceRounding { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string MasterSeoUrl { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? FranchiseID { get; set; }

		public string FranchiseKey { get; set; }

		public string FranchiseName { get; set; }

		public FranchiseModel Franchise { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public ProductModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "PricePointModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public PricePointModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductPricePointPagedResults : PagedResultsBase<ProductPricePointModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductPricePointSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantity { get; set; }

		[ApiMember(Name = "MaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantity { get; set; }

		[ApiMember(Name = "From", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? From { get; set; }

		[ApiMember(Name = "To", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? To { get; set; }

		[ApiMember(Name = "AccountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountName { get; set; }

		[ApiMember(Name = "PricePointIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public List<Nullable`1> PricePointIDs { get; set; }

		[ApiMember(Name = "CurrencyKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CurrencyKey { get; set; }

		[ApiMember(Name = "CurrencyName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CurrencyName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "CurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CurrencyID { get; set; }

		[ApiMember(Name = "CurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinFrom", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinFrom { get; set; }

		[ApiMember(Name = "MaxFrom", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxFrom { get; set; }

		[ApiMember(Name = "MatchFrom", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchFrom { get; set; }

		[ApiMember(Name = "MatchFromIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchFromIncludeNull { get; set; }

		[ApiMember(Name = "MinMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaxQuantity { get; set; }

		[ApiMember(Name = "MaxMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaxQuantity { get; set; }

		[ApiMember(Name = "MatchMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaxQuantity { get; set; }

		[ApiMember(Name = "MatchMaxQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaxQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinQuantity { get; set; }

		[ApiMember(Name = "MaxMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinQuantity { get; set; }

		[ApiMember(Name = "MatchMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinQuantity { get; set; }

		[ApiMember(Name = "MatchMinQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinPercentDiscount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPercentDiscount { get; set; }

		[ApiMember(Name = "MaxPercentDiscount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPercentDiscount { get; set; }

		[ApiMember(Name = "MatchPercentDiscount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPercentDiscount { get; set; }

		[ApiMember(Name = "MatchPercentDiscountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPercentDiscountIncludeNull { get; set; }

		[ApiMember(Name = "MinPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPrice { get; set; }

		[ApiMember(Name = "MaxPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPrice { get; set; }

		[ApiMember(Name = "MatchPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPrice { get; set; }

		[ApiMember(Name = "MatchPriceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceIncludeNull { get; set; }

		[ApiMember(Name = "PriceRoundingID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PriceRoundingID { get; set; }

		[ApiMember(Name = "PriceRoundingIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PriceRoundingIDIncludeNull { get; set; }

		[ApiMember(Name = "MinTo", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinTo { get; set; }

		[ApiMember(Name = "MaxTo", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxTo { get; set; }

		[ApiMember(Name = "MatchTo", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchTo { get; set; }

		[ApiMember(Name = "MatchToIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchToIncludeNull { get; set; }

		[ApiMember(Name = "UnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UnitOfMeasure { get; set; }

		[ApiMember(Name = "UnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "UnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductRestrictionModel : BaseModel
	{
		public bool CanPurchaseInternationally { get; set; }

		public bool CanPurchaseDomestically { get; set; }

		public bool CanPurchaseIntraRegion { get; set; }

		public bool CanShipInternationally { get; set; }

		public bool CanShipDomestically { get; set; }

		public bool CanShipIntraRegion { get; set; }

		public string RestrictionsApplyToCity { get; set; }

		public string RestrictionsApplyToPostalCode { get; set; }

		public int? RestrictionsApplyToCountryID { get; set; }

		public string RestrictionsApplyToCountryKey { get; set; }

		public string RestrictionsApplyToCountryName { get; set; }

		public CountryModel RestrictionsApplyToCountry { get; set; }

		public int? RestrictionsApplyToRegionID { get; set; }

		public string RestrictionsApplyToRegionKey { get; set; }

		public string RestrictionsApplyToRegionName { get; set; }

		public RegionModel RestrictionsApplyToRegion { get; set; }

		public string OverrideWithRoles { get; set; }

		public int? OverrideWithAccountTypeID { get; set; }

		public string OverrideWithAccountTypeKey { get; set; }

		public string OverrideWithAccountTypeName { get; set; }

		public TypeModel OverrideWithAccountType { get; set; }

		[ApiMember(Name = "ProductID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the product record.")]
		public int ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the product record.")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the product record.")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The product record.")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "Product", DataType = "ProductModel", ParameterType = "body", IsRequired = false,
			Description = "The product record.")]
		public ProductModel Product { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductRestrictionPagedResults : PagedResultsBase<ProductRestrictionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductRestrictionSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "CanPurchaseDomestically", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CanPurchaseDomestically { get; set; }

		[ApiMember(Name = "CanPurchaseInternationally", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CanPurchaseInternationally { get; set; }

		[ApiMember(Name = "CanPurchaseIntraRegion", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CanPurchaseIntraRegion { get; set; }

		[ApiMember(Name = "CanShipDomestically", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CanShipDomestically { get; set; }

		[ApiMember(Name = "CanShipInternationally", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CanShipInternationally { get; set; }

		[ApiMember(Name = "CanShipIntraRegion", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CanShipIntraRegion { get; set; }

		[ApiMember(Name = "OverrideWithAccountTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? OverrideWithAccountTypeID { get; set; }

		[ApiMember(Name = "OverrideWithAccountTypeIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideWithAccountTypeIDIncludeNull { get; set; }

		[ApiMember(Name = "RestrictionsApplyToCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RestrictionsApplyToCountryID { get; set; }

		[ApiMember(Name = "RestrictionsApplyToCountryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestrictionsApplyToCountryIDIncludeNull { get; set; }

		[ApiMember(Name = "RestrictionsApplyToRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RestrictionsApplyToRegionID { get; set; }

		[ApiMember(Name = "RestrictionsApplyToRegionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestrictionsApplyToRegionIDIncludeNull { get; set; }

		[ApiMember(Name = "OverrideWithRoles", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OverrideWithRoles { get; set; }

		[ApiMember(Name = "OverrideWithRolesStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideWithRolesStrict { get; set; }

		[ApiMember(Name = "OverrideWithRolesIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverrideWithRolesIncludeNull { get; set; }

		[ApiMember(Name = "RestrictionsApplyToCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RestrictionsApplyToCity { get; set; }

		[ApiMember(Name = "RestrictionsApplyToCityStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestrictionsApplyToCityStrict { get; set; }

		[ApiMember(Name = "RestrictionsApplyToCityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestrictionsApplyToCityIncludeNull { get; set; }

		[ApiMember(Name = "RestrictionsApplyToPostalCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RestrictionsApplyToPostalCode { get; set; }

		[ApiMember(Name = "RestrictionsApplyToPostalCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestrictionsApplyToPostalCodeStrict { get; set; }

		[ApiMember(Name = "RestrictionsApplyToPostalCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestrictionsApplyToPostalCodeIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductReviewInformationModel : BaseModel
	{
		public int ProductID { get; set; }

		public int? ReviewTypeID { get; set; }

		public decimal? Value { get; set; }

		public int Count { get; set; }

		public List<ReviewModel> Reviews { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "HasAnyAncestorCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? HasAnyAncestorCategoryID { get; set; }

		[ApiMember(Name = "ParentCategories", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] ParentCategories { get; set; }

		[ApiMember(Name = "SearchTerm", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SearchTerm { get; set; }

		[ApiMember(Name = "Price", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? Price { get; set; }

		[ApiMember(Name = "Weight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? Weight { get; set; }

		[ApiMember(Name = "CategoryTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CategoryTypeName { get; set; }

		[ApiMember(Name = "Keywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "List of words to search against in various product info's")]
		public string Keywords { get; set; }

		[ApiMember(Name = "ComparisonIDs", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] ComparisonIDs { get; set; }

		[ApiMember(Name = "ProductIDs", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] ProductIDs { get; set; }

		[ApiMember(Name = "BrandCategoryIDs", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] BrandCategoryIDs { get; set; }

		[ApiMember(Name = "CategoryJsonAttributes", DataType = "Dictionary<string, string[]>", ParameterType = "query", IsRequired = false,
			Description = "Filter by a dictionary of attribute values (JSON version) of the categories this product belongs to")]
		public Dictionary<string, string[]> CategoryJsonAttributes { get; set; }

		[ApiMember(Name = "IsVendorAdmin", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, will only return values as part of the vendor's admin's filter. This value is set by the server and cannot be overriden.")]
		public bool? IsVendorAdmin { get; set; }

		[ApiMember(Name = "VendorAdminID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "When set, will only return values as part of the vendor's admin's filter. This value is set by the server and cannot be overriden.")]
		public int? VendorAdminID { get; set; }

		[ApiMember(Name = "IsManufacturerAdmin", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, will only return values as part of the manufacturer's admin's filter. This value is set by the server and cannot be overriden.")]
		public bool? IsManufacturerAdmin { get; set; }

		[ApiMember(Name = "ManufacturerAdminID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "When set, will only return values as part of the manufacturer's admin's filter. This value is set by the server and cannot be overriden.")]
		public int? ManufacturerAdminID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "AllowBackOrder", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AllowBackOrder { get; set; }

		[ApiMember(Name = "AllowPreSale", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AllowPreSale { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "DropShipOnly", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DropShipOnly { get; set; }

		[ApiMember(Name = "IsDiscontinued", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsDiscontinued { get; set; }

		[ApiMember(Name = "IsEligibleForReturn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsEligibleForReturn { get; set; }

		[ApiMember(Name = "IsFreeShipping", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsFreeShipping { get; set; }

		[ApiMember(Name = "IsTaxable", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsTaxable { get; set; }

		[ApiMember(Name = "IsUnlimitedStock", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsUnlimitedStock { get; set; }

		[ApiMember(Name = "IsVisible", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisible { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MustPurchaseInMultiplesOfAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "NothingToShip", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? NothingToShip { get; set; }

		[ApiMember(Name = "ShippingLeadTimeIsCalendarDays", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingLeadTimeIsCalendarDays { get; set; }

		[ApiMember(Name = "MinAvailableEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinAvailableEndDate { get; set; }

		[ApiMember(Name = "MaxAvailableEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxAvailableEndDate { get; set; }

		[ApiMember(Name = "MatchAvailableEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchAvailableEndDate { get; set; }

		[ApiMember(Name = "MatchAvailableEndDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchAvailableEndDateIncludeNull { get; set; }

		[ApiMember(Name = "MinAvailableStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinAvailableStartDate { get; set; }

		[ApiMember(Name = "MaxAvailableStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxAvailableStartDate { get; set; }

		[ApiMember(Name = "MatchAvailableStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchAvailableStartDate { get; set; }

		[ApiMember(Name = "MatchAvailableStartDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchAvailableStartDateIncludeNull { get; set; }

		[ApiMember(Name = "MinDepth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDepth { get; set; }

		[ApiMember(Name = "MaxDepth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDepth { get; set; }

		[ApiMember(Name = "MatchDepth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDepth { get; set; }

		[ApiMember(Name = "MatchDepthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDepthIncludeNull { get; set; }

		[ApiMember(Name = "MinDocumentRequiredForPurchaseOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDocumentRequiredForPurchaseOverrideFee { get; set; }

		[ApiMember(Name = "MaxDocumentRequiredForPurchaseOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDocumentRequiredForPurchaseOverrideFee { get; set; }

		[ApiMember(Name = "MatchDocumentRequiredForPurchaseOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDocumentRequiredForPurchaseOverrideFee { get; set; }

		[ApiMember(Name = "MatchDocumentRequiredForPurchaseOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDocumentRequiredForPurchaseOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinFlatShippingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinFlatShippingCharge { get; set; }

		[ApiMember(Name = "MaxFlatShippingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxFlatShippingCharge { get; set; }

		[ApiMember(Name = "MatchFlatShippingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchFlatShippingCharge { get; set; }

		[ApiMember(Name = "MatchFlatShippingChargeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchFlatShippingChargeIncludeNull { get; set; }

		[ApiMember(Name = "MinHandlingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinHandlingCharge { get; set; }

		[ApiMember(Name = "MaxHandlingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxHandlingCharge { get; set; }

		[ApiMember(Name = "MatchHandlingCharge", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchHandlingCharge { get; set; }

		[ApiMember(Name = "MatchHandlingChargeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchHandlingChargeIncludeNull { get; set; }

		[ApiMember(Name = "MinHeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinHeight { get; set; }

		[ApiMember(Name = "MaxHeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxHeight { get; set; }

		[ApiMember(Name = "MatchHeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchHeight { get; set; }

		[ApiMember(Name = "MatchHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinKitBaseQuantityPriceMultiplier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinKitBaseQuantityPriceMultiplier { get; set; }

		[ApiMember(Name = "MaxKitBaseQuantityPriceMultiplier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxKitBaseQuantityPriceMultiplier { get; set; }

		[ApiMember(Name = "MatchKitBaseQuantityPriceMultiplier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchKitBaseQuantityPriceMultiplier { get; set; }

		[ApiMember(Name = "MatchKitBaseQuantityPriceMultiplierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchKitBaseQuantityPriceMultiplierIncludeNull { get; set; }

		[ApiMember(Name = "MasterPackID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterPackID { get; set; }

		[ApiMember(Name = "MasterPackIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterPackIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumBackOrderPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaximumBackOrderPurchaseQuantity { get; set; }

		[ApiMember(Name = "MaxMaximumBackOrderPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaximumBackOrderPurchaseQuantity { get; set; }

		[ApiMember(Name = "MatchMaximumBackOrderPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaximumBackOrderPurchaseQuantity { get; set; }

		[ApiMember(Name = "MatchMaximumBackOrderPurchaseQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumBackOrderPurchaseQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumBackOrderPurchaseQuantityGlobal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaximumBackOrderPurchaseQuantityGlobal { get; set; }

		[ApiMember(Name = "MaxMaximumBackOrderPurchaseQuantityGlobal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaximumBackOrderPurchaseQuantityGlobal { get; set; }

		[ApiMember(Name = "MatchMaximumBackOrderPurchaseQuantityGlobal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaximumBackOrderPurchaseQuantityGlobal { get; set; }

		[ApiMember(Name = "MatchMaximumBackOrderPurchaseQuantityGlobalIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumBackOrderPurchaseQuantityGlobalIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumBackOrderPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaximumBackOrderPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MaxMaximumBackOrderPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaximumBackOrderPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MatchMaximumBackOrderPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaximumBackOrderPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MatchMaximumBackOrderPurchaseQuantityIfPastPurchasedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumBackOrderPurchaseQuantityIfPastPurchasedIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumPrePurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaximumPrePurchaseQuantity { get; set; }

		[ApiMember(Name = "MaxMaximumPrePurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaximumPrePurchaseQuantity { get; set; }

		[ApiMember(Name = "MatchMaximumPrePurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaximumPrePurchaseQuantity { get; set; }

		[ApiMember(Name = "MatchMaximumPrePurchaseQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumPrePurchaseQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumPrePurchaseQuantityGlobal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaximumPrePurchaseQuantityGlobal { get; set; }

		[ApiMember(Name = "MaxMaximumPrePurchaseQuantityGlobal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaximumPrePurchaseQuantityGlobal { get; set; }

		[ApiMember(Name = "MatchMaximumPrePurchaseQuantityGlobal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaximumPrePurchaseQuantityGlobal { get; set; }

		[ApiMember(Name = "MatchMaximumPrePurchaseQuantityGlobalIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumPrePurchaseQuantityGlobalIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumPrePurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaximumPrePurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MaxMaximumPrePurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaximumPrePurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MatchMaximumPrePurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaximumPrePurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MatchMaximumPrePurchaseQuantityIfPastPurchasedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumPrePurchaseQuantityIfPastPurchasedIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaximumPurchaseQuantity { get; set; }

		[ApiMember(Name = "MaxMaximumPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaximumPurchaseQuantity { get; set; }

		[ApiMember(Name = "MatchMaximumPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaximumPurchaseQuantity { get; set; }

		[ApiMember(Name = "MatchMaximumPurchaseQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumPurchaseQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaximumPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MaxMaximumPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaximumPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MatchMaximumPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaximumPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MatchMaximumPurchaseQuantityIfPastPurchasedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumPurchaseQuantityIfPastPurchasedIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumPurchaseQuantity { get; set; }

		[ApiMember(Name = "MaxMinimumPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumPurchaseQuantity { get; set; }

		[ApiMember(Name = "MatchMinimumPurchaseQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumPurchaseQuantity { get; set; }

		[ApiMember(Name = "MatchMinimumPurchaseQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumPurchaseQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MaxMinimumPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MatchMinimumPurchaseQuantityIfPastPurchased", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumPurchaseQuantityIfPastPurchased { get; set; }

		[ApiMember(Name = "MatchMinimumPurchaseQuantityIfPastPurchasedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumPurchaseQuantityIfPastPurchasedIncludeNull { get; set; }

		[ApiMember(Name = "MinMustPurchaseInMultiplesOfAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMustPurchaseInMultiplesOfAmount { get; set; }

		[ApiMember(Name = "MaxMustPurchaseInMultiplesOfAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMustPurchaseInMultiplesOfAmount { get; set; }

		[ApiMember(Name = "MatchMustPurchaseInMultiplesOfAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMustPurchaseInMultiplesOfAmount { get; set; }

		[ApiMember(Name = "MatchMustPurchaseInMultiplesOfAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMustPurchaseInMultiplesOfAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMustPurchaseInMultiplesOfAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMustPurchaseInMultiplesOfAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMustPurchaseInMultiplesOfAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMustPurchaseInMultiplesOfAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMustPurchaseInMultiplesOfAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMustPurchaseInMultiplesOfAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMustPurchaseInMultiplesOfAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMustPurchaseInMultiplesOfAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "PackageID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PackageID { get; set; }

		[ApiMember(Name = "PackageIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PackageIDIncludeNull { get; set; }

		[ApiMember(Name = "PalletID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PalletID { get; set; }

		[ApiMember(Name = "PalletIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PalletIDIncludeNull { get; set; }

		[ApiMember(Name = "MinPreSellEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinPreSellEndDate { get; set; }

		[ApiMember(Name = "MaxPreSellEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxPreSellEndDate { get; set; }

		[ApiMember(Name = "MatchPreSellEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchPreSellEndDate { get; set; }

		[ApiMember(Name = "MatchPreSellEndDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPreSellEndDateIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceBase { get; set; }

		[ApiMember(Name = "MaxPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceBase { get; set; }

		[ApiMember(Name = "MatchPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceBase { get; set; }

		[ApiMember(Name = "MatchPriceBaseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceBaseIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceMsrp { get; set; }

		[ApiMember(Name = "MaxPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceMsrp { get; set; }

		[ApiMember(Name = "MatchPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceMsrp { get; set; }

		[ApiMember(Name = "MatchPriceMsrpIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceMsrpIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceReduction { get; set; }

		[ApiMember(Name = "MaxPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceReduction { get; set; }

		[ApiMember(Name = "MatchPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceReduction { get; set; }

		[ApiMember(Name = "MatchPriceReductionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceReductionIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceSale { get; set; }

		[ApiMember(Name = "MaxPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceSale { get; set; }

		[ApiMember(Name = "MatchPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceSale { get; set; }

		[ApiMember(Name = "MatchPriceSaleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceSaleIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityLayersPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityLayersPerPallet { get; set; }

		[ApiMember(Name = "MaxQuantityLayersPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityLayersPerPallet { get; set; }

		[ApiMember(Name = "MatchQuantityLayersPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityLayersPerPallet { get; set; }

		[ApiMember(Name = "MatchQuantityLayersPerPalletIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityLayersPerPalletIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityMasterPackLayersPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityMasterPackLayersPerPallet { get; set; }

		[ApiMember(Name = "MaxQuantityMasterPackLayersPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityMasterPackLayersPerPallet { get; set; }

		[ApiMember(Name = "MatchQuantityMasterPackLayersPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityMasterPackLayersPerPallet { get; set; }

		[ApiMember(Name = "MatchQuantityMasterPackLayersPerPalletIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityMasterPackLayersPerPalletIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityMasterPackPerLayer", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityMasterPackPerLayer { get; set; }

		[ApiMember(Name = "MaxQuantityMasterPackPerLayer", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityMasterPackPerLayer { get; set; }

		[ApiMember(Name = "MatchQuantityMasterPackPerLayer", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityMasterPackPerLayer { get; set; }

		[ApiMember(Name = "MatchQuantityMasterPackPerLayerIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityMasterPackPerLayerIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityMasterPackPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityMasterPackPerPallet { get; set; }

		[ApiMember(Name = "MaxQuantityMasterPackPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityMasterPackPerPallet { get; set; }

		[ApiMember(Name = "MatchQuantityMasterPackPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityMasterPackPerPallet { get; set; }

		[ApiMember(Name = "MatchQuantityMasterPackPerPalletIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityMasterPackPerPalletIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityPerLayer", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityPerLayer { get; set; }

		[ApiMember(Name = "MaxQuantityPerLayer", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityPerLayer { get; set; }

		[ApiMember(Name = "MatchQuantityPerLayer", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityPerLayer { get; set; }

		[ApiMember(Name = "MatchQuantityPerLayerIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityPerLayerIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityPerMasterPack", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityPerMasterPack { get; set; }

		[ApiMember(Name = "MaxQuantityPerMasterPack", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityPerMasterPack { get; set; }

		[ApiMember(Name = "MatchQuantityPerMasterPack", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityPerMasterPack { get; set; }

		[ApiMember(Name = "MatchQuantityPerMasterPackIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityPerMasterPackIncludeNull { get; set; }

		[ApiMember(Name = "MinQuantityPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantityPerPallet { get; set; }

		[ApiMember(Name = "MaxQuantityPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantityPerPallet { get; set; }

		[ApiMember(Name = "MatchQuantityPerPallet", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantityPerPallet { get; set; }

		[ApiMember(Name = "MatchQuantityPerPalletIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchQuantityPerPalletIncludeNull { get; set; }

		[ApiMember(Name = "MinRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MaxRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MatchRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MatchRestockingFeeAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRestockingFeeAmountIncludeNull { get; set; }

		[ApiMember(Name = "RestockingFeeAmountCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RestockingFeeAmountCurrencyID { get; set; }

		[ApiMember(Name = "RestockingFeeAmountCurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestockingFeeAmountCurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRestockingFeePercent { get; set; }

		[ApiMember(Name = "MaxRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRestockingFeePercent { get; set; }

		[ApiMember(Name = "MatchRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRestockingFeePercent { get; set; }

		[ApiMember(Name = "MatchRestockingFeePercentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRestockingFeePercentIncludeNull { get; set; }

		[ApiMember(Name = "MinShippingLeadTimeDays", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinShippingLeadTimeDays { get; set; }

		[ApiMember(Name = "MaxShippingLeadTimeDays", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxShippingLeadTimeDays { get; set; }

		[ApiMember(Name = "MatchShippingLeadTimeDays", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchShippingLeadTimeDays { get; set; }

		[ApiMember(Name = "MatchShippingLeadTimeDaysIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchShippingLeadTimeDaysIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinStockQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinStockQuantity { get; set; }

		[ApiMember(Name = "MaxStockQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxStockQuantity { get; set; }

		[ApiMember(Name = "MatchStockQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchStockQuantity { get; set; }

		[ApiMember(Name = "MatchStockQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStockQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinStockQuantityAllocated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinStockQuantityAllocated { get; set; }

		[ApiMember(Name = "MaxStockQuantityAllocated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxStockQuantityAllocated { get; set; }

		[ApiMember(Name = "MatchStockQuantityAllocated", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchStockQuantityAllocated { get; set; }

		[ApiMember(Name = "MatchStockQuantityAllocatedIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStockQuantityAllocatedIncludeNull { get; set; }

		[ApiMember(Name = "MinStockQuantityPreSold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinStockQuantityPreSold { get; set; }

		[ApiMember(Name = "MaxStockQuantityPreSold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxStockQuantityPreSold { get; set; }

		[ApiMember(Name = "MatchStockQuantityPreSold", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchStockQuantityPreSold { get; set; }

		[ApiMember(Name = "MatchStockQuantityPreSoldIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStockQuantityPreSoldIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalPurchasedAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotalPurchasedAmount { get; set; }

		[ApiMember(Name = "MaxTotalPurchasedAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotalPurchasedAmount { get; set; }

		[ApiMember(Name = "MatchTotalPurchasedAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotalPurchasedAmount { get; set; }

		[ApiMember(Name = "MatchTotalPurchasedAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalPurchasedAmountIncludeNull { get; set; }

		[ApiMember(Name = "TotalPurchasedAmountCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? TotalPurchasedAmountCurrencyID { get; set; }

		[ApiMember(Name = "TotalPurchasedAmountCurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TotalPurchasedAmountCurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalPurchasedQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotalPurchasedQuantity { get; set; }

		[ApiMember(Name = "MaxTotalPurchasedQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotalPurchasedQuantity { get; set; }

		[ApiMember(Name = "MatchTotalPurchasedQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotalPurchasedQuantity { get; set; }

		[ApiMember(Name = "MatchTotalPurchasedQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalPurchasedQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinWeight { get; set; }

		[ApiMember(Name = "MaxWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxWeight { get; set; }

		[ApiMember(Name = "MatchWeight", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchWeight { get; set; }

		[ApiMember(Name = "MatchWeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchWeightIncludeNull { get; set; }

		[ApiMember(Name = "MinWidth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinWidth { get; set; }

		[ApiMember(Name = "MaxWidth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxWidth { get; set; }

		[ApiMember(Name = "MatchWidth", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchWidth { get; set; }

		[ApiMember(Name = "MatchWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchWidthIncludeNull { get; set; }

		[ApiMember(Name = "DepthUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DepthUnitOfMeasure { get; set; }

		[ApiMember(Name = "DepthUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DepthUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "DepthUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DepthUnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchase", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DocumentRequiredForPurchase { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseStrict { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseIncludeNull { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseExpiredWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DocumentRequiredForPurchaseExpiredWarningMessage { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseExpiredWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseExpiredWarningMessageStrict { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseExpiredWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseExpiredWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseMissingWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DocumentRequiredForPurchaseMissingWarningMessage { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseMissingWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseMissingWarningMessageStrict { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseMissingWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseMissingWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DocumentRequiredForPurchaseOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DocumentRequiredForPurchaseOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "DocumentRequiredForPurchaseOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DocumentRequiredForPurchaseOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "HeightUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string HeightUnitOfMeasure { get; set; }

		[ApiMember(Name = "HeightUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HeightUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "HeightUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HeightUnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "IndexSynonyms", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string IndexSynonyms { get; set; }

		[ApiMember(Name = "IndexSynonymsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IndexSynonymsStrict { get; set; }

		[ApiMember(Name = "IndexSynonymsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IndexSynonymsIncludeNull { get; set; }

		[ApiMember(Name = "ManufacturerPartNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ManufacturerPartNumber { get; set; }

		[ApiMember(Name = "ManufacturerPartNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ManufacturerPartNumberStrict { get; set; }

		[ApiMember(Name = "ManufacturerPartNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ManufacturerPartNumberIncludeNull { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MustPurchaseInMultiplesOfAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MustPurchaseInMultiplesOfAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MustPurchaseInMultiplesOfAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MustPurchaseInMultiplesOfAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MustPurchaseInMultiplesOfAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MustPurchaseInMultiplesOfAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MustPurchaseInMultiplesOfAmountWarningMessage { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MustPurchaseInMultiplesOfAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MustPurchaseInMultiplesOfAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MustPurchaseInMultiplesOfAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "RequiresRoles", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RequiresRoles { get; set; }

		[ApiMember(Name = "RequiresRolesStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresRolesStrict { get; set; }

		[ApiMember(Name = "RequiresRolesIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresRolesIncludeNull { get; set; }

		[ApiMember(Name = "RequiresRolesAlt", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RequiresRolesAlt { get; set; }

		[ApiMember(Name = "RequiresRolesAltStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresRolesAltStrict { get; set; }

		[ApiMember(Name = "RequiresRolesAltIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresRolesAltIncludeNull { get; set; }

		[ApiMember(Name = "ShortDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ShortDescription { get; set; }

		[ApiMember(Name = "ShortDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShortDescriptionStrict { get; set; }

		[ApiMember(Name = "ShortDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShortDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "TaxCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TaxCode { get; set; }

		[ApiMember(Name = "TaxCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxCodeStrict { get; set; }

		[ApiMember(Name = "TaxCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxCodeIncludeNull { get; set; }

		[ApiMember(Name = "UnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UnitOfMeasure { get; set; }

		[ApiMember(Name = "UnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "UnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "WeightUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string WeightUnitOfMeasure { get; set; }

		[ApiMember(Name = "WeightUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? WeightUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "WeightUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? WeightUnitOfMeasureIncludeNull { get; set; }

		[ApiMember(Name = "WidthUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string WidthUnitOfMeasure { get; set; }

		[ApiMember(Name = "WidthUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? WidthUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "WidthUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? WidthUnitOfMeasureIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductSearchViewModel : SearchViewModelBase<ProductCatalogSearchForm, ProductIndexableModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductShipCarrierMethodModel : AmARelationshipTableBaseModel
	{
		public decimal? MinQuantity { get; set; }

		public decimal? MaxQuantity { get; set; }

		public DateTime? From { get; set; }

		public DateTime? To { get; set; }

		public string UnitOfMeasure { get; set; }

		public decimal Price { get; set; }

		public int? CurrencyID { get; set; }

		public string CurrencyKey { get; set; }

		public string CurrencyName { get; set; }

		public CurrencyModel Currency { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string MasterSeoUrl { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public ProductModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ShipCarrierMethodModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ShipCarrierMethodModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductShipCarrierMethodPagedResults : PagedResultsBase<ProductShipCarrierMethodModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductShipCarrierMethodSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantity { get; set; }

		[ApiMember(Name = "MaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantity { get; set; }

		[ApiMember(Name = "From", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? From { get; set; }

		[ApiMember(Name = "To", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? To { get; set; }

		[ApiMember(Name = "ShipCarrierMethodIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public List<Nullable`1> ShipCarrierMethodIDs { get; set; }

		[ApiMember(Name = "CurrencyKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CurrencyKey { get; set; }

		[ApiMember(Name = "CurrencyName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CurrencyName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "MinPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPrice { get; set; }

		[ApiMember(Name = "MaxPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPrice { get; set; }

		[ApiMember(Name = "MatchPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPrice { get; set; }

		[ApiMember(Name = "CurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CurrencyID { get; set; }

		[ApiMember(Name = "CurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinFrom", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinFrom { get; set; }

		[ApiMember(Name = "MaxFrom", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxFrom { get; set; }

		[ApiMember(Name = "MatchFrom", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchFrom { get; set; }

		[ApiMember(Name = "MatchFromIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchFromIncludeNull { get; set; }

		[ApiMember(Name = "MinMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMaxQuantity { get; set; }

		[ApiMember(Name = "MaxMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMaxQuantity { get; set; }

		[ApiMember(Name = "MatchMaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMaxQuantity { get; set; }

		[ApiMember(Name = "MatchMaxQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaxQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinQuantity { get; set; }

		[ApiMember(Name = "MaxMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinQuantity { get; set; }

		[ApiMember(Name = "MatchMinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinQuantity { get; set; }

		[ApiMember(Name = "MatchMinQuantityIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinQuantityIncludeNull { get; set; }

		[ApiMember(Name = "MinTo", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinTo { get; set; }

		[ApiMember(Name = "MaxTo", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxTo { get; set; }

		[ApiMember(Name = "MatchTo", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchTo { get; set; }

		[ApiMember(Name = "MatchToIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchToIncludeNull { get; set; }

		[ApiMember(Name = "UnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UnitOfMeasure { get; set; }

		[ApiMember(Name = "UnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "UnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UnitOfMeasureIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductSubscriptionTypeModel : AmARelationshipTableBaseModel
	{
		public int? SortOrder { get; set; }

		public int SubscriptionTypeRepeatTypeID { get; set; }

		public string SubscriptionTypeRepeatTypeKey { get; set; }

		public SubscriptionTypeRepeatTypeModel SubscriptionTypeRepeatType { get; set; }

		public List<SubscriptionModel> Subscriptions { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public ProductModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SubscriptionTypeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SubscriptionTypeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductSubscriptionTypePagedResults : PagedResultsBase<ProductSubscriptionTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductSubscriptionTypeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "SubscriptionTypeRepeatTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SubscriptionTypeRepeatTypeID { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProductSuggestResult : SuggestResultBase
	{
		public string BrandName { get; set; }

		public string ManufacturerPartNumber { get; set; }

		public decimal? TotalPurchasedQuantity { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ProductTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProfanityFilterModel : BaseModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProfanityFilterPagedResults : PagedResultsBase<ProfanityFilterModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ProfanityFilterSearchModel : BaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderContactModel : AmARelationshipTableBaseModel
	{
		public PurchaseOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderContactPagedResults : PagedResultsBase<PurchaseOrderContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderContactSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderEventModel : SalesEventBaseModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderEventPagedResults : PagedResultsBase<PurchaseOrderEventModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderEventSearchModel : SalesEventBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderEventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public PurchaseOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderFilePagedResults : PagedResultsBase<PurchaseOrderFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderItemPagedResults : PagedResultsBase<SalesItemBaseModel`2>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderItemTargetPagedResults : PagedResultsBase<SalesItemTargetBaseModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderModel : SalesCollectionBaseModel<ITypeModel, TypeModel, IPurchaseOrderFileModel, PurchaseOrderFileModel, IPurchaseOrderContactModel, PurchaseOrderContactModel, IPurchaseOrderEventModel, PurchaseOrderEventModel, IAppliedPurchaseOrderDiscountModel, AppliedPurchaseOrderDiscountModel, IAppliedPurchaseOrderItemDiscountModel, AppliedPurchaseOrderItemDiscountModel>
	{
		public decimal? Quantity { get; set; }

		public DateTime? EstimatedReceiptDate { get; set; }

		public List<int> SalesOrderIDs { get; set; }

		public DateTime? ReleaseDate { get; set; }

		public DateTime? ActualReceiptDate { get; set; }

		public bool? FOB { get; set; }

		public string TrackingNumber { get; set; }

		public int? ShipCarrierID { get; set; }

		public string ShipCarrierKey { get; set; }

		public string ShipCarrierName { get; set; }

		public ShipCarrierModel ShipCarrier { get; set; }

		public int? VendorID { get; set; }

		public string VendorKey { get; set; }

		public string VendorName { get; set; }

		public VendorModel Vendor { get; set; }

		public int? InventoryLocationID { get; set; }

		public string InventoryLocationKey { get; set; }

		public string InventoryLocationName { get; set; }

		public InventoryLocationModel InventoryLocation { get; set; }

		public int? SalesGroupID { get; set; }

		public string SalesGroupKey { get; set; }

		public SalesGroupModel SalesGroup { get; set; }

		public List<SalesOrderPurchaseOrderModel> AssociatedSalesOrders { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderPagedResults : PagedResultsBase<PurchaseOrderModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderSearchModel : SalesCollectionBaseSearchModel
	{
		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor Name")]
		public string VendorName { get; set; }

		[ApiMember(Name = "MinSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MinSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFees { get; set; }

		[ApiMember(Name = "MaxSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFees { get; set; }

		[ApiMember(Name = "MatchSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFees { get; set; }

		[ApiMember(Name = "MinSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandling { get; set; }

		[ApiMember(Name = "MaxSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandling { get; set; }

		[ApiMember(Name = "MatchSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandling { get; set; }

		[ApiMember(Name = "MinSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalItems { get; set; }

		[ApiMember(Name = "MaxSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalItems { get; set; }

		[ApiMember(Name = "MatchSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalItems { get; set; }

		[ApiMember(Name = "MinSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShipping { get; set; }

		[ApiMember(Name = "MaxSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShipping { get; set; }

		[ApiMember(Name = "MatchSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShipping { get; set; }

		[ApiMember(Name = "MinSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxes { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxes { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxes { get; set; }

		[ApiMember(Name = "MinTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotal { get; set; }

		[ApiMember(Name = "MaxTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotal { get; set; }

		[ApiMember(Name = "MatchTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotal { get; set; }

		[ApiMember(Name = "MinActualReceiptDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinActualReceiptDate { get; set; }

		[ApiMember(Name = "MaxActualReceiptDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxActualReceiptDate { get; set; }

		[ApiMember(Name = "MatchActualReceiptDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchActualReceiptDate { get; set; }

		[ApiMember(Name = "MatchActualReceiptDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchActualReceiptDateIncludeNull { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "MinDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDueDate { get; set; }

		[ApiMember(Name = "MaxDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDueDate { get; set; }

		[ApiMember(Name = "MatchDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDueDate { get; set; }

		[ApiMember(Name = "MatchDueDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDueDateIncludeNull { get; set; }

		[ApiMember(Name = "MinEstimatedReceiptDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEstimatedReceiptDate { get; set; }

		[ApiMember(Name = "MaxEstimatedReceiptDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEstimatedReceiptDate { get; set; }

		[ApiMember(Name = "MatchEstimatedReceiptDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEstimatedReceiptDate { get; set; }

		[ApiMember(Name = "MatchEstimatedReceiptDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEstimatedReceiptDateIncludeNull { get; set; }

		[ApiMember(Name = "InventoryLocationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? InventoryLocationID { get; set; }

		[ApiMember(Name = "InventoryLocationIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? InventoryLocationIDIncludeNull { get; set; }

		[ApiMember(Name = "MinReleaseDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinReleaseDate { get; set; }

		[ApiMember(Name = "MaxReleaseDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxReleaseDate { get; set; }

		[ApiMember(Name = "MatchReleaseDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchReleaseDate { get; set; }

		[ApiMember(Name = "MatchReleaseDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchReleaseDateIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupID { get; set; }

		[ApiMember(Name = "SalesGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "ShipCarrierID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShipCarrierID { get; set; }

		[ApiMember(Name = "ShipCarrierIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShipCarrierIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShippingContactID { get; set; }

		[ApiMember(Name = "ShippingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingSameAsBilling", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBilling { get; set; }

		[ApiMember(Name = "ShippingSameAsBillingIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBillingIncludeNull { get; set; }

		[ApiMember(Name = "VendorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VendorIDIncludeNull { get; set; }

		[ApiMember(Name = "TrackingNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TrackingNumber { get; set; }

		[ApiMember(Name = "TrackingNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TrackingNumberStrict { get; set; }

		[ApiMember(Name = "TrackingNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TrackingNumberIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderStatePagedResults : PagedResultsBase<StateModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class PurchaseOrderTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class QuestionModel : BaseModel
	{
		public string QuestionTranslationKey { get; set; }

		public int? NextQuestionID { get; set; }

		public string NextQuestionKey { get; set; }

		public QuestionModel NextQuestion { get; set; }

		public List<QuestionOptionModel> Options { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class QuestionOptionModel : BaseModel
	{
		public string OptionTranslationKey { get; set; }

		public bool RequiresAdditionalInformation { get; set; }

		public int QuestionID { get; set; }

		public string QuestionKey { get; set; }

		public QuestionModel Question { get; set; }

		public int? FollowUpQuestionID { get; set; }

		public string FollowUpQuestionKey { get; set; }

		public QuestionModel FollowUpQuestion { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class QuestionOptionPagedResults : PagedResultsBase<QuestionOptionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class QuestionOptionSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "RequiresAdditionalInformation", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequiresAdditionalInformation { get; set; }

		[ApiMember(Name = "QuestionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? QuestionID { get; set; }

		[ApiMember(Name = "FollowUpQuestionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FollowUpQuestionID { get; set; }

		[ApiMember(Name = "FollowUpQuestionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FollowUpQuestionIDIncludeNull { get; set; }

		[ApiMember(Name = "OptionTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OptionTranslationKey { get; set; }

		[ApiMember(Name = "OptionTranslationKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OptionTranslationKeyStrict { get; set; }

		[ApiMember(Name = "OptionTranslationKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OptionTranslationKeyIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class QuestionPagedResults : PagedResultsBase<QuestionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class QuestionSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "NextQuestionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? NextQuestionID { get; set; }

		[ApiMember(Name = "NextQuestionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? NextQuestionIDIncludeNull { get; set; }

		[ApiMember(Name = "QuestionTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string QuestionTranslationKey { get; set; }

		[ApiMember(Name = "QuestionTranslationKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? QuestionTranslationKeyStrict { get; set; }

		[ApiMember(Name = "QuestionTranslationKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? QuestionTranslationKeyIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class QuestionTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class QuickOrderFormProductsModel
	{
		public List<string> Headers { get; set; }

		public List<ProductByCategoryModel> ProductsByCategory { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class RateQuoteModel : NameableBaseModel
	{
		public DateTime? EstimatedDeliveryDate { get; set; }

		public DateTime? TargetShippingDate { get; set; }

		public decimal? Rate { get; set; }

		public long? CartHash { get; set; }

		public DateTime? RateTimestamp { get; set; }

		public bool Selected { get; set; }

		public int ShipCarrierMethodID { get; set; }

		public string ShipCarrierMethodKey { get; set; }

		public string ShipCarrierMethodName { get; set; }

		public ShipCarrierMethodModel ShipCarrierMethod { get; set; }

		public int? CartID { get; set; }

		public int? SampleRequestID { get; set; }

		public int? SalesOrderID { get; set; }

		public int? SalesQuoteID { get; set; }

		public int? SalesInvoiceID { get; set; }

		public int? SalesReturnID { get; set; }

		public int? PurchaseOrderID { get; set; }

		public int ShipCarrierID { get; set; }

		public string ShipCarrierKey { get; set; }

		public string ShipCarrierName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RateQuotePagedResults : PagedResultsBase<RateQuoteModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RateQuoteSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "ShipCarrierID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShipCarrierID { get; set; }

		[ApiMember(Name = "ShipCarrierKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ShipCarrierKey { get; set; }

		[ApiMember(Name = "ShipCarrierName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ShipCarrierName { get; set; }

		[ApiMember(Name = "ShipCarrierMethodKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ShipCarrierMethodKey { get; set; }

		[ApiMember(Name = "ShipCarrierMethodName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ShipCarrierMethodName { get; set; }

		[ApiMember(Name = "Selected", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Selected { get; set; }

		[ApiMember(Name = "ShipCarrierMethodID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShipCarrierMethodID { get; set; }

		[ApiMember(Name = "MinCartHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MinCartHash { get; set; }

		[ApiMember(Name = "MaxCartHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MaxCartHash { get; set; }

		[ApiMember(Name = "MatchCartHash", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MatchCartHash { get; set; }

		[ApiMember(Name = "MatchCartHashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchCartHashIncludeNull { get; set; }

		[ApiMember(Name = "CartID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CartID { get; set; }

		[ApiMember(Name = "CartIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CartIDIncludeNull { get; set; }

		[ApiMember(Name = "MinEstimatedDeliveryDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEstimatedDeliveryDate { get; set; }

		[ApiMember(Name = "MaxEstimatedDeliveryDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEstimatedDeliveryDate { get; set; }

		[ApiMember(Name = "MatchEstimatedDeliveryDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEstimatedDeliveryDate { get; set; }

		[ApiMember(Name = "MatchEstimatedDeliveryDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEstimatedDeliveryDateIncludeNull { get; set; }

		[ApiMember(Name = "PurchaseOrderID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PurchaseOrderID { get; set; }

		[ApiMember(Name = "PurchaseOrderIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PurchaseOrderIDIncludeNull { get; set; }

		[ApiMember(Name = "MinRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRate { get; set; }

		[ApiMember(Name = "MaxRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRate { get; set; }

		[ApiMember(Name = "MatchRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRate { get; set; }

		[ApiMember(Name = "MatchRateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRateIncludeNull { get; set; }

		[ApiMember(Name = "MinRateTimestamp", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinRateTimestamp { get; set; }

		[ApiMember(Name = "MaxRateTimestamp", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxRateTimestamp { get; set; }

		[ApiMember(Name = "MatchRateTimestamp", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchRateTimestamp { get; set; }

		[ApiMember(Name = "MatchRateTimestampIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRateTimestampIncludeNull { get; set; }

		[ApiMember(Name = "SalesInvoiceID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesInvoiceID { get; set; }

		[ApiMember(Name = "SalesInvoiceIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesInvoiceIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesOrderID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesOrderID { get; set; }

		[ApiMember(Name = "SalesOrderIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesOrderIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesQuoteID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesQuoteID { get; set; }

		[ApiMember(Name = "SalesQuoteIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesQuoteIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesReturnID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesReturnID { get; set; }

		[ApiMember(Name = "SalesReturnIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesReturnIDIncludeNull { get; set; }

		[ApiMember(Name = "SampleRequestID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SampleRequestID { get; set; }

		[ApiMember(Name = "SampleRequestIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SampleRequestIDIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetShippingDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinTargetShippingDate { get; set; }

		[ApiMember(Name = "MaxTargetShippingDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxTargetShippingDate { get; set; }

		[ApiMember(Name = "MatchTargetShippingDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchTargetShippingDate { get; set; }

		[ApiMember(Name = "MatchTargetShippingDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetShippingDateIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RecordVersionModel : NameableBaseModel
	{
		[ApiMember(Name = "RecordID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the record that this is a version of, optional/nullable.")]
		public int? RecordID { get; set; }

		[ApiMember(Name = "OriginalPublishDate", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The original publish date, optional/nullable. Normally set by the system when publishing for the first time.")]
		public DateTime? OriginalPublishDate { get; set; }

		[ApiMember(Name = "MostRecentPublishDate", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The most recent publish date, optional/nullable. Normally set by the system when publishing each time.")]
		public DateTime? MostRecentPublishDate { get; set; }

		[ApiMember(Name = "IsDraft", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Whether this version is a draft (pre-first-publish), required to set a value.")]
		public bool IsDraft { get; set; }

		[ApiMember(Name = "SerializedRecord", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "The serialized content of this record, required to set a value.")]
		public string SerializedRecord { get; set; }

		[ApiMember(Name = "PublishedByUserID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the user that last published this version of the record. Set by the server.")]
		public int? PublishedByUserID { get; set; }

		[ApiMember(Name = "PublishedByUserKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the user that last published this version of the record. Set by the server.")]
		public string PublishedByUserKey { get; set; }

		[ApiMember(Name = "PublishedByUser", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The user that last published this version of the record. Set by the server0")]
		public UserModel PublishedByUser { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RecordVersionPagedResults : PagedResultsBase<RecordVersionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RecordVersionSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinEitherPublishDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "The minimum publish date (of either value) to filter to, optional/nullable.")]
		public DateTime? MinEitherPublishDate { get; set; }

		[ApiMember(Name = "MaxEitherPublishDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "The minimum publish (of either value) date to filter to, optional/nullable.")]
		public DateTime? MaxEitherPublishDate { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "IsDraft", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsDraft { get; set; }

		[ApiMember(Name = "MinMostRecentPublishDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMostRecentPublishDate { get; set; }

		[ApiMember(Name = "MaxMostRecentPublishDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMostRecentPublishDate { get; set; }

		[ApiMember(Name = "MatchMostRecentPublishDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMostRecentPublishDate { get; set; }

		[ApiMember(Name = "MatchMostRecentPublishDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMostRecentPublishDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalPublishDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinOriginalPublishDate { get; set; }

		[ApiMember(Name = "MaxOriginalPublishDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxOriginalPublishDate { get; set; }

		[ApiMember(Name = "MatchOriginalPublishDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchOriginalPublishDate { get; set; }

		[ApiMember(Name = "MatchOriginalPublishDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalPublishDateIncludeNull { get; set; }

		[ApiMember(Name = "PublishedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PublishedByUserID { get; set; }

		[ApiMember(Name = "PublishedByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PublishedByUserIDIncludeNull { get; set; }

		[ApiMember(Name = "RecordID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RecordID { get; set; }

		[ApiMember(Name = "RecordIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RecordIDIncludeNull { get; set; }

		[ApiMember(Name = "SerializedRecord", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SerializedRecord { get; set; }

		[ApiMember(Name = "SerializedRecordStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedRecordStrict { get; set; }

		[ApiMember(Name = "SerializedRecordIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SerializedRecordIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RecordVersionTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReferralCodeModel : NameableBaseModel
	{
		public string Code { get; set; }

		public int UserID { get; set; }

		public string UserKey { get; set; }

		public string UserUserName { get; set; }

		public UserModel User { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReferralCodePagedResults : PagedResultsBase<ReferralCodeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReferralCodeSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "Code", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Code { get; set; }

		[ApiMember(Name = "CodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeStrict { get; set; }

		[ApiMember(Name = "CodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReferralCodeStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReferralCodeTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class RegionCurrencyModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public RegionModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CurrencyModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CurrencyModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RegionCurrencyPagedResults : PagedResultsBase<RegionCurrencyModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RegionCurrencySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class RegionImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RegionImagePagedResults : PagedResultsBase<RegionImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RegionImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RegionImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class RegionLanguageModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public RegionModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "LanguageModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public LanguageModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RegionLanguagePagedResults : PagedResultsBase<RegionLanguageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RegionLanguageSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class RegionModel : NameableBaseModel
	{
		[ApiMember(Name = "Code", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Region Code")]
		public string Code { get; set; }

		[ApiMember(Name = "ISO31661", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Region Code ISO 3166-1")]
		public string ISO31661 { get; set; }

		[ApiMember(Name = "ISO31662", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Region Code ISO 3166-2")]
		public string ISO31662 { get; set; }

		[ApiMember(Name = "ISO3166Alpha2", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Region Code ISO 3166 Alpha 2")]
		public string ISO3166Alpha2 { get; set; }

		[ApiMember(Name = "CountryID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Country ID")]
		public int CountryID { get; set; }

		[ApiMember(Name = "CountryKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Country Key")]
		public string CountryKey { get; set; }

		[ApiMember(Name = "CountryName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Country Name")]
		public string CountryName { get; set; }

		[ApiMember(Name = "Country", DataType = "CountryModel", ParameterType = "body", IsRequired = false,
			Description = "Country")]
		public CountryModel Country { get; set; }

		[ApiMember(Name = "Images", DataType = "List<RegionImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<RegionImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "Currencies", DataType = "List<RegionCurrency>", ParameterType = "body", IsRequired = false,
			Description = "A List of currencies tied to this object")]
		public List<RegionCurrencyModel> Currencies { get; set; }

		[ApiMember(Name = "Languages", DataType = "List<RegionLanguage>", ParameterType = "body", IsRequired = false,
			Description = "A List of languages tied to this object")]
		public List<RegionLanguageModel> Languages { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class RegionPagedResults : PagedResultsBase<RegionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class RegionSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "RegionID", DataType = "int", ParameterType = "query", IsRequired = false,
			Description = "The Region ID")]
		public int? RegionID { get; set; }

		[ApiMember(Name = "CountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CountryID { get; set; }

		[ApiMember(Name = "Code", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Code { get; set; }

		[ApiMember(Name = "CodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeStrict { get; set; }

		[ApiMember(Name = "CodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CodeIncludeNull { get; set; }

		[ApiMember(Name = "ISO31661", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO31661 { get; set; }

		[ApiMember(Name = "ISO31661Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO31661Strict { get; set; }

		[ApiMember(Name = "ISO31661IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO31661IncludeNull { get; set; }

		[ApiMember(Name = "ISO31662", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO31662 { get; set; }

		[ApiMember(Name = "ISO31662Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO31662Strict { get; set; }

		[ApiMember(Name = "ISO31662IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO31662IncludeNull { get; set; }

		[ApiMember(Name = "ISO3166Alpha2", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ISO3166Alpha2 { get; set; }

		[ApiMember(Name = "ISO3166Alpha2Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO3166Alpha2Strict { get; set; }

		[ApiMember(Name = "ISO3166Alpha2IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ISO3166Alpha2IncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class RepeatTypeModel : TypableBaseModel
	{
		public int? InitialBonusBillingPeriods { get; set; }

		public int? RepeatableBillingPeriods { get; set; }

		public List<SubscriptionTypeRepeatTypeModel> SubscriptionTypeRepeatTypes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RepeatTypePagedResults : PagedResultsBase<RepeatTypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RepeatTypeSearchModel : TypableBaseSearchModel
	{
		[ApiMember(Name = "MinInitialBonusBillingPeriods", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinInitialBonusBillingPeriods { get; set; }

		[ApiMember(Name = "MaxInitialBonusBillingPeriods", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxInitialBonusBillingPeriods { get; set; }

		[ApiMember(Name = "MatchInitialBonusBillingPeriods", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchInitialBonusBillingPeriods { get; set; }

		[ApiMember(Name = "MatchInitialBonusBillingPeriodsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchInitialBonusBillingPeriodsIncludeNull { get; set; }

		[ApiMember(Name = "MinRepeatableBillingPeriods", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinRepeatableBillingPeriods { get; set; }

		[ApiMember(Name = "MaxRepeatableBillingPeriods", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxRepeatableBillingPeriods { get; set; }

		[ApiMember(Name = "MatchRepeatableBillingPeriods", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchRepeatableBillingPeriods { get; set; }

		[ApiMember(Name = "MatchRepeatableBillingPeriodsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRepeatableBillingPeriodsIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReportTypeModel : TypableBaseModel
	{
		public byte[] Template { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReportTypePagedResults : PagedResultsBase<ReportTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReportTypeSearchModel : TypableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ReviewModel : NameableBaseModel
	{
		public int? SortOrder { get; set; }

		public decimal Value { get; set; }

		public string Comment { get; set; }

		public bool Approved { get; set; }

		public DateTime? ApprovedDate { get; set; }

		public string Title { get; set; }

		public string Location { get; set; }

		public int SubmittedByUserID { get; set; }

		public string SubmittedByUserKey { get; set; }

		public UserModel SubmittedByUser { get; set; }

		public string SubmittedByUserUserName { get; set; }

		public int? ApprovedByUserID { get; set; }

		public string ApprovedByUserKey { get; set; }

		public UserModel ApprovedByUser { get; set; }

		public string ApprovedByUserUserName { get; set; }

		public int? CategoryID { get; set; }

		public CategoryModel Category { get; set; }

		public string CategoryKey { get; set; }

		public string CategoryName { get; set; }

		public int? ManufacturerID { get; set; }

		public ManufacturerModel Manufacturer { get; set; }

		public string ManufacturerKey { get; set; }

		public string ManufacturerName { get; set; }

		public int? ProductID { get; set; }

		public ProductModel Product { get; set; }

		public string ProductKey { get; set; }

		public string ProductName { get; set; }

		public int? StoreID { get; set; }

		public StoreModel Store { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public int? UserID { get; set; }

		public UserModel User { get; set; }

		public string UserKey { get; set; }

		public string UserUserName { get; set; }

		public int? VendorID { get; set; }

		public VendorModel Vendor { get; set; }

		public string VendorKey { get; set; }

		public string VendorName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReviewPagedResults : PagedResultsBase<ReviewModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReviewSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "Approved", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Approved { get; set; }

		[ApiMember(Name = "MinValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinValue { get; set; }

		[ApiMember(Name = "MaxValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxValue { get; set; }

		[ApiMember(Name = "MatchValue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchValue { get; set; }

		[ApiMember(Name = "SubmittedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SubmittedByUserID { get; set; }

		[ApiMember(Name = "ApprovedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ApprovedByUserID { get; set; }

		[ApiMember(Name = "ApprovedByUserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ApprovedByUserIDIncludeNull { get; set; }

		[ApiMember(Name = "MinApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinApprovedDate { get; set; }

		[ApiMember(Name = "MaxApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxApprovedDate { get; set; }

		[ApiMember(Name = "MatchApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchApprovedDate { get; set; }

		[ApiMember(Name = "MatchApprovedDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchApprovedDateIncludeNull { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ManufacturerIDIncludeNull { get; set; }

		[ApiMember(Name = "ProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "StoreID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "VendorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VendorIDIncludeNull { get; set; }

		[ApiMember(Name = "Comment", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Comment { get; set; }

		[ApiMember(Name = "CommentStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CommentStrict { get; set; }

		[ApiMember(Name = "CommentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CommentIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "Title", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Title { get; set; }

		[ApiMember(Name = "TitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TitleStrict { get; set; }

		[ApiMember(Name = "TitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TitleIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ReviewTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RoleForAccountModel
	{
		public int RoleId { get; set; }

		public int AccountId { get; set; }

		public string Name { get; set; }

		public DateTime? StartDate { get; set; }

		public DateTime? EndDate { get; set; }
	}
#endif

#if NOTSTOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RoleForAccountModel[]
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RoleForUserModel
	{
		public int RoleId { get; set; }

		public int UserId { get; set; }

		public string Name { get; set; }

		public DateTime? StartDate { get; set; }

		public DateTime? EndDate { get; set; }
	}
#endif

#if NOTSTOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RoleForUserModel[]
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RoleUserModel : BaseModel
	{
		public List<PermissionModel> Permissions { get; set; }
	}
#endif

#if NOTSTOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class RoleUserModel[]
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesEventBaseModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = false,
			Description = "Model for Type of this object, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Key for the Type of this object, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Name for the Type of this object, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? OldStateID { get; set; }

		public int? NewStateID { get; set; }

		public int? OldStatusID { get; set; }

		public int? NewStatusID { get; set; }

		public int? OldTypeID { get; set; }

		public int? NewTypeID { get; set; }

		public long? OldHash { get; set; }

		public long? NewHash { get; set; }

		public string OldRecordSerialized { get; set; }

		public string NewRecordSerialized { get; set; }

		public int MasterID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesEventBaseSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		public int? MasterID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesGroupModel : BaseModel
	{
		public int? BillingContactID { get; set; }

		public string BillingContactKey { get; set; }

		public ContactModel BillingContact { get; set; }

		public List<SalesQuoteModel> SalesQuoteRequestMasters { get; set; }

		public List<SalesQuoteModel> SalesQuoteRequestSubs { get; set; }

		public List<SalesQuoteModel> SalesQuoteResponseMasters { get; set; }

		public List<SalesQuoteModel> SalesQuoteResponseSubs { get; set; }

		public List<SalesOrderModel> SalesOrderMasters { get; set; }

		public List<SalesOrderModel> SubSalesOrders { get; set; }

		public List<PurchaseOrderModel> PurchaseOrders { get; set; }

		public List<SalesInvoiceModel> SalesInvoices { get; set; }

		public List<SalesReturnModel> SalesReturns { get; set; }

		public List<SampleRequestModel> SampleRequests { get; set; }

		public int? AccountID { get; set; }

		public string AccountKey { get; set; }

		public string AccountName { get; set; }

		public AccountModel Account { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesGroupPagedResults : PagedResultsBase<SalesGroupModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesGroupSearchModel : BaseSearchModel
	{
		public string AccountIDOrCustomKeyOrName { get; set; }

		public string BillingContactKey { get; set; }

		public int? SalesQuoteID { get; set; }

		public string SalesQuoteKey { get; set; }

		public int? SalesOrderID { get; set; }

		public string SalesOrderKey { get; set; }

		public int? PurchaseOrderID { get; set; }

		public string PurchaseOrderKey { get; set; }

		public int? SalesInvoiceID { get; set; }

		public string SalesInvoiceKey { get; set; }

		public int? SalesReturnID { get; set; }

		public string SalesReturnKey { get; set; }

		public int? SampleRequestID { get; set; }

		public string SampleRequestKey { get; set; }

		public DateTime? MinDate { get; set; }

		public DateTime? MaxDate { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceContactModel : AmARelationshipTableBaseModel
	{
		public SalesInvoiceModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceContactPagedResults : PagedResultsBase<SalesInvoiceContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceContactSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceEventModel : SalesEventBaseModel
	{
		public decimal? OldBalanceDue { get; set; }

		public decimal? NewBalanceDue { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceEventPagedResults : PagedResultsBase<SalesInvoiceEventModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceEventSearchModel : SalesEventBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceEventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesInvoiceModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceFilePagedResults : PagedResultsBase<SalesInvoiceFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceItemPagedResults : PagedResultsBase<SalesItemBaseModel`2>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceItemTargetPagedResults : PagedResultsBase<SalesItemTargetBaseModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceModel : SalesCollectionBaseModel<ITypeModel, TypeModel, ISalesInvoiceFileModel, SalesInvoiceFileModel, ISalesInvoiceContactModel, SalesInvoiceContactModel, ISalesInvoiceEventModel, SalesInvoiceEventModel, IAppliedSalesInvoiceDiscountModel, AppliedSalesInvoiceDiscountModel, IAppliedSalesInvoiceItemDiscountModel, AppliedSalesInvoiceItemDiscountModel>
	{
		public int? SalesGroupID { get; set; }

		public string SalesGroupKey { get; set; }

		public SalesGroupModel SalesGroup { get; set; }

		public List<SalesOrderSalesInvoiceModel> AssociatedSalesOrders { get; set; }

		public List<SalesInvoicePaymentModel> SalesInvoicePayments { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoicePagedResults : PagedResultsBase<SalesInvoiceModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoicePaymentModel : AmARelationshipTableBaseModel
	{
		public SalesInvoiceModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "PaymentModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public PaymentModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoicePaymentPagedResults : PagedResultsBase<SalesInvoicePaymentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoicePaymentSearchModel : AmARelationshipTableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceSearchModel : SalesCollectionBaseSearchModel
	{
		[ApiMember(Name = "MinSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MinSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFees { get; set; }

		[ApiMember(Name = "MaxSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFees { get; set; }

		[ApiMember(Name = "MatchSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFees { get; set; }

		[ApiMember(Name = "MinSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandling { get; set; }

		[ApiMember(Name = "MaxSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandling { get; set; }

		[ApiMember(Name = "MatchSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandling { get; set; }

		[ApiMember(Name = "MinSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalItems { get; set; }

		[ApiMember(Name = "MaxSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalItems { get; set; }

		[ApiMember(Name = "MatchSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalItems { get; set; }

		[ApiMember(Name = "MinSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShipping { get; set; }

		[ApiMember(Name = "MaxSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShipping { get; set; }

		[ApiMember(Name = "MatchSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShipping { get; set; }

		[ApiMember(Name = "MinSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxes { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxes { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxes { get; set; }

		[ApiMember(Name = "MinTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotal { get; set; }

		[ApiMember(Name = "MaxTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotal { get; set; }

		[ApiMember(Name = "MatchTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotal { get; set; }

		[ApiMember(Name = "MinBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinBalanceDue { get; set; }

		[ApiMember(Name = "MaxBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxBalanceDue { get; set; }

		[ApiMember(Name = "MatchBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchBalanceDue { get; set; }

		[ApiMember(Name = "MatchBalanceDueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchBalanceDueIncludeNull { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "MinDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDueDate { get; set; }

		[ApiMember(Name = "MaxDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDueDate { get; set; }

		[ApiMember(Name = "MatchDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDueDate { get; set; }

		[ApiMember(Name = "MatchDueDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDueDateIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupID { get; set; }

		[ApiMember(Name = "SalesGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShippingContactID { get; set; }

		[ApiMember(Name = "ShippingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingSameAsBilling", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBilling { get; set; }

		[ApiMember(Name = "ShippingSameAsBillingIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBillingIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceStatePagedResults : PagedResultsBase<StateModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesInvoiceTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesItemBaseSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		public string Sku { get; set; }

		public int? OriginalCurrencyID { get; set; }

		public int? SellingCurrencyID { get; set; }

		public string UserExternalID { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }

		public string MasterTypeName { get; set; }

		public Guid? CartSessionID { get; set; }

		public string TrackingNumber { get; set; }

		public int? CartUserID { get; set; }

		public string ForceUniqueLineItemKey { get; set; }

		public bool? ForceUniqueLineItemKeyMatchNulls { get; set; }

		public decimal? MinQuantity { get; set; }

		public decimal? MaxQuantity { get; set; }

		public decimal? MatchQuantity { get; set; }

		public decimal? MinUnitCorePrice { get; set; }

		public decimal? MaxUnitCorePrice { get; set; }

		public decimal? MatchUnitCorePrice { get; set; }

		public bool? OriginalCurrencyIDIncludeNull { get; set; }

		public bool? ProductIDIncludeNull { get; set; }

		public decimal? MinQuantityBackOrdered { get; set; }

		public decimal? MaxQuantityBackOrdered { get; set; }

		public decimal? MatchQuantityBackOrdered { get; set; }

		public bool? MatchQuantityBackOrderedIncludeNull { get; set; }

		public decimal? MinQuantityPreSold { get; set; }

		public decimal? MaxQuantityPreSold { get; set; }

		public decimal? MatchQuantityPreSold { get; set; }

		public bool? MatchQuantityPreSoldIncludeNull { get; set; }

		public bool? SellingCurrencyIDIncludeNull { get; set; }

		public decimal? MinUnitCorePriceInSellingCurrency { get; set; }

		public decimal? MaxUnitCorePriceInSellingCurrency { get; set; }

		public decimal? MatchUnitCorePriceInSellingCurrency { get; set; }

		public bool? MatchUnitCorePriceInSellingCurrencyIncludeNull { get; set; }

		public decimal? MinUnitSoldPrice { get; set; }

		public decimal? MaxUnitSoldPrice { get; set; }

		public decimal? MatchUnitSoldPrice { get; set; }

		public bool? MatchUnitSoldPriceIncludeNull { get; set; }

		public decimal? MinUnitSoldPriceInSellingCurrency { get; set; }

		public decimal? MaxUnitSoldPriceInSellingCurrency { get; set; }

		public decimal? MatchUnitSoldPriceInSellingCurrency { get; set; }

		public bool? MatchUnitSoldPriceInSellingCurrencyIncludeNull { get; set; }

		public bool? ForceUniqueLineItemKeyStrict { get; set; }

		public bool? ForceUniqueLineItemKeyIncludeNull { get; set; }

		public bool? SkuStrict { get; set; }

		public bool? SkuIncludeNull { get; set; }

		public string UnitOfMeasure { get; set; }

		public bool? UnitOfMeasureStrict { get; set; }

		public bool? UnitOfMeasureIncludeNull { get; set; }

		public decimal? MinUnitSoldPriceModifier { get; set; }

		public decimal? MaxUnitSoldPriceModifier { get; set; }

		public decimal? MatchUnitSoldPriceModifier { get; set; }

		public bool? MatchUnitSoldPriceModifierIncludeNull { get; set; }

		public int? MinUnitSoldPriceModifierMode { get; set; }

		public int? MaxUnitSoldPriceModifierMode { get; set; }

		public int? MatchUnitSoldPriceModifierMode { get; set; }

		public bool? MatchUnitSoldPriceModifierModeIncludeNull { get; set; }

		public DateTime? MinDateReceived { get; set; }

		public DateTime? MaxDateReceived { get; set; }

		public DateTime? MatchDateReceived { get; set; }

		public bool? MatchDateReceivedIncludeNull { get; set; }

		public decimal? MinRestockingFeeAmount { get; set; }

		public decimal? MaxRestockingFeeAmount { get; set; }

		public decimal? MatchRestockingFeeAmount { get; set; }

		public bool? MatchRestockingFeeAmountIncludeNull { get; set; }

		public int? SalesReturnReasonID { get; set; }

		public bool? SalesReturnReasonIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesItemTargetBaseModel : BaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = false,
			Description = "Model for Type of this object, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Key for the Type of this object, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Name for the Type of this object, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "Quantity", DataType = "decimal", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal Quantity { get; set; }

		[ApiMember(Name = "NothingToShip", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool NothingToShip { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int MasterID { get; set; }

		[ApiMember(Name = "DestinationContactID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int DestinationContactID { get; set; }

		[ApiMember(Name = "DestinationContactKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string DestinationContactKey { get; set; }

		[ApiMember(Name = "DestinationContact", DataType = "ContactModel", ParameterType = "body", IsRequired = false,
			Description = "")]
		public ContactModel DestinationContact { get; set; }

		[ApiMember(Name = "OriginProductInventoryLocationSectionID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? OriginProductInventoryLocationSectionID { get; set; }

		[ApiMember(Name = "OriginProductInventoryLocationSectionKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string OriginProductInventoryLocationSectionKey { get; set; }

		[ApiMember(Name = "OriginProductInventoryLocationSection", DataType = "ProductInventoryLocationSectionModel", ParameterType = "body", IsRequired = false,
			Description = "")]
		public ProductInventoryLocationSectionModel OriginProductInventoryLocationSection { get; set; }

		[ApiMember(Name = "OriginStoreProductID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? OriginStoreProductID { get; set; }

		[ApiMember(Name = "OriginStoreProductKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string OriginStoreProductKey { get; set; }

		[ApiMember(Name = "OriginStoreProduct", DataType = "StoreProductModel", ParameterType = "body", IsRequired = false,
			Description = "")]
		public StoreProductModel OriginStoreProduct { get; set; }

		[ApiMember(Name = "BrandProductID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? BrandProductID { get; set; }

		[ApiMember(Name = "BrandProductKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string BrandProductKey { get; set; }

		[ApiMember(Name = "BrandProduct", DataType = "StoreProductModel", ParameterType = "body", IsRequired = false,
			Description = "")]
		public BrandProductModel BrandProduct { get; set; }

		[ApiMember(Name = "OriginVendorProductID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? OriginVendorProductID { get; set; }

		[ApiMember(Name = "OriginVendorProductKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string OriginVendorProductKey { get; set; }

		[ApiMember(Name = "OriginVendorProduct", DataType = "VendorProductModel", ParameterType = "body", IsRequired = false,
			Description = "")]
		public VendorProductModel OriginVendorProduct { get; set; }

		[ApiMember(Name = "SelectedRateQuoteID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SelectedRateQuoteID { get; set; }

		[ApiMember(Name = "SelectedRateQuoteKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SelectedRateQuoteKey { get; set; }

		[ApiMember(Name = "SelectedRateQuoteName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SelectedRateQuoteName { get; set; }

		[ApiMember(Name = "SelectedRateQuote", DataType = "RateQuoteModel", ParameterType = "body", IsRequired = false,
			Description = "")]
		public RateQuoteModel SelectedRateQuote { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesItemTargetBaseSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "NothingToShip", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? NothingToShip { get; set; }

		[ApiMember(Name = "MinQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinQuantity { get; set; }

		[ApiMember(Name = "MaxQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxQuantity { get; set; }

		[ApiMember(Name = "MatchQuantity", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchQuantity { get; set; }

		[ApiMember(Name = "DestinationContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? DestinationContactID { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "BrandProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BrandProductID { get; set; }

		[ApiMember(Name = "BrandProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandProductIDIncludeNull { get; set; }

		[ApiMember(Name = "OriginProductInventoryLocationSectionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? OriginProductInventoryLocationSectionID { get; set; }

		[ApiMember(Name = "OriginProductInventoryLocationSectionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginProductInventoryLocationSectionIDIncludeNull { get; set; }

		[ApiMember(Name = "OriginStoreProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? OriginStoreProductID { get; set; }

		[ApiMember(Name = "OriginStoreProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginStoreProductIDIncludeNull { get; set; }

		[ApiMember(Name = "OriginVendorProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? OriginVendorProductID { get; set; }

		[ApiMember(Name = "OriginVendorProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginVendorProductIDIncludeNull { get; set; }

		[ApiMember(Name = "SelectedRateQuoteID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SelectedRateQuoteID { get; set; }

		[ApiMember(Name = "SelectedRateQuoteIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SelectedRateQuoteIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesItemTargetTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderContactModel : AmARelationshipTableBaseModel
	{
		public SalesOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderContactPagedResults : PagedResultsBase<SalesOrderContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderContactSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderEventModel : SalesEventBaseModel
	{
		public decimal? OldBalanceDue { get; set; }

		public decimal? NewBalanceDue { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderEventPagedResults : PagedResultsBase<SalesOrderEventModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderEventSearchModel : SalesEventBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderEventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderFilePagedResults : PagedResultsBase<SalesOrderFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderItemPagedResults : PagedResultsBase<SalesItemBaseModel`2>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderItemTargetPagedResults : PagedResultsBase<SalesItemTargetBaseModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesOrderModel : SalesCollectionBaseModel<ITypeModel, TypeModel, ISalesOrderFileModel, SalesOrderFileModel, ISalesOrderContactModel, SalesOrderContactModel, ISalesOrderEventModel, SalesOrderEventModel, IAppliedSalesOrderDiscountModel, AppliedSalesOrderDiscountModel, IAppliedSalesOrderItemDiscountModel, AppliedSalesOrderItemDiscountModel>
	{
		public string TrackingNumber { get; set; }

		public string TaxTransactionID { get; set; }

		public string PaymentTransactionID { get; set; }

		public string PurchaseOrderNumber { get; set; }

		public DateTime? ActualShipDate { get; set; }

		public DateTime? OrderApprovedDate { get; set; }

		public DateTime? OrderCommitmentDate { get; set; }

		public DateTime? RequestedShipDate { get; set; }

		public DateTime? RequiredShipDate { get; set; }

		public int? SalesGroupAsMasterID { get; set; }

		public string SalesGroupAsMasterKey { get; set; }

		public SalesGroupModel SalesGroupAsMaster { get; set; }

		public int? SalesGroupAsSubID { get; set; }

		public string SalesGroupAsSubKey { get; set; }

		public SalesGroupModel SalesGroupAsSub { get; set; }

		public int? InventoryLocationID { get; set; }

		public string InventoryLocationKey { get; set; }

		public string InventoryLocationName { get; set; }

		public InventoryLocationModel InventoryLocation { get; set; }

		public List<SalesOrderPurchaseOrderModel> AssociatedPurchaseOrders { get; set; }

		public List<SalesOrderSalesInvoiceModel> AssociatedSalesInvoices { get; set; }

		public List<SalesQuoteSalesOrderModel> AssociatedSalesQuotes { get; set; }

		public List<SalesReturnSalesOrderModel> AssociatedSalesReturns { get; set; }

		public List<SalesOrderPaymentModel> SalesOrderPayments { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderPagedResults : PagedResultsBase<SalesOrderModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesOrderPaymentModel : AmARelationshipTableBaseModel
	{
		public SalesOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "PaymentModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public PaymentModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderPaymentPagedResults : PagedResultsBase<SalesOrderPaymentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderPaymentSearchModel : AmARelationshipTableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesOrderPurchaseOrderModel : AmARelationshipTableBaseModel
	{
		public SalesOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "PurchaseOrderModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public PurchaseOrderModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderPurchaseOrderPagedResults : PagedResultsBase<SalesOrderPurchaseOrderModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderPurchaseOrderSearchModel : AmARelationshipTableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesOrderSalesInvoiceModel : AmARelationshipTableBaseModel
	{
		public SalesOrderModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SalesInvoiceModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SalesInvoiceModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderSalesInvoicePagedResults : PagedResultsBase<SalesOrderSalesInvoiceModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderSalesInvoiceSearchModel : AmARelationshipTableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderSearchModel : SalesCollectionBaseSearchModel
	{
		[ApiMember(Name = "HasSalesGroupAsMaster", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasSalesGroupAsMaster { get; set; }

		[ApiMember(Name = "HasSalesGroupAsSub", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasSalesGroupAsSub { get; set; }

		[ApiMember(Name = "MinSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MinSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFees { get; set; }

		[ApiMember(Name = "MaxSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFees { get; set; }

		[ApiMember(Name = "MatchSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFees { get; set; }

		[ApiMember(Name = "MinSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandling { get; set; }

		[ApiMember(Name = "MaxSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandling { get; set; }

		[ApiMember(Name = "MatchSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandling { get; set; }

		[ApiMember(Name = "MinSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalItems { get; set; }

		[ApiMember(Name = "MaxSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalItems { get; set; }

		[ApiMember(Name = "MatchSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalItems { get; set; }

		[ApiMember(Name = "MinSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShipping { get; set; }

		[ApiMember(Name = "MaxSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShipping { get; set; }

		[ApiMember(Name = "MatchSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShipping { get; set; }

		[ApiMember(Name = "MinSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxes { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxes { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxes { get; set; }

		[ApiMember(Name = "MinTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotal { get; set; }

		[ApiMember(Name = "MaxTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotal { get; set; }

		[ApiMember(Name = "MatchTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotal { get; set; }

		[ApiMember(Name = "MinActualShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinActualShipDate { get; set; }

		[ApiMember(Name = "MaxActualShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxActualShipDate { get; set; }

		[ApiMember(Name = "MatchActualShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchActualShipDate { get; set; }

		[ApiMember(Name = "MatchActualShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchActualShipDateIncludeNull { get; set; }

		[ApiMember(Name = "MinBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinBalanceDue { get; set; }

		[ApiMember(Name = "MaxBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxBalanceDue { get; set; }

		[ApiMember(Name = "MatchBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchBalanceDue { get; set; }

		[ApiMember(Name = "MatchBalanceDueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchBalanceDueIncludeNull { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "MinDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDueDate { get; set; }

		[ApiMember(Name = "MaxDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDueDate { get; set; }

		[ApiMember(Name = "MatchDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDueDate { get; set; }

		[ApiMember(Name = "MatchDueDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDueDateIncludeNull { get; set; }

		[ApiMember(Name = "InventoryLocationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? InventoryLocationID { get; set; }

		[ApiMember(Name = "InventoryLocationIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? InventoryLocationIDIncludeNull { get; set; }

		[ApiMember(Name = "MinOrderApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinOrderApprovedDate { get; set; }

		[ApiMember(Name = "MaxOrderApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxOrderApprovedDate { get; set; }

		[ApiMember(Name = "MatchOrderApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchOrderApprovedDate { get; set; }

		[ApiMember(Name = "MatchOrderApprovedDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOrderApprovedDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOrderCommitmentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinOrderCommitmentDate { get; set; }

		[ApiMember(Name = "MaxOrderCommitmentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxOrderCommitmentDate { get; set; }

		[ApiMember(Name = "MatchOrderCommitmentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchOrderCommitmentDate { get; set; }

		[ApiMember(Name = "MatchOrderCommitmentDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOrderCommitmentDateIncludeNull { get; set; }

		[ApiMember(Name = "MinRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinRequestedShipDate { get; set; }

		[ApiMember(Name = "MaxRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxRequestedShipDate { get; set; }

		[ApiMember(Name = "MatchRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchRequestedShipDate { get; set; }

		[ApiMember(Name = "MatchRequestedShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRequestedShipDateIncludeNull { get; set; }

		[ApiMember(Name = "MinRequiredShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinRequiredShipDate { get; set; }

		[ApiMember(Name = "MaxRequiredShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxRequiredShipDate { get; set; }

		[ApiMember(Name = "MatchRequiredShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchRequiredShipDate { get; set; }

		[ApiMember(Name = "MatchRequiredShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRequiredShipDateIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupAsMasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupAsMasterID { get; set; }

		[ApiMember(Name = "SalesGroupAsMasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupAsMasterIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupAsSubID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupAsSubID { get; set; }

		[ApiMember(Name = "SalesGroupAsSubIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupAsSubIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShippingContactID { get; set; }

		[ApiMember(Name = "ShippingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingSameAsBilling", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBilling { get; set; }

		[ApiMember(Name = "ShippingSameAsBillingIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBillingIncludeNull { get; set; }

		[ApiMember(Name = "PaymentTransactionID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PaymentTransactionID { get; set; }

		[ApiMember(Name = "PaymentTransactionIDStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PaymentTransactionIDStrict { get; set; }

		[ApiMember(Name = "PaymentTransactionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PaymentTransactionIDIncludeNull { get; set; }

		[ApiMember(Name = "PurchaseOrderNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PurchaseOrderNumber { get; set; }

		[ApiMember(Name = "PurchaseOrderNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PurchaseOrderNumberStrict { get; set; }

		[ApiMember(Name = "PurchaseOrderNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PurchaseOrderNumberIncludeNull { get; set; }

		[ApiMember(Name = "TaxTransactionID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TaxTransactionID { get; set; }

		[ApiMember(Name = "TaxTransactionIDStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxTransactionIDStrict { get; set; }

		[ApiMember(Name = "TaxTransactionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxTransactionIDIncludeNull { get; set; }

		[ApiMember(Name = "TrackingNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TrackingNumber { get; set; }

		[ApiMember(Name = "TrackingNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TrackingNumberStrict { get; set; }

		[ApiMember(Name = "TrackingNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TrackingNumberIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderShippingModel : BaseModel
	{
		public string CarrierName { get; set; }

		public int? CarrierID { get; set; }

		public string CarrierMethodName { get; set; }

		public int? CarrierMethodID { get; set; }

		public string TrackingNumber { get; set; }

		public DateTime? EstimatedDeliveryDate { get; set; }

		public DateTime? ArrivalDate { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderStatePagedResults : PagedResultsBase<StateModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesOrderTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteCategoryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesQuoteModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteCategoryPagedResults : PagedResultsBase<SalesQuoteCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteContactModel : AmARelationshipTableBaseModel
	{
		public SalesQuoteModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteContactPagedResults : PagedResultsBase<SalesQuoteContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteContactSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteEventModel : SalesEventBaseModel
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteEventPagedResults : PagedResultsBase<SalesQuoteEventModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteEventSearchModel : SalesEventBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteEventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesQuoteModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteFilePagedResults : PagedResultsBase<SalesQuoteFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteItemPagedResults : PagedResultsBase<SalesItemBaseModel`2>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteItemTargetPagedResults : PagedResultsBase<SalesItemTargetBaseModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteModel : SalesCollectionBaseModel<ITypeModel, TypeModel, ISalesQuoteFileModel, SalesQuoteFileModel, ISalesQuoteContactModel, SalesQuoteContactModel, ISalesQuoteEventModel, SalesQuoteEventModel, IAppliedSalesQuoteDiscountModel, AppliedSalesQuoteDiscountModel, IAppliedSalesQuoteItemDiscountModel, AppliedSalesQuoteItemDiscountModel>
	{
		public DateTime? RequestedShipDate { get; set; }

		public decimal? SubtotalDiscountsModifier { get; set; }

		public int? SubtotalDiscountsModifierMode { get; set; }

		public decimal? SubtotalFeesModifier { get; set; }

		public int? SubtotalFeesModifierMode { get; set; }

		public decimal? SubtotalHandlingModifier { get; set; }

		public int? SubtotalHandlingModifierMode { get; set; }

		public decimal? SubtotalShippingModifier { get; set; }

		public int? SubtotalShippingModifierMode { get; set; }

		public decimal? SubtotalTaxesModifier { get; set; }

		public int? SubtotalTaxesModifierMode { get; set; }

		public int? RateQuoteID { get; set; }

		public string RateQuoteKey { get; set; }

		public string RateQuoteName { get; set; }

		public RateQuoteModel RateQuote { get; set; }

		public int? SalesGroupAsRequestMasterID { get; set; }

		public string SalesGroupAsRequestMasterKey { get; set; }

		public SalesGroupModel SalesGroupAsRequestMaster { get; set; }

		public int? SalesGroupAsRequestSubID { get; set; }

		public string SalesGroupAsRequestSubKey { get; set; }

		public SalesGroupModel SalesGroupAsRequestSub { get; set; }

		public int? SalesGroupAsResponseMasterID { get; set; }

		public string SalesGroupAsResponseMasterKey { get; set; }

		public SalesGroupModel SalesGroupAsResponseMaster { get; set; }

		public int? SalesGroupAsResponseSubID { get; set; }

		public string SalesGroupAsResponseSubKey { get; set; }

		public SalesGroupModel SalesGroupAsResponseSub { get; set; }

		public int? ResponseAsStoreID { get; set; }

		public string ResponseAsStoreKey { get; set; }

		public string ResponseAsStoreName { get; set; }

		public StoreModel ResponseAsStore { get; set; }

		public int? ResponseAsVendorID { get; set; }

		public string ResponseAsVendorKey { get; set; }

		public string ResponseAsVendorName { get; set; }

		public VendorModel ResponseAsVendor { get; set; }

		public List<SalesQuoteCategoryModel> SalesQuoteCategories { get; set; }

		public List<SalesQuoteSalesOrderModel> AssociatedSalesOrders { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuotePagedResults : PagedResultsBase<SalesQuoteModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteSalesOrderModel : AmARelationshipTableBaseModel
	{
		public SalesQuoteModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SalesOrderModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SalesOrderModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteSalesOrderPagedResults : PagedResultsBase<SalesQuoteSalesOrderModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteSalesOrderSearchModel : AmARelationshipTableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteSearchModel : SalesCollectionBaseSearchModel
	{
		[ApiMember(Name = "CategoryIDs", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] CategoryIDs { get; set; }

		[ApiMember(Name = "HasSalesGroupAsMaster", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasSalesGroupAsMaster { get; set; }

		[ApiMember(Name = "HasSalesGroupAsSub", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasSalesGroupAsSub { get; set; }

		[ApiMember(Name = "HasSalesGroupAsResponse", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasSalesGroupAsResponse { get; set; }

		[ApiMember(Name = "HasSalesGroupAsRequest", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasSalesGroupAsRequest { get; set; }

		[ApiMember(Name = "MinSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MinSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFees { get; set; }

		[ApiMember(Name = "MaxSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFees { get; set; }

		[ApiMember(Name = "MatchSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFees { get; set; }

		[ApiMember(Name = "MinSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandling { get; set; }

		[ApiMember(Name = "MaxSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandling { get; set; }

		[ApiMember(Name = "MatchSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandling { get; set; }

		[ApiMember(Name = "MinSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalItems { get; set; }

		[ApiMember(Name = "MaxSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalItems { get; set; }

		[ApiMember(Name = "MatchSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalItems { get; set; }

		[ApiMember(Name = "MinSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShipping { get; set; }

		[ApiMember(Name = "MaxSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShipping { get; set; }

		[ApiMember(Name = "MatchSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShipping { get; set; }

		[ApiMember(Name = "MinSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxes { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxes { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxes { get; set; }

		[ApiMember(Name = "MinTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotal { get; set; }

		[ApiMember(Name = "MaxTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotal { get; set; }

		[ApiMember(Name = "MatchTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotal { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "MinDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDueDate { get; set; }

		[ApiMember(Name = "MaxDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDueDate { get; set; }

		[ApiMember(Name = "MatchDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDueDate { get; set; }

		[ApiMember(Name = "MatchDueDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDueDateIncludeNull { get; set; }

		[ApiMember(Name = "MinRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinRequestedShipDate { get; set; }

		[ApiMember(Name = "MaxRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxRequestedShipDate { get; set; }

		[ApiMember(Name = "MatchRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchRequestedShipDate { get; set; }

		[ApiMember(Name = "MatchRequestedShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRequestedShipDateIncludeNull { get; set; }

		[ApiMember(Name = "ResponseAsStoreID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ResponseAsStoreID { get; set; }

		[ApiMember(Name = "ResponseAsStoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ResponseAsStoreIDIncludeNull { get; set; }

		[ApiMember(Name = "ResponseAsVendorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ResponseAsVendorID { get; set; }

		[ApiMember(Name = "ResponseAsVendorIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ResponseAsVendorIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupAsRequestMasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupAsRequestMasterID { get; set; }

		[ApiMember(Name = "SalesGroupAsRequestMasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupAsRequestMasterIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupAsRequestSubID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupAsRequestSubID { get; set; }

		[ApiMember(Name = "SalesGroupAsRequestSubIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupAsRequestSubIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupAsResponseMasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupAsResponseMasterID { get; set; }

		[ApiMember(Name = "SalesGroupAsResponseMasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupAsResponseMasterIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupAsResponseSubID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupAsResponseSubID { get; set; }

		[ApiMember(Name = "SalesGroupAsResponseSubIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupAsResponseSubIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShippingContactID { get; set; }

		[ApiMember(Name = "ShippingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingSameAsBilling", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBilling { get; set; }

		[ApiMember(Name = "ShippingSameAsBillingIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBillingIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalDiscountsModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscountsModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscountsModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscountsModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscountsModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscountsModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscountsModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalDiscountsModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalDiscountsModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalDiscountsModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscountsModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalDiscountsModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscountsModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalDiscountsModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscountsModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalDiscountsModifierModeIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalFeesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFeesModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalFeesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFeesModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalFeesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFeesModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalFeesModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalFeesModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalFeesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalFeesModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalFeesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalFeesModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalFeesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalFeesModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalFeesModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalFeesModifierModeIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalHandlingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandlingModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalHandlingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandlingModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalHandlingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandlingModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalHandlingModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalHandlingModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalHandlingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalHandlingModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalHandlingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalHandlingModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalHandlingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalHandlingModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalHandlingModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalHandlingModifierModeIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalShippingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShippingModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalShippingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShippingModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalShippingModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShippingModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalShippingModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalShippingModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalShippingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalShippingModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalShippingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalShippingModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalShippingModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalShippingModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalShippingModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalShippingModifierModeIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalTaxesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxesModifier { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxesModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxesModifier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxesModifier { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxesModifierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalTaxesModifierIncludeNull { get; set; }

		[ApiMember(Name = "MinSubtotalTaxesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSubtotalTaxesModifierMode { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSubtotalTaxesModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxesModifierMode", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSubtotalTaxesModifierMode { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxesModifierModeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSubtotalTaxesModifierModeIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteStatePagedResults : PagedResultsBase<StateModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesQuoteTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnContactModel : AmARelationshipTableBaseModel
	{
		public SalesReturnModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnContactPagedResults : PagedResultsBase<SalesReturnContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnContactSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnEventModel : SalesEventBaseModel
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnEventPagedResults : PagedResultsBase<SalesReturnEventModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnEventSearchModel : SalesEventBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnEventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SalesReturnModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnFilePagedResults : PagedResultsBase<SalesReturnFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnItemPagedResults : PagedResultsBase<SalesItemBaseModel`2>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnItemTargetPagedResults : PagedResultsBase<SalesItemTargetBaseModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesReturnModel : SalesCollectionBaseModel<ITypeModel, TypeModel, ISalesReturnFileModel, SalesReturnFileModel, ISalesReturnContactModel, SalesReturnContactModel, ISalesReturnEventModel, SalesReturnEventModel, IAppliedSalesReturnDiscountModel, AppliedSalesReturnDiscountModel, IAppliedSalesReturnItemDiscountModel, AppliedSalesReturnItemDiscountModel>
	{
		public string TrackingNumber { get; set; }

		public string TaxTransactionID { get; set; }

		public string RefundTransactionID { get; set; }

		public string PurchaseOrderNumber { get; set; }

		public DateTime? ActualShipDate { get; set; }

		public DateTime? ReturnApprovedDate { get; set; }

		public DateTime? ReturnCommitmentDate { get; set; }

		public DateTime? RequestedShipDate { get; set; }

		public DateTime? RequiredShipDate { get; set; }

		public decimal? RefundAmount { get; set; }

		public int? SalesGroupID { get; set; }

		public string SalesGroupKey { get; set; }

		public SalesGroupModel SalesGroup { get; set; }

		public List<int> SalesOrderIDs { get; set; }

		public List<SalesReturnSalesOrderModel> AssociatedSalesOrders { get; set; }

		public List<SalesReturnPaymentModel> SalesReturnPayments { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnPagedResults : PagedResultsBase<SalesReturnModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnPaymentModel : AmARelationshipTableBaseModel
	{
		public SalesReturnModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "PaymentModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public PaymentModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnPaymentPagedResults : PagedResultsBase<SalesReturnPaymentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnPaymentSearchModel : AmARelationshipTableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnReasonModel : TypableBaseModel
	{
		[ApiMember(Name = "IsRestockingFeeApplicable", DataType = "bool", ParameterType = "body", IsRequired = true,
			Description = "Is Restocking Fee Applicable")]
		public bool IsRestockingFeeApplicable { get; set; }

		[ApiMember(Name = "RestockingFeePercent", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "Restocking Fee Percent")]
		public decimal? RestockingFeePercent { get; set; }

		[ApiMember(Name = "RestockingFeeAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "Restocking Fee Amount")]
		public decimal? RestockingFeeAmount { get; set; }

		[ApiMember(Name = "RestockingFeeAmountCurrencyID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Restocking Fee Amount Currency ID")]
		public int? RestockingFeeAmountCurrencyID { get; set; }

		public string RestockingFeeAmountCurrencyKey { get; set; }

		public string RestockingFeeAmountCurrencyName { get; set; }

		[ApiMember(Name = "RestockingFeeAmountCurrency", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Restocking Fee Amount Currency")]
		public CurrencyModel RestockingFeeAmountCurrency { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnReasonPagedResults : PagedResultsBase<SalesReturnReasonModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnReasonSearchModel : TypableBaseSearchModel
	{
		[ApiMember(Name = "IsRestockingFeeApplicable", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsRestockingFeeApplicable { get; set; }

		[ApiMember(Name = "MinRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MaxRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MatchRestockingFeeAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRestockingFeeAmount { get; set; }

		[ApiMember(Name = "MatchRestockingFeeAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRestockingFeeAmountIncludeNull { get; set; }

		[ApiMember(Name = "RestockingFeeAmountCurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RestockingFeeAmountCurrencyID { get; set; }

		[ApiMember(Name = "RestockingFeeAmountCurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RestockingFeeAmountCurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRestockingFeePercent { get; set; }

		[ApiMember(Name = "MaxRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRestockingFeePercent { get; set; }

		[ApiMember(Name = "MatchRestockingFeePercent", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRestockingFeePercent { get; set; }

		[ApiMember(Name = "MatchRestockingFeePercentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRestockingFeePercentIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SalesReturnSalesOrderModel : AmARelationshipTableBaseModel
	{
		public SalesReturnModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SalesOrderModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SalesOrderModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnSalesOrderPagedResults : PagedResultsBase<SalesReturnSalesOrderModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnSalesOrderSearchModel : AmARelationshipTableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnSearchModel : SalesCollectionBaseSearchModel
	{
		public string StatusExclusion { get; set; }

		public int? SalesOrderID { get; set; }

		[ApiMember(Name = "MinSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MinSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFees { get; set; }

		[ApiMember(Name = "MaxSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFees { get; set; }

		[ApiMember(Name = "MatchSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFees { get; set; }

		[ApiMember(Name = "MinSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandling { get; set; }

		[ApiMember(Name = "MaxSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandling { get; set; }

		[ApiMember(Name = "MatchSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandling { get; set; }

		[ApiMember(Name = "MinSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalItems { get; set; }

		[ApiMember(Name = "MaxSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalItems { get; set; }

		[ApiMember(Name = "MatchSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalItems { get; set; }

		[ApiMember(Name = "MinSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShipping { get; set; }

		[ApiMember(Name = "MaxSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShipping { get; set; }

		[ApiMember(Name = "MatchSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShipping { get; set; }

		[ApiMember(Name = "MinSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxes { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxes { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxes { get; set; }

		[ApiMember(Name = "MinTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotal { get; set; }

		[ApiMember(Name = "MaxTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotal { get; set; }

		[ApiMember(Name = "MatchTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotal { get; set; }

		[ApiMember(Name = "MinActualShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinActualShipDate { get; set; }

		[ApiMember(Name = "MaxActualShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxActualShipDate { get; set; }

		[ApiMember(Name = "MatchActualShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchActualShipDate { get; set; }

		[ApiMember(Name = "MatchActualShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchActualShipDateIncludeNull { get; set; }

		[ApiMember(Name = "MinBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinBalanceDue { get; set; }

		[ApiMember(Name = "MaxBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxBalanceDue { get; set; }

		[ApiMember(Name = "MatchBalanceDue", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchBalanceDue { get; set; }

		[ApiMember(Name = "MatchBalanceDueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchBalanceDueIncludeNull { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "MinDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDueDate { get; set; }

		[ApiMember(Name = "MaxDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDueDate { get; set; }

		[ApiMember(Name = "MatchDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDueDate { get; set; }

		[ApiMember(Name = "MatchDueDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDueDateIncludeNull { get; set; }

		[ApiMember(Name = "MinRefundAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRefundAmount { get; set; }

		[ApiMember(Name = "MaxRefundAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRefundAmount { get; set; }

		[ApiMember(Name = "MatchRefundAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRefundAmount { get; set; }

		[ApiMember(Name = "MatchRefundAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRefundAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinRequestedShipDate { get; set; }

		[ApiMember(Name = "MaxRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxRequestedShipDate { get; set; }

		[ApiMember(Name = "MatchRequestedShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchRequestedShipDate { get; set; }

		[ApiMember(Name = "MatchRequestedShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRequestedShipDateIncludeNull { get; set; }

		[ApiMember(Name = "MinRequiredShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinRequiredShipDate { get; set; }

		[ApiMember(Name = "MaxRequiredShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxRequiredShipDate { get; set; }

		[ApiMember(Name = "MatchRequiredShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchRequiredShipDate { get; set; }

		[ApiMember(Name = "MatchRequiredShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRequiredShipDateIncludeNull { get; set; }

		[ApiMember(Name = "MinReturnApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinReturnApprovedDate { get; set; }

		[ApiMember(Name = "MaxReturnApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxReturnApprovedDate { get; set; }

		[ApiMember(Name = "MatchReturnApprovedDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchReturnApprovedDate { get; set; }

		[ApiMember(Name = "MatchReturnApprovedDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchReturnApprovedDateIncludeNull { get; set; }

		[ApiMember(Name = "MinReturnCommitmentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinReturnCommitmentDate { get; set; }

		[ApiMember(Name = "MaxReturnCommitmentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxReturnCommitmentDate { get; set; }

		[ApiMember(Name = "MatchReturnCommitmentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchReturnCommitmentDate { get; set; }

		[ApiMember(Name = "MatchReturnCommitmentDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchReturnCommitmentDateIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupID { get; set; }

		[ApiMember(Name = "SalesGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShippingContactID { get; set; }

		[ApiMember(Name = "ShippingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingSameAsBilling", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBilling { get; set; }

		[ApiMember(Name = "ShippingSameAsBillingIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBillingIncludeNull { get; set; }

		[ApiMember(Name = "PurchaseOrderNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PurchaseOrderNumber { get; set; }

		[ApiMember(Name = "PurchaseOrderNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PurchaseOrderNumberStrict { get; set; }

		[ApiMember(Name = "PurchaseOrderNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PurchaseOrderNumberIncludeNull { get; set; }

		[ApiMember(Name = "RefundTransactionID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RefundTransactionID { get; set; }

		[ApiMember(Name = "RefundTransactionIDStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RefundTransactionIDStrict { get; set; }

		[ApiMember(Name = "RefundTransactionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RefundTransactionIDIncludeNull { get; set; }

		[ApiMember(Name = "TaxTransactionID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TaxTransactionID { get; set; }

		[ApiMember(Name = "TaxTransactionIDStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxTransactionIDStrict { get; set; }

		[ApiMember(Name = "TaxTransactionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TaxTransactionIDIncludeNull { get; set; }

		[ApiMember(Name = "TrackingNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TrackingNumber { get; set; }

		[ApiMember(Name = "TrackingNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TrackingNumberStrict { get; set; }

		[ApiMember(Name = "TrackingNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TrackingNumberIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnStatePagedResults : PagedResultsBase<StateModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SalesReturnTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestContactModel : AmARelationshipTableBaseModel
	{
		public SampleRequestModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestContactPagedResults : PagedResultsBase<SampleRequestContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestContactSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestEventModel : SalesEventBaseModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestEventPagedResults : PagedResultsBase<SampleRequestEventModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestEventSearchModel : SalesEventBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestEventTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SampleRequestModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestFilePagedResults : PagedResultsBase<SampleRequestFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestItemPagedResults : PagedResultsBase<SalesItemBaseModel`2>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestItemTargetPagedResults : PagedResultsBase<SalesItemTargetBaseModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SampleRequestModel : SalesCollectionBaseModel<ITypeModel, TypeModel, ISampleRequestFileModel, SampleRequestFileModel, ISampleRequestContactModel, SampleRequestContactModel, ISampleRequestEventModel, SampleRequestEventModel, IAppliedSampleRequestDiscountModel, AppliedSampleRequestDiscountModel, IAppliedSampleRequestItemDiscountModel, AppliedSampleRequestItemDiscountModel>
	{
		public int? SalesGroupID { get; set; }

		public string SalesGroupKey { get; set; }

		public SalesGroupModel SalesGroup { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestPagedResults : PagedResultsBase<SampleRequestModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestSearchModel : SalesCollectionBaseSearchModel
	{
		[ApiMember(Name = "MinSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MaxSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MatchSubtotalDiscounts", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalDiscounts { get; set; }

		[ApiMember(Name = "MinSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalFees { get; set; }

		[ApiMember(Name = "MaxSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalFees { get; set; }

		[ApiMember(Name = "MatchSubtotalFees", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalFees { get; set; }

		[ApiMember(Name = "MinSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalHandling { get; set; }

		[ApiMember(Name = "MaxSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalHandling { get; set; }

		[ApiMember(Name = "MatchSubtotalHandling", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalHandling { get; set; }

		[ApiMember(Name = "MinSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalItems { get; set; }

		[ApiMember(Name = "MaxSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalItems { get; set; }

		[ApiMember(Name = "MatchSubtotalItems", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalItems { get; set; }

		[ApiMember(Name = "MinSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalShipping { get; set; }

		[ApiMember(Name = "MaxSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalShipping { get; set; }

		[ApiMember(Name = "MatchSubtotalShipping", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalShipping { get; set; }

		[ApiMember(Name = "MinSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinSubtotalTaxes { get; set; }

		[ApiMember(Name = "MaxSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxSubtotalTaxes { get; set; }

		[ApiMember(Name = "MatchSubtotalTaxes", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchSubtotalTaxes { get; set; }

		[ApiMember(Name = "MinTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinTotal { get; set; }

		[ApiMember(Name = "MaxTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxTotal { get; set; }

		[ApiMember(Name = "MatchTotal", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchTotal { get; set; }

		[ApiMember(Name = "BillingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BillingContactID { get; set; }

		[ApiMember(Name = "BillingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BillingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "MinDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDueDate { get; set; }

		[ApiMember(Name = "MaxDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDueDate { get; set; }

		[ApiMember(Name = "MatchDueDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDueDate { get; set; }

		[ApiMember(Name = "MatchDueDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDueDateIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupID { get; set; }

		[ApiMember(Name = "SalesGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShippingContactID { get; set; }

		[ApiMember(Name = "ShippingContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ShippingSameAsBilling", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBilling { get; set; }

		[ApiMember(Name = "ShippingSameAsBillingIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShippingSameAsBillingIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestStatePagedResults : PagedResultsBase<StateModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SampleRequestTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScheduledJobConfigurationModel : NameableBaseModel
	{
		public int? NotificationTemplateID { get; set; }

		public string NotificationTemplateKey { get; set; }

		public string NotificationTemplateName { get; set; }

		public EmailTemplateModel NotificationTemplate { get; set; }

		public List<ScheduledJobConfigurationSettingModel> ScheduledJobConfigurationSettings { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScheduledJobConfigurationPagedResults : PagedResultsBase<ScheduledJobConfigurationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScheduledJobConfigurationSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "NotificationTemplateID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? NotificationTemplateID { get; set; }

		[ApiMember(Name = "NotificationTemplateIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? NotificationTemplateIDIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScheduledJobConfigurationSettingModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public ScheduledJobConfigurationModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SettingModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SettingModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScheduledJobConfigurationSettingPagedResults : PagedResultsBase<ScheduledJobConfigurationSettingModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScheduledJobConfigurationSettingSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScoutCategoryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public ScoutModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScoutCategoryPagedResults : PagedResultsBase<ScoutCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScoutCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScoutCategoryTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScoutModel : BaseModel
	{
		public DateTime? YearMin { get; set; }

		public DateTime? YearMax { get; set; }

		public decimal? PriceMin { get; set; }

		public decimal? PriceMax { get; set; }

		public decimal? HoursUsedMin { get; set; }

		public decimal? HoursUsedMax { get; set; }

		public decimal? DistanceUsedMin { get; set; }

		public decimal? DistanceUsedMax { get; set; }

		public string DistanceUnitOfMeasure { get; set; }

		public int CreatedByUserID { get; set; }

		public UserModel CreatedByUser { get; set; }

		public string CreatedByUserKey { get; set; }

		[ApiMember(Name = "Categories", DataType = "List<ScoutCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Categories this object is associated with")]
		public List<ScoutCategoryModel> Categories { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScoutPagedResults : PagedResultsBase<ScoutModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ScoutSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "CreatedByUserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CreatedByUserID { get; set; }

		[ApiMember(Name = "MinDistanceUsedMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDistanceUsedMax { get; set; }

		[ApiMember(Name = "MaxDistanceUsedMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDistanceUsedMax { get; set; }

		[ApiMember(Name = "MatchDistanceUsedMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDistanceUsedMax { get; set; }

		[ApiMember(Name = "MatchDistanceUsedMaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDistanceUsedMaxIncludeNull { get; set; }

		[ApiMember(Name = "MinDistanceUsedMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDistanceUsedMin { get; set; }

		[ApiMember(Name = "MaxDistanceUsedMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDistanceUsedMin { get; set; }

		[ApiMember(Name = "MatchDistanceUsedMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDistanceUsedMin { get; set; }

		[ApiMember(Name = "MatchDistanceUsedMinIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDistanceUsedMinIncludeNull { get; set; }

		[ApiMember(Name = "MinHoursUsedMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinHoursUsedMax { get; set; }

		[ApiMember(Name = "MaxHoursUsedMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxHoursUsedMax { get; set; }

		[ApiMember(Name = "MatchHoursUsedMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchHoursUsedMax { get; set; }

		[ApiMember(Name = "MatchHoursUsedMaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchHoursUsedMaxIncludeNull { get; set; }

		[ApiMember(Name = "MinHoursUsedMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinHoursUsedMin { get; set; }

		[ApiMember(Name = "MaxHoursUsedMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxHoursUsedMin { get; set; }

		[ApiMember(Name = "MatchHoursUsedMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchHoursUsedMin { get; set; }

		[ApiMember(Name = "MatchHoursUsedMinIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchHoursUsedMinIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceMax { get; set; }

		[ApiMember(Name = "MaxPriceMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceMax { get; set; }

		[ApiMember(Name = "MatchPriceMax", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceMax { get; set; }

		[ApiMember(Name = "MatchPriceMaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceMaxIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceMin { get; set; }

		[ApiMember(Name = "MaxPriceMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceMin { get; set; }

		[ApiMember(Name = "MatchPriceMin", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceMin { get; set; }

		[ApiMember(Name = "MatchPriceMinIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceMinIncludeNull { get; set; }

		[ApiMember(Name = "MinYearMax", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinYearMax { get; set; }

		[ApiMember(Name = "MaxYearMax", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxYearMax { get; set; }

		[ApiMember(Name = "MatchYearMax", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchYearMax { get; set; }

		[ApiMember(Name = "MatchYearMaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchYearMaxIncludeNull { get; set; }

		[ApiMember(Name = "MinYearMin", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinYearMin { get; set; }

		[ApiMember(Name = "MaxYearMin", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxYearMin { get; set; }

		[ApiMember(Name = "MatchYearMin", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchYearMin { get; set; }

		[ApiMember(Name = "MatchYearMinIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchYearMinIncludeNull { get; set; }

		[ApiMember(Name = "DistanceUnitOfMeasure", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DistanceUnitOfMeasure { get; set; }

		[ApiMember(Name = "DistanceUnitOfMeasureStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DistanceUnitOfMeasureStrict { get; set; }

		[ApiMember(Name = "DistanceUnitOfMeasureIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DistanceUnitOfMeasureIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SearchFormBase
	{
		public int Page { get; set; }

		public int PageSize { get; set; }

		public int PageSetSize { get; set; }

		public string PageFormat { get; set; }

		public SearchSort Sort { get; set; }

		[ApiMember(Name = "Name", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Name { get; set; }

		[ApiMember(Name = "Query", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Query { get; set; }

		[ApiMember(Name = "AttributesAny", DataType = "Dictionary<string, string[]>", ParameterType = "query", IsRequired = false,
			Description = "")]
		public Dictionary<string, string[]> AttributesAny { get; set; }

		[ApiMember(Name = "AttributesAll", DataType = "Dictionary<string, string[]>", ParameterType = "query", IsRequired = false,
			Description = "")]
		public Dictionary<string, string[]> AttributesAll { get; set; }

		[ApiMember(Name = "BrandID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] BrandIDsAny { get; set; }

		[ApiMember(Name = "BrandIDsAll", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] BrandIDsAll { get; set; }

		[ApiMember(Name = "ForcedCategory", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ForcedCategory { get; set; }

		[ApiMember(Name = "Category", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Category { get; set; }

		[ApiMember(Name = "CategoriesAny", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string[] CategoriesAny { get; set; }

		[ApiMember(Name = "CategoriesAll", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string[] CategoriesAll { get; set; }

		[ApiMember(Name = "DistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? DistrictID { get; set; }

		[ApiMember(Name = "DistrictIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] DistrictIDsAny { get; set; }

		[ApiMember(Name = "DistrictIDsAll", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] DistrictIDsAll { get; set; }

		[ApiMember(Name = "City", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string City { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] FranchiseIDsAny { get; set; }

		[ApiMember(Name = "FranchiseIDsAll", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] FranchiseIDsAll { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] ManufacturerIDsAny { get; set; }

		[ApiMember(Name = "ManufacturerIDsAll", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] ManufacturerIDsAll { get; set; }

		[ApiMember(Name = "PricingRanges", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string[] PricingRanges { get; set; }

		[ApiMember(Name = "ProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] ProductIDsAny { get; set; }

		[ApiMember(Name = "ProductIDsAll", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] ProductIDsAll { get; set; }

		[ApiMember(Name = "RatingRanges", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string[] RatingRanges { get; set; }

		[ApiMember(Name = "RegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RegionID { get; set; }

		[ApiMember(Name = "RegionIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] RegionIDsAny { get; set; }

		[ApiMember(Name = "Role", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Role { get; set; }

		[ApiMember(Name = "RolesAny", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string[] RolesAny { get; set; }

		[ApiMember(Name = "RolesAll", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string[] RolesAll { get; set; }

		[ApiMember(Name = "StoreID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] StoreIDsAny { get; set; }

		[ApiMember(Name = "StoreIDsAll", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] StoreIDsAll { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDsAny", DataType = "Dictionary<string, string[]>", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] TypeIDsAny { get; set; }

		[ApiMember(Name = "VendorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] VendorIDsAny { get; set; }

		[ApiMember(Name = "VendorIDsAll", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] VendorIDsAll { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ServiceAreaModel : BaseModel
	{
		public decimal? Radius { get; set; }

		public int ContractorID { get; set; }

		public string ContractorKey { get; set; }

		public ContractorModel Contractor { get; set; }

		public int AddressID { get; set; }

		public string AddressKey { get; set; }

		public AddressModel Address { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ServiceAreaPagedResults : PagedResultsBase<ServiceAreaModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ServiceAreaSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "ContractorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ContractorID { get; set; }

		[ApiMember(Name = "MinRadius", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRadius { get; set; }

		[ApiMember(Name = "MaxRadius", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRadius { get; set; }

		[ApiMember(Name = "MatchRadius", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRadius { get; set; }

		[ApiMember(Name = "MatchRadiusIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRadiusIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SettingGroupModel : TypableBaseModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SettingGroupPagedResults : PagedResultsBase<SettingGroupModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SettingGroupSearchModel : TypableBaseSearchModel
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SettingModel : BaseModel
	{
		public string Value { get; set; }

		public int? SettingGroupID { get; set; }

		public string SettingGroupKey { get; set; }

		public string SettingGroupName { get; set; }

		public SettingGroupModel SettingGroup { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? BrandID { get; set; }

		public string BrandKey { get; set; }

		public string BrandName { get; set; }

		public BrandModel Brand { get; set; }

		public int? StoreID { get; set; }

		public string StoreKey { get; set; }

		public string StoreName { get; set; }

		public string StoreSeoUrl { get; set; }

		public StoreModel Store { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SettingPagedResults : PagedResultsBase<SettingModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SettingSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "SettingGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SettingGroupID { get; set; }

		[ApiMember(Name = "SettingGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SettingGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "Value", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Value { get; set; }

		[ApiMember(Name = "ValueStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ValueStrict { get; set; }

		[ApiMember(Name = "ValueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ValueIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SettingTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ShipCarrierMethodModel : NameableBaseModel
	{
		public int ShipCarrierID { get; set; }

		public string ShipCarrierKey { get; set; }

		public string ShipCarrierName { get; set; }

		public ShipCarrierModel ShipCarrier { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipCarrierMethodPagedResults : PagedResultsBase<ShipCarrierMethodModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipCarrierMethodSearchModel : NameableBaseSearchModel
	{
		public string ShipCarrierName { get; set; }

		[ApiMember(Name = "ShipCarrierID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShipCarrierID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ShipCarrierModel : NameableBaseModel
	{
		public string PointOfContact { get; set; }

		public bool IsInbound { get; set; }

		public bool IsOutbound { get; set; }

		public string Username { get; set; }

		public string Password { get; set; }

		public string Authentication { get; set; }

		public string AccountNumber { get; set; }

		public string SalesRep { get; set; }

		public DateTime? PickupTime { get; set; }

		public List<PurchaseOrderModel> PurchaseOrders { get; set; }

		public List<ShipCarrierMethodModel> ShipCarrierMethods { get; set; }

		public List<ShipmentModel> Shipments { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipCarrierPagedResults : PagedResultsBase<ShipCarrierModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipCarrierSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "IsInbound", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsInbound { get; set; }

		[ApiMember(Name = "IsOutbound", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsOutbound { get; set; }

		[ApiMember(Name = "MinPickupTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinPickupTime { get; set; }

		[ApiMember(Name = "MaxPickupTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxPickupTime { get; set; }

		[ApiMember(Name = "MatchPickupTime", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchPickupTime { get; set; }

		[ApiMember(Name = "MatchPickupTimeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPickupTimeIncludeNull { get; set; }

		[ApiMember(Name = "AccountNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountNumber { get; set; }

		[ApiMember(Name = "AccountNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountNumberStrict { get; set; }

		[ApiMember(Name = "AccountNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountNumberIncludeNull { get; set; }

		[ApiMember(Name = "Authentication", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Authentication { get; set; }

		[ApiMember(Name = "AuthenticationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthenticationStrict { get; set; }

		[ApiMember(Name = "AuthenticationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthenticationIncludeNull { get; set; }

		[ApiMember(Name = "EncryptedPassword", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string EncryptedPassword { get; set; }

		[ApiMember(Name = "EncryptedPasswordStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EncryptedPasswordStrict { get; set; }

		[ApiMember(Name = "EncryptedPasswordIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EncryptedPasswordIncludeNull { get; set; }

		[ApiMember(Name = "PointOfContact", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PointOfContact { get; set; }

		[ApiMember(Name = "PointOfContactStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PointOfContactStrict { get; set; }

		[ApiMember(Name = "PointOfContactIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PointOfContactIncludeNull { get; set; }

		[ApiMember(Name = "SalesRep", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SalesRep { get; set; }

		[ApiMember(Name = "SalesRepStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesRepStrict { get; set; }

		[ApiMember(Name = "SalesRepIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesRepIncludeNull { get; set; }

		[ApiMember(Name = "Username", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Username { get; set; }

		[ApiMember(Name = "UsernameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UsernameStrict { get; set; }

		[ApiMember(Name = "UsernameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UsernameIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ShipmentEventModel : BaseModel
	{
		public string Note { get; set; }

		public DateTime EventDate { get; set; }

		public int AddressID { get; set; }

		public string AddressKey { get; set; }

		public AddressModel Location { get; set; }

		public int ShipmentID { get; set; }

		public string ShipmentKey { get; set; }

		public ShipmentModel Shipment { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipmentEventPagedResults : PagedResultsBase<ShipmentEventModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipmentEventSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "MinEventDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEventDate { get; set; }

		[ApiMember(Name = "MaxEventDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEventDate { get; set; }

		[ApiMember(Name = "MatchEventDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEventDate { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "ShipmentID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShipmentID { get; set; }

		[ApiMember(Name = "Note", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Note { get; set; }

		[ApiMember(Name = "NoteStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? NoteStrict { get; set; }

		[ApiMember(Name = "NoteIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? NoteIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class ShipmentModel : BaseModel
	{
		public string Reference1 { get; set; }

		public string Reference2 { get; set; }

		public string Reference3 { get; set; }

		public string TrackingNumber { get; set; }

		public string Destination { get; set; }

		public DateTime? TargetShippingDate { get; set; }

		public DateTime? EstimatedDeliveryDate { get; set; }

		public DateTime? ShipDate { get; set; }

		public DateTime? DateDelivered { get; set; }

		public decimal? NegotiatedRate { get; set; }

		public decimal? PublishedRate { get; set; }

		public int OriginContactID { get; set; }

		public string OriginContactKey { get; set; }

		public ContactModel OriginContact { get; set; }

		public int DestinationContactID { get; set; }

		public string DestinationContactKey { get; set; }

		public ContactModel DestinationContact { get; set; }

		public int? InventoryLocationSectionID { get; set; }

		public string InventoryLocationSectionKey { get; set; }

		public string InventoryLocationSectionName { get; set; }

		public InventoryLocationSectionModel InventoryLocationSection { get; set; }

		public int? ShipCarrierID { get; set; }

		public string ShipCarrierKey { get; set; }

		public string ShipCarrierName { get; set; }

		public ShipCarrierModel ShipCarrier { get; set; }

		public int? ShipCarrierMethodID { get; set; }

		public string ShipCarrierMethodKey { get; set; }

		public string ShipCarrierMethodName { get; set; }

		public ShipCarrierMethodModel ShipCarrierMethod { get; set; }

		public int? VendorID { get; set; }

		public string VendorKey { get; set; }

		public string VendorName { get; set; }

		public VendorModel Vendor { get; set; }

		public List<ShipmentEventModel> ShipmentEvents { get; set; }

		public string CarrierName { get; set; }

		public string ShipMethod { get; set; }

		public string LastLocation { get; set; }

		public string CompanyName { get; set; }

		public int VarianceLevel { get; set; }

		public List<int> SalesOrderIDs { get; set; }

		public List<int> SalesOrderItemIDs { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipmentPagedResults : PagedResultsBase<ShipmentModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipmentSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "DestinationContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? DestinationContactID { get; set; }

		[ApiMember(Name = "OriginContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? OriginContactID { get; set; }

		[ApiMember(Name = "MinDateDelivered", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDateDelivered { get; set; }

		[ApiMember(Name = "MaxDateDelivered", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDateDelivered { get; set; }

		[ApiMember(Name = "MatchDateDelivered", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDateDelivered { get; set; }

		[ApiMember(Name = "MatchDateDeliveredIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDateDeliveredIncludeNull { get; set; }

		[ApiMember(Name = "MinEstimatedDeliveryDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEstimatedDeliveryDate { get; set; }

		[ApiMember(Name = "MaxEstimatedDeliveryDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEstimatedDeliveryDate { get; set; }

		[ApiMember(Name = "MatchEstimatedDeliveryDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEstimatedDeliveryDate { get; set; }

		[ApiMember(Name = "MatchEstimatedDeliveryDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEstimatedDeliveryDateIncludeNull { get; set; }

		[ApiMember(Name = "InventoryLocationSectionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? InventoryLocationSectionID { get; set; }

		[ApiMember(Name = "InventoryLocationSectionIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? InventoryLocationSectionIDIncludeNull { get; set; }

		[ApiMember(Name = "MinNegotiatedRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinNegotiatedRate { get; set; }

		[ApiMember(Name = "MaxNegotiatedRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxNegotiatedRate { get; set; }

		[ApiMember(Name = "MatchNegotiatedRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchNegotiatedRate { get; set; }

		[ApiMember(Name = "MatchNegotiatedRateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchNegotiatedRateIncludeNull { get; set; }

		[ApiMember(Name = "MinPublishedRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPublishedRate { get; set; }

		[ApiMember(Name = "MaxPublishedRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPublishedRate { get; set; }

		[ApiMember(Name = "MatchPublishedRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPublishedRate { get; set; }

		[ApiMember(Name = "MatchPublishedRateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPublishedRateIncludeNull { get; set; }

		[ApiMember(Name = "ShipCarrierID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShipCarrierID { get; set; }

		[ApiMember(Name = "ShipCarrierIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShipCarrierIDIncludeNull { get; set; }

		[ApiMember(Name = "ShipCarrierMethodID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ShipCarrierMethodID { get; set; }

		[ApiMember(Name = "ShipCarrierMethodIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShipCarrierMethodIDIncludeNull { get; set; }

		[ApiMember(Name = "MinShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinShipDate { get; set; }

		[ApiMember(Name = "MaxShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxShipDate { get; set; }

		[ApiMember(Name = "MatchShipDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchShipDate { get; set; }

		[ApiMember(Name = "MatchShipDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchShipDateIncludeNull { get; set; }

		[ApiMember(Name = "MinTargetShippingDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinTargetShippingDate { get; set; }

		[ApiMember(Name = "MaxTargetShippingDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxTargetShippingDate { get; set; }

		[ApiMember(Name = "MatchTargetShippingDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchTargetShippingDate { get; set; }

		[ApiMember(Name = "MatchTargetShippingDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTargetShippingDateIncludeNull { get; set; }

		[ApiMember(Name = "VendorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VendorIDIncludeNull { get; set; }

		[ApiMember(Name = "Destination", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Destination { get; set; }

		[ApiMember(Name = "DestinationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DestinationStrict { get; set; }

		[ApiMember(Name = "DestinationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DestinationIncludeNull { get; set; }

		[ApiMember(Name = "Reference1", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Reference1 { get; set; }

		[ApiMember(Name = "Reference1Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Reference1Strict { get; set; }

		[ApiMember(Name = "Reference1IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Reference1IncludeNull { get; set; }

		[ApiMember(Name = "Reference2", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Reference2 { get; set; }

		[ApiMember(Name = "Reference2Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Reference2Strict { get; set; }

		[ApiMember(Name = "Reference2IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Reference2IncludeNull { get; set; }

		[ApiMember(Name = "Reference3", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Reference3 { get; set; }

		[ApiMember(Name = "Reference3Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Reference3Strict { get; set; }

		[ApiMember(Name = "Reference3IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Reference3IncludeNull { get; set; }

		[ApiMember(Name = "TrackingNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TrackingNumber { get; set; }

		[ApiMember(Name = "TrackingNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TrackingNumberStrict { get; set; }

		[ApiMember(Name = "TrackingNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TrackingNumberIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipmentStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ShipmentTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SiteDomainModel : NameableBaseModel
	{
		public string HeaderContent { get; set; }

		public string FooterContent { get; set; }

		public string SideBarContent { get; set; }

		public string CatalogContent { get; set; }

		public string Url { get; set; }

		public string AlternateUrl1 { get; set; }

		public string AlternateUrl2 { get; set; }

		public string AlternateUrl3 { get; set; }

		public List<BrandSiteDomainModel> BrandSiteDomains { get; set; }

		public List<SiteDomainSocialProviderModel> SiteDomainSocialProviders { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandSiteDomainModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandSiteDomainModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseSiteDomainModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseSiteDomainModel> Franchises { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SiteDomainPagedResults : PagedResultsBase<SiteDomainModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SiteDomainSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "AlternateUrl1", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AlternateUrl1 { get; set; }

		[ApiMember(Name = "AlternateUrl1Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AlternateUrl1Strict { get; set; }

		[ApiMember(Name = "AlternateUrl1IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AlternateUrl1IncludeNull { get; set; }

		[ApiMember(Name = "AlternateUrl2", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AlternateUrl2 { get; set; }

		[ApiMember(Name = "AlternateUrl2Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AlternateUrl2Strict { get; set; }

		[ApiMember(Name = "AlternateUrl2IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AlternateUrl2IncludeNull { get; set; }

		[ApiMember(Name = "AlternateUrl3", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AlternateUrl3 { get; set; }

		[ApiMember(Name = "AlternateUrl3Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AlternateUrl3Strict { get; set; }

		[ApiMember(Name = "AlternateUrl3IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AlternateUrl3IncludeNull { get; set; }

		[ApiMember(Name = "CatalogContent", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CatalogContent { get; set; }

		[ApiMember(Name = "CatalogContentStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CatalogContentStrict { get; set; }

		[ApiMember(Name = "CatalogContentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CatalogContentIncludeNull { get; set; }

		[ApiMember(Name = "FooterContent", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string FooterContent { get; set; }

		[ApiMember(Name = "FooterContentStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FooterContentStrict { get; set; }

		[ApiMember(Name = "FooterContentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FooterContentIncludeNull { get; set; }

		[ApiMember(Name = "HeaderContent", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string HeaderContent { get; set; }

		[ApiMember(Name = "HeaderContentStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HeaderContentStrict { get; set; }

		[ApiMember(Name = "HeaderContentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HeaderContentIncludeNull { get; set; }

		[ApiMember(Name = "SideBarContent", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SideBarContent { get; set; }

		[ApiMember(Name = "SideBarContentStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SideBarContentStrict { get; set; }

		[ApiMember(Name = "SideBarContentIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SideBarContentIncludeNull { get; set; }

		[ApiMember(Name = "Url", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Url { get; set; }

		[ApiMember(Name = "UrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UrlStrict { get; set; }

		[ApiMember(Name = "UrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UrlIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SiteDomainSocialProviderModel : AmARelationshipTableBaseModel
	{
		public string Script { get; set; }

		public string UrlValues { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public SiteDomainModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SocialProviderModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SocialProviderModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SiteDomainSocialProviderPagedResults : PagedResultsBase<SiteDomainSocialProviderModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SiteDomainSocialProviderSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "Script", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Script { get; set; }

		[ApiMember(Name = "ScriptStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ScriptStrict { get; set; }

		[ApiMember(Name = "ScriptIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ScriptIncludeNull { get; set; }

		[ApiMember(Name = "UrlValues", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UrlValues { get; set; }

		[ApiMember(Name = "UrlValuesStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UrlValuesStrict { get; set; }

		[ApiMember(Name = "UrlValuesIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UrlValuesIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SocialProviderModel : NameableBaseModel
	{
		public string Url { get; set; }

		public string UrlFormat { get; set; }

		public List<SiteDomainSocialProviderModel> SiteDomainSocialProviders { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SocialProviderPagedResults : PagedResultsBase<SocialProviderModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SocialProviderSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "Url", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Url { get; set; }

		[ApiMember(Name = "UrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UrlStrict { get; set; }

		[ApiMember(Name = "UrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UrlIncludeNull { get; set; }

		[ApiMember(Name = "UrlFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UrlFormat { get; set; }

		[ApiMember(Name = "UrlFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UrlFormatStrict { get; set; }

		[ApiMember(Name = "UrlFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UrlFormatIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreAccountModel : AmARelationshipTableBaseModel
	{
		public bool HasAccessToStore { get; set; }

		public int? PricePointID { get; set; }

		public string PricePointKey { get; set; }

		public string PricePointName { get; set; }

		public PricePointModel PricePoint { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AccountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AccountModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreAccountPagedResults : PagedResultsBase<StoreAccountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreAccountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "HasAccessToStore", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasAccessToStore { get; set; }

		[ApiMember(Name = "PricePointID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PricePointID { get; set; }

		[ApiMember(Name = "PricePointIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PricePointIDIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreAuctionModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AuctionModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AuctionModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreAuctionPagedResults : PagedResultsBase<StoreAuctionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreAuctionSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreBadgeModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "BadgeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public BadgeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreBadgePagedResults : PagedResultsBase<StoreBadgeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreBadgeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreCatalogSearchForm : SearchFormBase
	{
		[ApiMember(Name = "BadgeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? BadgeID { get; set; }

		[ApiMember(Name = "BadgeIDsAny", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] BadgeIDsAny { get; set; }

		[ApiMember(Name = "BadgeIDsAll", DataType = "int[]", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int[] BadgeIDsAll { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreCategoryModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Category.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CategoryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreCategoryPagedResults : PagedResultsBase<StoreCategoryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreCategorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreContactModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ContactModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ContactModel Slave { get; set; }

		[ApiMember(Name = "SlavePhone", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary phone number of the contact.")]
		public string SlavePhone { get; set; }

		[ApiMember(Name = "SlaveFax", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The fax number of the contact.")]
		public string SlaveFax { get; set; }

		[ApiMember(Name = "SlaveEmail", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The email address of the contact.")]
		public string SlaveEmail { get; set; }

		[ApiMember(Name = "SlaveFirstName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The first (given) name of the contact.")]
		public string SlaveFirstName { get; set; }

		[ApiMember(Name = "SlaveLastName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The last (family) name of the contact.")]
		public string SlaveLastName { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreContactPagedResults : PagedResultsBase<StoreContactModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreContactSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreCountryModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "CountryModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public CountryModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreCountryPagedResults : PagedResultsBase<StoreCountryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreCountrySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoredFileModel : NameableBaseModel
	{
		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public string Copyright { get; set; }

		public string FileFormat { get; set; }

		public string FileName { get; set; }

		public bool IsStoredInDB { get; set; }

		public byte[] Bytes { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoredFilePagedResults : PagedResultsBase<StoredFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoredFileSearchModel : NameableBaseSearchModel
	{
		public int? AccountID { get; set; }

		public int? CategoryID { get; set; }

		[ApiMember(Name = "IsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsStoredInDB { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "FileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string FileFormat { get; set; }

		[ApiMember(Name = "FileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FileFormatStrict { get; set; }

		[ApiMember(Name = "FileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FileFormatIncludeNull { get; set; }

		[ApiMember(Name = "FileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string FileName { get; set; }

		[ApiMember(Name = "FileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FileNameStrict { get; set; }

		[ApiMember(Name = "FileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreDistrictModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "DistrictModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public DistrictModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreDistrictPagedResults : PagedResultsBase<StoreDistrictModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreDistrictSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreImagePagedResults : PagedResultsBase<StoreImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreIndexableModel : IndexableModelBase
	{
		public object SuggestedByBadges { get; set; }

		public List<IndexableBadgeFilter> Badges { get; set; }

		public string Slogan { get; set; }

		public string MissionStatement { get; set; }

		public string ExternalUrl { get; set; }

		public string About { get; set; }

		public string Overview { get; set; }

		public string OperatingHoursTimeZoneId { get; set; }

		public decimal? OperatingHoursMondayStart { get; set; }

		public decimal? OperatingHoursMondayEnd { get; set; }

		public decimal? OperatingHoursTuesdayStart { get; set; }

		public decimal? OperatingHoursTuesdayEnd { get; set; }

		public decimal? OperatingHoursWednesdayStart { get; set; }

		public decimal? OperatingHoursWednesdayEnd { get; set; }

		public decimal? OperatingHoursThursdayStart { get; set; }

		public decimal? OperatingHoursThursdayEnd { get; set; }

		public decimal? OperatingHoursFridayStart { get; set; }

		public decimal? OperatingHoursFridayEnd { get; set; }

		public decimal? OperatingHoursSaturdayStart { get; set; }

		public decimal? OperatingHoursSaturdayEnd { get; set; }

		public decimal? OperatingHoursSundayStart { get; set; }

		public decimal? OperatingHoursSundayEnd { get; set; }

		public string OperatingHoursClosedStatement { get; set; }

		public int? CurrencyID { get; set; }

		public string CurrencyKey { get; set; }

		public string CurrencyName { get; set; }

		public int? LanguageID { get; set; }

		public string LanguageKey { get; set; }

		public string LanguageName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreInventoryLocationModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "Slave", DataType = "InventoryLocationModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public InventoryLocationModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreInventoryLocationPagedResults : PagedResultsBase<StoreInventoryLocationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreInventoryLocationSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreInventoryLocationsMatrixModel
	{
		[ApiMember(Name = "StoreID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the store.")]
		public int StoreID { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "The store key.")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "The name of the store.")]
		public string StoreName { get; set; }

		[ApiMember(Name = "InternalInventoryLocationID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the internal inventory location.")]
		public int InternalInventoryLocationID { get; set; }

		[ApiMember(Name = "InternalInventoryLocationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "The internal inventory location key.")]
		public string InternalInventoryLocationKey { get; set; }

		[ApiMember(Name = "InternalInventoryLocationName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "The name of the internal inventory location.")]
		public string InternalInventoryLocationName { get; set; }

		[ApiMember(Name = "DistributionCenterInventoryLocationID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the distribution center inventory location.")]
		public int DistributionCenterInventoryLocationID { get; set; }

		[ApiMember(Name = "DistributionCenterInventoryLocationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "The distribution center inventory location key.")]
		public string DistributionCenterInventoryLocationKey { get; set; }

		[ApiMember(Name = "DistributionCenterInventoryLocationName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "The name of the distribution center inventory location.")]
		public string DistributionCenterInventoryLocationName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreInventoryLocationTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreManufacturerModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ManufacturerModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ManufacturerModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreManufacturerPagedResults : PagedResultsBase<StoreManufacturerModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreManufacturerSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreModel : NameableBaseModel
	{
		public int? SortOrder { get; set; }

		public string Slogan { get; set; }

		public string MissionStatement { get; set; }

		public string ExternalUrl { get; set; }

		public string About { get; set; }

		public string Overview { get; set; }

		public string OperatingHoursTimeZoneId { get; set; }

		public DateTime? EndDate { get; set; }

		public DateTime? StartDate { get; set; }

		public decimal? OperatingHoursMondayStart { get; set; }

		public decimal? OperatingHoursMondayEnd { get; set; }

		public decimal? OperatingHoursTuesdayStart { get; set; }

		public decimal? OperatingHoursTuesdayEnd { get; set; }

		public decimal? OperatingHoursWednesdayStart { get; set; }

		public decimal? OperatingHoursWednesdayEnd { get; set; }

		public decimal? OperatingHoursThursdayStart { get; set; }

		public decimal? OperatingHoursThursdayEnd { get; set; }

		public decimal? OperatingHoursFridayStart { get; set; }

		public decimal? OperatingHoursFridayEnd { get; set; }

		public decimal? OperatingHoursSaturdayStart { get; set; }

		public decimal? OperatingHoursSaturdayEnd { get; set; }

		public decimal? OperatingHoursSundayStart { get; set; }

		public decimal? OperatingHoursSundayEnd { get; set; }

		public string OperatingHoursClosedStatement { get; set; }

		public decimal? Distance { get; set; }

		public bool? DisplayInStorefront { get; set; }

		public int? CurrencyID { get; set; }

		public CurrencyModel Currency { get; set; }

		public int? LanguageID { get; set; }

		public string LanguageKey { get; set; }

		public LanguageModel Language { get; set; }

		public List<StoreBadgeModel> StoreBadges { get; set; }

		public List<StoreContactModel> StoreContacts { get; set; }

		public List<StoreInventoryLocationModel> StoreInventoryLocations { get; set; }

		public List<StoreSubscriptionModel> StoreSubscriptions { get; set; }

		public List<StoreCountryModel> StoreCountries { get; set; }

		public List<StoreRegionModel> StoreRegions { get; set; }

		public List<StoreDistrictModel> StoreDistricts { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "Accounts", DataType = "List<StoreAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts this object is associated with")]
		public List<StoreAccountModel> Accounts { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandStoreModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandStoreModel> Brands { get; set; }

		[ApiMember(Name = "Categories", DataType = "List<StoreCategoryModel>", ParameterType = "body", IsRequired = false,
			Description = "Categories this object is associated with")]
		public List<StoreCategoryModel> Categories { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseStoreModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseStoreModel> Franchises { get; set; }

		[ApiMember(Name = "Manufacturers", DataType = "List<StoreManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Manufacturers this object is associated with")]
		public List<StoreManufacturerModel> Manufacturers { get; set; }

		[ApiMember(Name = "Products", DataType = "List<StoreProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<StoreProductModel> Products { get; set; }

		[ApiMember(Name = "Users", DataType = "List<StoreUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Users this object is associated with")]
		public List<StoreUserModel> Users { get; set; }

		[ApiMember(Name = "Vendors", DataType = "List<StoreVendorModel>", ParameterType = "body", IsRequired = false,
			Description = "Vendors this object is associated with")]
		public List<StoreVendorModel> Vendors { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }

		[ApiMember(Name = "Images", DataType = "List<StoreImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<StoreImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		public string MinimumOrderDollarAmountBufferProductKey { get; set; }

		public string MinimumOrderDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderDollarAmountBufferProduct { get; set; }

		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		public string MinimumOrderQuantityAmountBufferProductKey { get; set; }

		public string MinimumOrderQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderQuantityAmountBufferProduct { get; set; }

		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryKey { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderDollarAmountBufferCategory { get; set; }

		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Dollar Amount")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Unit Quantity")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingDollarAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingQuantityAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingDollarAmountBufferCategory { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "Reviews", DataType = "List<ReviewModel>", ParameterType = "body", IsRequired = false,
			Description = "Store Reviews")]
		public List<ReviewModel> Reviews { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StorePagedResults : PagedResultsBase<StoreModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreProductModel : AmARelationshipTableBaseModel
	{
		public bool IsVisibleIn { get; set; }

		public decimal? PriceBase { get; set; }

		public decimal? PriceMsrp { get; set; }

		public decimal? PriceReduction { get; set; }

		public decimal? PriceSale { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreProductPagedResults : PagedResultsBase<StoreProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "IsVisibleIn", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsVisibleIn { get; set; }

		[ApiMember(Name = "MinPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceBase { get; set; }

		[ApiMember(Name = "MaxPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceBase { get; set; }

		[ApiMember(Name = "MatchPriceBase", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceBase { get; set; }

		[ApiMember(Name = "MatchPriceBaseIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceBaseIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceMsrp { get; set; }

		[ApiMember(Name = "MaxPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceMsrp { get; set; }

		[ApiMember(Name = "MatchPriceMsrp", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceMsrp { get; set; }

		[ApiMember(Name = "MatchPriceMsrpIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceMsrpIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceReduction { get; set; }

		[ApiMember(Name = "MaxPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceReduction { get; set; }

		[ApiMember(Name = "MatchPriceReduction", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceReduction { get; set; }

		[ApiMember(Name = "MatchPriceReductionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceReductionIncludeNull { get; set; }

		[ApiMember(Name = "MinPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinPriceSale { get; set; }

		[ApiMember(Name = "MaxPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxPriceSale { get; set; }

		[ApiMember(Name = "MatchPriceSale", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchPriceSale { get; set; }

		[ApiMember(Name = "MatchPriceSaleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchPriceSaleIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreRegionModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "RegionModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public RegionModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreRegionPagedResults : PagedResultsBase<StoreRegionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreRegionSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "HostUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Host URL for search")]
		public string HostUrl { get; set; }

		[ApiMember(Name = "ZipCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Origin ZipCode from which you extending by radius to find entities")]
		public string ZipCode { get; set; }

		[ApiMember(Name = "Latitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Origin Latitude from which you extending by radius to find entities")]
		public double? Latitude { get; set; }

		[ApiMember(Name = "Longitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Origin Longitude from which you extending by radius to find entities")]
		public double? Longitude { get; set; }

		[ApiMember(Name = "Radius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The number of units to extend in a radius from the center of the Origin ZipCode")]
		public int? Radius { get; set; }

		[ApiMember(Name = "Units", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The unit of measure for the radius. Must be either mi (miles) or km (kilometers). Default is mi.")]
		public LocatorUnits? Units { get; set; }

		[ApiMember(Name = "RegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "This is the Region where the store is located.")]
		public int? RegionID { get; set; }

		[ApiMember(Name = "StoreContactRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "This filters if the store services this region.")]
		public int? StoreContactRegionID { get; set; }

		[ApiMember(Name = "CountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "This is the Country where the store is located.")]
		public int? CountryID { get; set; }

		[ApiMember(Name = "StoreContactCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "This filters if the store services this country.")]
		public int? StoreContactCountryID { get; set; }

		[ApiMember(Name = "City", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "This is the city where the store is located.")]
		public string City { get; set; }

		[ApiMember(Name = "StoreContactCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "This filters if the store services this city.")]
		public string StoreContactCity { get; set; }

		[ApiMember(Name = "SortByMembershipLevel", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "Enable sorting by membership level")]
		public bool? SortByMembershipLevel { get; set; }

		[ApiMember(Name = "DistrictID", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "This filters if the store services this district.")]
		public int? DistrictID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "CategoryID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
		public int? CategoryID { get; set; }

		[ApiMember(Name = "CategoryKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Key for objects")]
		public string CategoryKey { get; set; }

		[ApiMember(Name = "CategoryName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category Name for objects")]
		public string CategoryName { get; set; }

		[ApiMember(Name = "CategorySeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Category SEO URL for objects")]
		public string CategorySeoUrl { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "DisplayInStorefront", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayInStorefront { get; set; }

		[ApiMember(Name = "DisplayInStorefrontIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayInStorefrontIncludeNull { get; set; }

		[ApiMember(Name = "MinEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndDate { get; set; }

		[ApiMember(Name = "MaxEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndDate { get; set; }

		[ApiMember(Name = "MatchEndDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndDate { get; set; }

		[ApiMember(Name = "MatchEndDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndDateIncludeNull { get; set; }

		[ApiMember(Name = "LanguageID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? LanguageID { get; set; }

		[ApiMember(Name = "LanguageIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LanguageIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursFridayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursFridayEnd { get; set; }

		[ApiMember(Name = "MaxOperatingHoursFridayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursFridayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursFridayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursFridayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursFridayEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursFridayEndIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursFridayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursFridayStart { get; set; }

		[ApiMember(Name = "MaxOperatingHoursFridayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursFridayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursFridayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursFridayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursFridayStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursFridayStartIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursMondayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursMondayEnd { get; set; }

		[ApiMember(Name = "MaxOperatingHoursMondayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursMondayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursMondayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursMondayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursMondayEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursMondayEndIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursMondayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursMondayStart { get; set; }

		[ApiMember(Name = "MaxOperatingHoursMondayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursMondayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursMondayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursMondayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursMondayStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursMondayStartIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursSaturdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursSaturdayEnd { get; set; }

		[ApiMember(Name = "MaxOperatingHoursSaturdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursSaturdayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursSaturdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursSaturdayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursSaturdayEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursSaturdayEndIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursSaturdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursSaturdayStart { get; set; }

		[ApiMember(Name = "MaxOperatingHoursSaturdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursSaturdayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursSaturdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursSaturdayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursSaturdayStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursSaturdayStartIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursSundayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursSundayEnd { get; set; }

		[ApiMember(Name = "MaxOperatingHoursSundayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursSundayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursSundayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursSundayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursSundayEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursSundayEndIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursSundayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursSundayStart { get; set; }

		[ApiMember(Name = "MaxOperatingHoursSundayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursSundayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursSundayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursSundayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursSundayStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursSundayStartIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursThursdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursThursdayEnd { get; set; }

		[ApiMember(Name = "MaxOperatingHoursThursdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursThursdayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursThursdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursThursdayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursThursdayEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursThursdayEndIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursThursdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursThursdayStart { get; set; }

		[ApiMember(Name = "MaxOperatingHoursThursdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursThursdayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursThursdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursThursdayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursThursdayStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursThursdayStartIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursTuesdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursTuesdayEnd { get; set; }

		[ApiMember(Name = "MaxOperatingHoursTuesdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursTuesdayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursTuesdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursTuesdayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursTuesdayEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursTuesdayEndIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursTuesdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursTuesdayStart { get; set; }

		[ApiMember(Name = "MaxOperatingHoursTuesdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursTuesdayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursTuesdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursTuesdayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursTuesdayStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursTuesdayStartIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursWednesdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursWednesdayEnd { get; set; }

		[ApiMember(Name = "MaxOperatingHoursWednesdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursWednesdayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursWednesdayEnd", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursWednesdayEnd { get; set; }

		[ApiMember(Name = "MatchOperatingHoursWednesdayEndIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursWednesdayEndIncludeNull { get; set; }

		[ApiMember(Name = "MinOperatingHoursWednesdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinOperatingHoursWednesdayStart { get; set; }

		[ApiMember(Name = "MaxOperatingHoursWednesdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxOperatingHoursWednesdayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursWednesdayStart", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchOperatingHoursWednesdayStart { get; set; }

		[ApiMember(Name = "MatchOperatingHoursWednesdayStartIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOperatingHoursWednesdayStartIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartDate { get; set; }

		[ApiMember(Name = "MaxStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartDate { get; set; }

		[ApiMember(Name = "MatchStartDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartDate { get; set; }

		[ApiMember(Name = "MatchStartDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStartDateIncludeNull { get; set; }

		[ApiMember(Name = "About", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string About { get; set; }

		[ApiMember(Name = "AboutStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AboutStrict { get; set; }

		[ApiMember(Name = "AboutIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AboutIncludeNull { get; set; }

		[ApiMember(Name = "ExternalUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ExternalUrl { get; set; }

		[ApiMember(Name = "ExternalUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExternalUrlStrict { get; set; }

		[ApiMember(Name = "ExternalUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExternalUrlIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MissionStatement", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MissionStatement { get; set; }

		[ApiMember(Name = "MissionStatementStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MissionStatementStrict { get; set; }

		[ApiMember(Name = "MissionStatementIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MissionStatementIncludeNull { get; set; }

		[ApiMember(Name = "OperatingHoursClosedStatement", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OperatingHoursClosedStatement { get; set; }

		[ApiMember(Name = "OperatingHoursClosedStatementStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingHoursClosedStatementStrict { get; set; }

		[ApiMember(Name = "OperatingHoursClosedStatementIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingHoursClosedStatementIncludeNull { get; set; }

		[ApiMember(Name = "OperatingHoursTimeZoneId", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OperatingHoursTimeZoneId { get; set; }

		[ApiMember(Name = "OperatingHoursTimeZoneIdStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingHoursTimeZoneIdStrict { get; set; }

		[ApiMember(Name = "OperatingHoursTimeZoneIdIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingHoursTimeZoneIdIncludeNull { get; set; }

		[ApiMember(Name = "Overview", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Overview { get; set; }

		[ApiMember(Name = "OverviewStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverviewStrict { get; set; }

		[ApiMember(Name = "OverviewIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OverviewIncludeNull { get; set; }

		[ApiMember(Name = "Slogan", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Slogan { get; set; }

		[ApiMember(Name = "SloganStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SloganStrict { get; set; }

		[ApiMember(Name = "SloganIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SloganIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreSearchViewModel : SearchViewModelBase<StoreCatalogSearchForm, StoreIndexableModel>
	{
		public Dictionary<string, Nullable`1> BadgeIDs { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreSubscriptionModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "SubscriptionModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public SubscriptionModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreSubscriptionPagedResults : PagedResultsBase<StoreSubscriptionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreSubscriptionSearchModel : AmARelationshipTableBaseSearchModel
	{
		public int? SubscriptionID { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreSuggestResult : SuggestResultBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreUserModel : AmARelationshipTableBaseModel
	{
		public string UserName { get; set; }

		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "SlaveUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string SlaveUserName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreUserPagedResults : PagedResultsBase<StoreUserModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreUserSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class StoreVendorModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the Store.")]
		public string MasterSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public StoreModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "VendorModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public VendorModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreVendorPagedResults : PagedResultsBase<StoreVendorModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class StoreVendorSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SubscriptionHistoryModel : AmARelationshipTableBaseModel
	{
		public DateTime PaymentDate { get; set; }

		public bool PaymentSuccess { get; set; }

		public string Memo { get; set; }

		public int BillingPeriodsPaid { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public SubscriptionModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "PaymentModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public PaymentModel Slave { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionHistoryPagedResults : PagedResultsBase<SubscriptionHistoryModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionHistorySearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MinDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "Minimum Date")]
		public DateTime? MinDate { get; set; }

		[ApiMember(Name = "MaxDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "Maximum Date")]
		public DateTime? MaxDate { get; set; }

		public int? PaymentID { get; set; }

		public int? SubscriptionID { get; set; }

		[ApiMember(Name = "SucceededState", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "Succeeded State")]
		public bool? SucceededState { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "PaymentSuccess", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PaymentSuccess { get; set; }

		[ApiMember(Name = "MinPaymentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinPaymentDate { get; set; }

		[ApiMember(Name = "MaxPaymentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxPaymentDate { get; set; }

		[ApiMember(Name = "MatchPaymentDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchPaymentDate { get; set; }

		[ApiMember(Name = "MinBillingPeriodsPaid", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinBillingPeriodsPaid { get; set; }

		[ApiMember(Name = "MaxBillingPeriodsPaid", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxBillingPeriodsPaid { get; set; }

		[ApiMember(Name = "MatchBillingPeriodsPaid", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchBillingPeriodsPaid { get; set; }

		[ApiMember(Name = "Memo", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Memo { get; set; }

		[ApiMember(Name = "MemoStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MemoStrict { get; set; }

		[ApiMember(Name = "MemoIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MemoIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SubscriptionModel : NameableBaseModel
	{
		public DateTime MemberSince { get; set; }

		public DateTime StartsOn { get; set; }

		public DateTime? EndsOn { get; set; }

		public int BillingPeriodsTotal { get; set; }

		public int BillingPeriodsPaid { get; set; }

		public DateTime? LastPaidDate { get; set; }

		public decimal Fee { get; set; }

		public string Memo { get; set; }

		public bool AutoRenew { get; set; }

		public bool CanUpgrade { get; set; }

		public decimal? CreditUponUpgrade { get; set; }

		public bool IsAutoRefill { get; set; }

		public int? ProductMembershipLevelID { get; set; }

		public string ProductMembershipLevelKey { get; set; }

		public ProductMembershipLevelModel ProductMembershipLevel { get; set; }

		public int RepeatTypeID { get; set; }

		public string RepeatTypeKey { get; set; }

		public string RepeatTypeName { get; set; }

		public RepeatTypeModel RepeatType { get; set; }

		public int? SalesInvoiceID { get; set; }

		public string SalesInvoiceKey { get; set; }

		public SalesInvoiceModel SalesInvoice { get; set; }

		public int? UserID { get; set; }

		public string UserKey { get; set; }

		public UserModel User { get; set; }

		public int? AccountID { get; set; }

		public string AccountKey { get; set; }

		public string AccountName { get; set; }

		public AccountModel Account { get; set; }

		public int? SalesGroupID { get; set; }

		public string SalesGroupKey { get; set; }

		public SalesGroupModel SalesGroup { get; set; }

		public int? SalesOrderID { get; set; }

		public string SalesOrderKey { get; set; }

		public SalesOrderModel SalesOrder { get; set; }

		public int? ProductSubscriptionTypeID { get; set; }

		public string ProductSubscriptionTypeKey { get; set; }

		public ProductSubscriptionTypeModel ProductSubscriptionType { get; set; }

		public List<SubscriptionHistoryModel> SubscriptionHistories { get; set; }

		public List<StoreSubscriptionModel> StoreSubscriptions { get; set; }

		public string MemberNumber { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "SubscriptionTypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public SubscriptionTypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionPagedResults : PagedResultsBase<SubscriptionModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinCoverDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "Min Cover Date")]
		public DateTime? MinCoverDate { get; set; }

		[ApiMember(Name = "MaxCoverDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "Max Cover Date")]
		public DateTime? MaxCoverDate { get; set; }

		[ApiMember(Name = "CanUpgradeState", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "Can Upgrade State")]
		public bool? CanUpgradeState { get; set; }

		[ApiMember(Name = "AutoRenewState", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "Auto Renew State")]
		public bool? AutoRenewState { get; set; }

		[ApiMember(Name = "PaymentID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Payment ID")]
		public int? PaymentID { get; set; }

		[ApiMember(Name = "PaymentTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "PaymentType ID")]
		public int? PaymentTypeID { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account Key")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User Key")]
		public string UserKey { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "AutoRenew", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AutoRenew { get; set; }

		[ApiMember(Name = "CanUpgrade", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CanUpgrade { get; set; }

		[ApiMember(Name = "IsAutoRefill", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsAutoRefill { get; set; }

		[ApiMember(Name = "MinMemberSince", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMemberSince { get; set; }

		[ApiMember(Name = "MaxMemberSince", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMemberSince { get; set; }

		[ApiMember(Name = "MatchMemberSince", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMemberSince { get; set; }

		[ApiMember(Name = "MinStartsOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartsOn { get; set; }

		[ApiMember(Name = "MaxStartsOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartsOn { get; set; }

		[ApiMember(Name = "MatchStartsOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartsOn { get; set; }

		[ApiMember(Name = "MinFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinFee { get; set; }

		[ApiMember(Name = "MaxFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxFee { get; set; }

		[ApiMember(Name = "MatchFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchFee { get; set; }

		[ApiMember(Name = "MinBillingPeriodsPaid", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinBillingPeriodsPaid { get; set; }

		[ApiMember(Name = "MaxBillingPeriodsPaid", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxBillingPeriodsPaid { get; set; }

		[ApiMember(Name = "MatchBillingPeriodsPaid", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchBillingPeriodsPaid { get; set; }

		[ApiMember(Name = "MinBillingPeriodsTotal", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinBillingPeriodsTotal { get; set; }

		[ApiMember(Name = "MaxBillingPeriodsTotal", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxBillingPeriodsTotal { get; set; }

		[ApiMember(Name = "MatchBillingPeriodsTotal", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchBillingPeriodsTotal { get; set; }

		[ApiMember(Name = "RepeatTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RepeatTypeID { get; set; }

		[ApiMember(Name = "AccountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "MinCreditUponUpgrade", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinCreditUponUpgrade { get; set; }

		[ApiMember(Name = "MaxCreditUponUpgrade", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxCreditUponUpgrade { get; set; }

		[ApiMember(Name = "MatchCreditUponUpgrade", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchCreditUponUpgrade { get; set; }

		[ApiMember(Name = "MatchCreditUponUpgradeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchCreditUponUpgradeIncludeNull { get; set; }

		[ApiMember(Name = "MinEndsOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndsOn { get; set; }

		[ApiMember(Name = "MaxEndsOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndsOn { get; set; }

		[ApiMember(Name = "MatchEndsOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndsOn { get; set; }

		[ApiMember(Name = "MatchEndsOnIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndsOnIncludeNull { get; set; }

		[ApiMember(Name = "MinLastPaidDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinLastPaidDate { get; set; }

		[ApiMember(Name = "MaxLastPaidDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxLastPaidDate { get; set; }

		[ApiMember(Name = "MatchLastPaidDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchLastPaidDate { get; set; }

		[ApiMember(Name = "MatchLastPaidDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLastPaidDateIncludeNull { get; set; }

		[ApiMember(Name = "ProductMembershipLevelID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ProductMembershipLevelID { get; set; }

		[ApiMember(Name = "ProductMembershipLevelIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProductMembershipLevelIDIncludeNull { get; set; }

		[ApiMember(Name = "ProductSubscriptionTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? ProductSubscriptionTypeID { get; set; }

		[ApiMember(Name = "ProductSubscriptionTypeIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ProductSubscriptionTypeIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesGroupID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesGroupID { get; set; }

		[ApiMember(Name = "SalesGroupIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesGroupIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesInvoiceID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesInvoiceID { get; set; }

		[ApiMember(Name = "SalesInvoiceIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesInvoiceIDIncludeNull { get; set; }

		[ApiMember(Name = "SalesOrderID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SalesOrderID { get; set; }

		[ApiMember(Name = "SalesOrderIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SalesOrderIDIncludeNull { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "Memo", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Memo { get; set; }

		[ApiMember(Name = "MemoStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MemoStrict { get; set; }

		[ApiMember(Name = "MemoIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MemoIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SubscriptionTypeModel : TypableBaseModel
	{
		public List<ProductSubscriptionTypeModel> ProductSubscriptionTypes { get; set; }

		public List<SubscriptionTypeRepeatTypeModel> SubscriptionTypeRepeatTypes { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionTypePagedResults : PagedResultsBase<SubscriptionTypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class SubscriptionTypeRepeatTypeModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "MasterDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Master record.")]
		public string MasterDisplayName { get; set; }

		[ApiMember(Name = "MasterTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Master record.")]
		public string MasterTranslationKey { get; set; }

		[ApiMember(Name = "MasterSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Master record.")]
		public int? MasterSortOrder { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public SubscriptionTypeModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "RepeatTypeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public RepeatTypeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionTypeRepeatTypePagedResults : PagedResultsBase<SubscriptionTypeRepeatTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionTypeRepeatTypeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SubscriptionTypeSearchModel : TypableBaseSearchModel
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class SuggestResultBase
	{
		public int? ID { get; set; }

		public string Name { get; set; }

		public string CustomKey { get; set; }

		public string SeoUrl { get; set; }

		public string Summary { get; set; }

		public double Score { get; set; }

		public Dictionary<string, string> QueryableAttributes { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxCountryModel : NameableBaseModel
	{
		public decimal Rate { get; set; }

		public int CountryID { get; set; }

		public string CountryKey { get; set; }

		public string CountryName { get; set; }

		public CountryModel Country { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxCountryPagedResults : PagedResultsBase<TaxCountryModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxCountrySearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRate { get; set; }

		[ApiMember(Name = "MaxRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRate { get; set; }

		[ApiMember(Name = "MatchRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRate { get; set; }

		[ApiMember(Name = "CountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CountryID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxDistrictModel : NameableBaseModel
	{
		public decimal Rate { get; set; }

		public int DistrictID { get; set; }

		public string DistrictKey { get; set; }

		public string DistrictName { get; set; }

		public DistrictModel District { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxDistrictPagedResults : PagedResultsBase<TaxDistrictModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxDistrictSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRate { get; set; }

		[ApiMember(Name = "MaxRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRate { get; set; }

		[ApiMember(Name = "MatchRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRate { get; set; }

		[ApiMember(Name = "DistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? DistrictID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxRegionModel : NameableBaseModel
	{
		public decimal Rate { get; set; }

		public int RegionID { get; set; }

		public string RegionKey { get; set; }

		public string RegionName { get; set; }

		public RegionModel Region { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxRegionPagedResults : PagedResultsBase<TaxRegionModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class TaxRegionSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "MinRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRate { get; set; }

		[ApiMember(Name = "MaxRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRate { get; set; }

		[ApiMember(Name = "MatchRate", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRate { get; set; }

		[ApiMember(Name = "RegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? RegionID { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UiKeyModel : BaseModel
	{
		public string Type { get; set; }

		public List<UiTranslationModel> UiTranslations { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UiKeyPagedResults : PagedResultsBase<UiKeyModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UiKeySearchModel : BaseSearchModel
	{
		[ApiMember(Name = "Type", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Type { get; set; }

		[ApiMember(Name = "TypeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TypeStrict { get; set; }

		[ApiMember(Name = "TypeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TypeIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UiTranslationModel : BaseModel
	{
		public string Locale { get; set; }

		public string Value { get; set; }

		public int UiKeyID { get; set; }

		public string UiKeyKey { get; set; }

		public UiKeyModel UiKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UiTranslationPagedResults : PagedResultsBase<UiTranslationModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UiTranslationSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "LanguageID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Language ID for search")]
		public int? LanguageID { get; set; }

		[ApiMember(Name = "KeyStartsWith", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The key must start with this string [Case-Insensitive]")]
		public string KeyStartsWith { get; set; }

		[ApiMember(Name = "KeyContains", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The key must contain this string [Case-Insensitive]")]
		public string KeyContains { get; set; }

		[ApiMember(Name = "KeyEndsWith", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The key must end with this string [Case-Insensitive]")]
		public string KeyEndsWith { get; set; }

		[ApiMember(Name = "UiKeyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UiKeyID { get; set; }

		[ApiMember(Name = "Locale", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Locale { get; set; }

		[ApiMember(Name = "LocaleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocaleStrict { get; set; }

		[ApiMember(Name = "LocaleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocaleIncludeNull { get; set; }

		[ApiMember(Name = "Value", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Value { get; set; }

		[ApiMember(Name = "ValueStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ValueStrict { get; set; }

		[ApiMember(Name = "ValueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ValueIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserEventAttendanceModel : AmARelationshipTableBaseModel
	{
		public DateTime Date { get; set; }

		public bool HasAttended { get; set; }

		public decimal? UserEventTotal { get; set; }

		public decimal? Balance { get; set; }

		public string EventPackageType { get; set; }

		public int? SalesOrderID { get; set; }

		public SalesOrderModel SalesOrder { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "SlaveUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string SlaveUserName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		public CalendarEventModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "UserModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public UserModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserEventAttendancePagedResults : PagedResultsBase<UserEventAttendanceModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserEventAttendanceSearchModel : AmARelationshipTableBaseSearchModel
	{
		public int? CalendarEventID { get; set; }

		public string CalendarEventKey { get; set; }

		public bool? IsPaidInFull { get; set; }

		public bool? HasValidPassport { get; set; }

		public int? DaysUntilDeparture { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "HasAttended", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? HasAttended { get; set; }

		[ApiMember(Name = "MinDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDate { get; set; }

		[ApiMember(Name = "MaxDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDate { get; set; }

		[ApiMember(Name = "MatchDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDate { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserEventAttendanceTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class UserFileModel : AmARelationshipTableNameableBaseModel
	{
		[ApiMember(Name = "MasterUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string MasterUserName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public UserModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "StoredFileModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public StoredFileModel Slave { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int FileAccessTypeID { get; set; }

		[ApiMember(Name = "SortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public int? SortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserFilePagedResults : PagedResultsBase<UserFileModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserFileSearchModel : AmARelationshipTableNameableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "SeoKeywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Keywords to use in the Meta tags of the page for this object")]
		public string SeoKeywords { get; set; }

		[ApiMember(Name = "SeoKeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsStrict { get; set; }

		[ApiMember(Name = "SeoKeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoKeywordsIncludeNull { get; set; }

		[ApiMember(Name = "SeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO URL to use to link to the page for this object")]
		public string SeoUrl { get; set; }

		[ApiMember(Name = "SeoUrlStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlStrict { get; set; }

		[ApiMember(Name = "SeoUrlIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoUrlIncludeNull { get; set; }

		[ApiMember(Name = "SeoDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Description to use in the Meta tags of the page for this object")]
		public string SeoDescription { get; set; }

		[ApiMember(Name = "SeoDescriptionStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionStrict { get; set; }

		[ApiMember(Name = "SeoDescriptionIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoDescriptionIncludeNull { get; set; }

		[ApiMember(Name = "SeoMetaData", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO General Meta Data to use in the Meta tags of the page for this object")]
		public string SeoMetaData { get; set; }

		[ApiMember(Name = "SeoMetaDataStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataStrict { get; set; }

		[ApiMember(Name = "SeoMetaDataIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoMetaDataIncludeNull { get; set; }

		[ApiMember(Name = "SeoPageTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "SEO Page Title to use in the Meta tags of the page for this object")]
		public string SeoPageTitle { get; set; }

		[ApiMember(Name = "SeoPageTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleStrict { get; set; }

		[ApiMember(Name = "SeoPageTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoPageTitleIncludeNull { get; set; }

		[ApiMember(Name = "FileAccessTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? FileAccessTypeID { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class UserImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "UserID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "The identifier of the user record.")]
		public int UserID { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The custom key of the user record.")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The name of the user record.")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "User", DataType = "UserModel", ParameterType = "body", IsRequired = false,
			Description = "The user record.")]
		public UserModel User { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserImagePagedResults : PagedResultsBase<UserImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class UserModel : BaseModel
	{
		public string UserName { get; set; }

		public string Email { get; set; }

		public bool EmailConfirmed { get; set; }

		public string PasswordHash { get; set; }

		public string OverridePassword { get; set; }

		public string SecurityStamp { get; set; }

		public string PhoneNumber { get; set; }

		public bool PhoneNumberConfirmed { get; set; }

		public bool TwoFactorEnabled { get; set; }

		public DateTime? LockoutEndDateUtc { get; set; }

		public bool LockoutEnabled { get; set; }

		public int AccessFailedCount { get; set; }

		public bool IsApproved { get; set; }

		public bool RequirePasswordChangeOnNextLogin { get; set; }

		public string DisplayName { get; set; }

		public int? PercentDiscount { get; set; }

		public bool IsDeleted { get; set; }

		public bool IsSuperAdmin { get; set; }

		public bool IsEmailSubscriber { get; set; }

		public bool IsCatalogSubscriber { get; set; }

		public DateTime? DateOfBirth { get; set; }

		public string Gender { get; set; }

		public bool IsSMSAllowed { get; set; }

		public bool UseAutoPay { get; set; }

		public int? AccountID { get; set; }

		public string AccountKey { get; set; }

		public string AccountName { get; set; }

		public AccountModel Account { get; set; }

		public int? PreferredStoreID { get; set; }

		public string PreferredStoreKey { get; set; }

		public string PreferredStoreName { get; set; }

		public StoreModel PreferredStore { get; set; }

		public AddressModel BillingAddress { get; set; }

		public int? SalesRepContactsUserID { get; set; }

		public UserModel User { get; set; }

		public int? CurrencyID { get; set; }

		public string CurrencyKey { get; set; }

		public string CurrencyName { get; set; }

		public CurrencyModel Currency { get; set; }

		public int? LanguageID { get; set; }

		public string LanguageKey { get; set; }

		public LanguageModel Language { get; set; }

		public int? UserOnlineStatusID { get; set; }

		public string UserOnlineStatusKey { get; set; }

		public string UserOnlineStatusName { get; set; }

		public StatusModel UserOnlineStatus { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandUserModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseUserModel> Franchises { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<StoreUserModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<StoreUserModel> Stores { get; set; }

		public int ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }

		[ApiMember(Name = "Images", DataType = "List<UserImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<UserImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "StoredFiles", DataType = "List<UserFileModel>", ParameterType = "body", IsRequired = false,
			Description = "Stored Files for the object, optional")]
		public List<UserFileModel> StoredFiles { get; set; }

		[ApiMember(Name = "Reviews", DataType = "List<ReviewModel>", ParameterType = "body", IsRequired = false,
			Description = "User Reviews")]
		public List<ReviewModel> Reviews { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserOnlineStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserPagedResults : PagedResultsBase<UserModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserProductTypeModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterUserName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Username of the User.")]
		public string MasterUserName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "SlaveDisplayName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The DisplayName of the Slave record.")]
		public string SlaveDisplayName { get; set; }

		[ApiMember(Name = "SlaveTranslationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The TranslationKey of the Slave record.")]
		public string SlaveTranslationKey { get; set; }

		[ApiMember(Name = "SlaveSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The SortOrder of the Slave record.")]
		public int? SlaveSortOrder { get; set; }

		public UserModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "TypeModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public TypeModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserProductTypePagedResults : PagedResultsBase<UserProductTypeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserProductTypeSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "UserID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for UserID field")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Key for objects")]
		public string UserKey { get; set; }

		[ApiMember(Name = "UserUsername", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The User Name for objects")]
		public string UserUsername { get; set; }

		[ApiMember(Name = "UserIDOrCustomKeyOrUserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
		public string UserIDOrCustomKeyOrUserName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserSearchModel : BaseSearchModel
	{
		public string Name { get; set; }

		public string FirstName { get; set; }

		public string LastName { get; set; }

		public string AccountName { get; set; }

		public string AccountKey { get; set; }

		[ApiMember(Name = "AccessibleFromAccountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AccessibleFromAccountID { get; set; }

		[ApiMember(Name = "UserNameOrContactName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UserNameOrContactName { get; set; }

		[ApiMember(Name = "UserNameOrCustomKeyOrEmailOrContactName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UserNameOrCustomKeyOrEmailOrContactName { get; set; }

		[ApiMember(Name = "IDOrUserNameOrCustomKeyOrEmailOrContactName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string IDOrUserNameOrCustomKeyOrEmailOrContactName { get; set; }

		[ApiMember(Name = "UserNameOrCustomKeyOrEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UserNameOrCustomKeyOrEmail { get; set; }

		[ApiMember(Name = "UserNameOrEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UserNameOrEmail { get; set; }

		[ApiMember(Name = "OnlineStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? OnlineStatusID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "EmailConfirmed", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EmailConfirmed { get; set; }

		[ApiMember(Name = "IsApproved", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsApproved { get; set; }

		[ApiMember(Name = "IsSMSAllowed", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsSMSAllowed { get; set; }

		[ApiMember(Name = "LockoutEnabled", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LockoutEnabled { get; set; }

		[ApiMember(Name = "PhoneNumberConfirmed", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PhoneNumberConfirmed { get; set; }

		[ApiMember(Name = "RequirePasswordChangeOnNextLogin", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RequirePasswordChangeOnNextLogin { get; set; }

		[ApiMember(Name = "TwoFactorEnabled", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TwoFactorEnabled { get; set; }

		[ApiMember(Name = "UseAutoPay", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UseAutoPay { get; set; }

		[ApiMember(Name = "MinAccessFailedCount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinAccessFailedCount { get; set; }

		[ApiMember(Name = "MaxAccessFailedCount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxAccessFailedCount { get; set; }

		[ApiMember(Name = "MatchAccessFailedCount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchAccessFailedCount { get; set; }

		[ApiMember(Name = "AccountID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "CurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CurrencyID { get; set; }

		[ApiMember(Name = "CurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinDateOfBirth", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinDateOfBirth { get; set; }

		[ApiMember(Name = "MaxDateOfBirth", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxDateOfBirth { get; set; }

		[ApiMember(Name = "MatchDateOfBirth", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchDateOfBirth { get; set; }

		[ApiMember(Name = "MatchDateOfBirthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDateOfBirthIncludeNull { get; set; }

		[ApiMember(Name = "LanguageID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? LanguageID { get; set; }

		[ApiMember(Name = "LanguageIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LanguageIDIncludeNull { get; set; }

		[ApiMember(Name = "MinLockoutEndDateUtc", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinLockoutEndDateUtc { get; set; }

		[ApiMember(Name = "MaxLockoutEndDateUtc", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxLockoutEndDateUtc { get; set; }

		[ApiMember(Name = "MatchLockoutEndDateUtc", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchLockoutEndDateUtc { get; set; }

		[ApiMember(Name = "MatchLockoutEndDateUtcIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLockoutEndDateUtcIncludeNull { get; set; }

		[ApiMember(Name = "PreferredStoreID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? PreferredStoreID { get; set; }

		[ApiMember(Name = "PreferredStoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PreferredStoreIDIncludeNull { get; set; }

		[ApiMember(Name = "UserOnlineStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserOnlineStatusID { get; set; }

		[ApiMember(Name = "UserOnlineStatusIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserOnlineStatusIDIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Email", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Email { get; set; }

		[ApiMember(Name = "EmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EmailStrict { get; set; }

		[ApiMember(Name = "EmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EmailIncludeNull { get; set; }

		[ApiMember(Name = "Gender", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Gender { get; set; }

		[ApiMember(Name = "GenderStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? GenderStrict { get; set; }

		[ApiMember(Name = "GenderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? GenderIncludeNull { get; set; }

		[ApiMember(Name = "PasswordHash", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PasswordHash { get; set; }

		[ApiMember(Name = "PasswordHashStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PasswordHashStrict { get; set; }

		[ApiMember(Name = "PasswordHashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PasswordHashIncludeNull { get; set; }

		[ApiMember(Name = "PhoneNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PhoneNumber { get; set; }

		[ApiMember(Name = "PhoneNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PhoneNumberStrict { get; set; }

		[ApiMember(Name = "PhoneNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PhoneNumberIncludeNull { get; set; }

		[ApiMember(Name = "SecurityStamp", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SecurityStamp { get; set; }

		[ApiMember(Name = "SecurityStampStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SecurityStampStrict { get; set; }

		[ApiMember(Name = "SecurityStampIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SecurityStampIncludeNull { get; set; }

		[ApiMember(Name = "UserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UserName { get; set; }

		[ApiMember(Name = "UserNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserNameStrict { get; set; }

		[ApiMember(Name = "UserNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserNameIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class UserTypingStatus
	{
		public int UserID { get; set; }

		public string UserName { get; set; }

		public bool Status { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ValueType
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class VendorAccountModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public VendorModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "AccountModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public AccountModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorAccountPagedResults : PagedResultsBase<VendorAccountModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorAccountSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorCatalogSearchForm : SearchFormBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class VendorImageModel : NameableBaseModel
	{
		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		public int? SortOrder { get; set; }

		public string DisplayName { get; set; }

		public string SeoTitle { get; set; }

		public string Author { get; set; }

		public DateTime? MediaDate { get; set; }

		public string Copyright { get; set; }

		public string Location { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }

		public bool IsPrimary { get; set; }

		public int? OriginalWidth { get; set; }

		public int? OriginalHeight { get; set; }

		public string OriginalFileFormat { get; set; }

		public string OriginalFileName { get; set; }

		public bool OriginalIsStoredInDB { get; set; }

		public byte[] OriginalBytes { get; set; }

		public int? ThumbnailWidth { get; set; }

		public int? ThumbnailHeight { get; set; }

		public string ThumbnailFileFormat { get; set; }

		public string ThumbnailFileName { get; set; }

		public bool ThumbnailIsStoredInDB { get; set; }

		public byte[] ThumbnailBytes { get; set; }

		public int? MasterID { get; set; }

		public string MasterKey { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorImagePagedResults : PagedResultsBase<VendorImageModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorImageSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "IsPrimary", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsPrimary { get; set; }

		[ApiMember(Name = "OriginalIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalIsStoredInDB { get; set; }

		[ApiMember(Name = "ThumbnailIsStoredInDB", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailIsStoredInDB { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MasterID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MasterID { get; set; }

		[ApiMember(Name = "MasterIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MasterIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinMediaDate { get; set; }

		[ApiMember(Name = "MaxMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDate", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchMediaDate { get; set; }

		[ApiMember(Name = "MatchMediaDateIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMediaDateIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalHeight { get; set; }

		[ApiMember(Name = "MaxOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalHeight { get; set; }

		[ApiMember(Name = "MatchOriginalHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinOriginalWidth { get; set; }

		[ApiMember(Name = "MaxOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchOriginalWidth { get; set; }

		[ApiMember(Name = "MatchOriginalWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchOriginalWidthIncludeNull { get; set; }

		[ApiMember(Name = "MinSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSortOrder { get; set; }

		[ApiMember(Name = "MaxSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrder", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSortOrder { get; set; }

		[ApiMember(Name = "MatchSortOrderIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSortOrderIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailHeight { get; set; }

		[ApiMember(Name = "MaxThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailHeight { get; set; }

		[ApiMember(Name = "MatchThumbnailHeightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailHeightIncludeNull { get; set; }

		[ApiMember(Name = "MinThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinThumbnailWidth { get; set; }

		[ApiMember(Name = "MaxThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchThumbnailWidth { get; set; }

		[ApiMember(Name = "MatchThumbnailWidthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchThumbnailWidthIncludeNull { get; set; }

		[ApiMember(Name = "Author", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Author { get; set; }

		[ApiMember(Name = "AuthorStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorStrict { get; set; }

		[ApiMember(Name = "AuthorIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AuthorIncludeNull { get; set; }

		[ApiMember(Name = "Copyright", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Copyright { get; set; }

		[ApiMember(Name = "CopyrightStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightStrict { get; set; }

		[ApiMember(Name = "CopyrightIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CopyrightIncludeNull { get; set; }

		[ApiMember(Name = "DisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DisplayName { get; set; }

		[ApiMember(Name = "DisplayNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameStrict { get; set; }

		[ApiMember(Name = "DisplayNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DisplayNameIncludeNull { get; set; }

		[ApiMember(Name = "Location", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Location { get; set; }

		[ApiMember(Name = "LocationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationStrict { get; set; }

		[ApiMember(Name = "LocationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LocationIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileFormat { get; set; }

		[ApiMember(Name = "OriginalFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatStrict { get; set; }

		[ApiMember(Name = "OriginalFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "OriginalFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OriginalFileName { get; set; }

		[ApiMember(Name = "OriginalFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameStrict { get; set; }

		[ApiMember(Name = "OriginalFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OriginalFileNameIncludeNull { get; set; }

		[ApiMember(Name = "SeoTitle", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SeoTitle { get; set; }

		[ApiMember(Name = "SeoTitleStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleStrict { get; set; }

		[ApiMember(Name = "SeoTitleIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SeoTitleIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileFormat", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileFormat { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileFormatIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileFormatIncludeNull { get; set; }

		[ApiMember(Name = "ThumbnailFileName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ThumbnailFileName { get; set; }

		[ApiMember(Name = "ThumbnailFileNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameStrict { get; set; }

		[ApiMember(Name = "ThumbnailFileNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ThumbnailFileNameIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorImageTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorIndexableModel : IndexableModelBase
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class VendorManufacturerModel : AmARelationshipTableBaseModel
	{
		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public VendorModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ManufacturerModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ManufacturerModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorManufacturerPagedResults : PagedResultsBase<VendorManufacturerModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorManufacturerSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class VendorModel : NameableBaseModel
	{
		public string Notes1 { get; set; }

		public string AccountNumber { get; set; }

		public string Terms { get; set; }

		public string TermNotes { get; set; }

		public string SendMethod { get; set; }

		public string EmailSubject { get; set; }

		public string ShipTo { get; set; }

		public string ShipViaNotes { get; set; }

		public string SignBy { get; set; }

		public decimal? DefaultDiscount { get; set; }

		public bool AllowDropShip { get; set; }

		public decimal? RecommendedPurchaseOrderDollarAmount { get; set; }

		public bool MustResetPassword { get; set; }

		public string PasswordHash { get; set; }

		public string SecurityToken { get; set; }

		public string UserName { get; set; }

		public List<ShipmentModel> Shipments { get; set; }

		public List<PurchaseOrderModel> PurchaseOrders { get; set; }

		public List<VendorAccountModel> VendorAccounts { get; set; }

		[ApiMember(Name = "PriceRuleVendors", DataType = "List<PriceRuleVendorModel>", ParameterType = "body", IsRequired = false,
			Description = "Price rules associated with the Vendor")]
		public List<PriceRuleVendorModel> PriceRuleVendors { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "Accounts", DataType = "List<VendorAccountModel>", ParameterType = "body", IsRequired = false,
			Description = "Accounts this object is associated with")]
		public List<VendorAccountModel> Accounts { get; set; }

		[ApiMember(Name = "Brands", DataType = "List<BrandVendorModel>", ParameterType = "body", IsRequired = false,
			Description = "Brands this object is associated with")]
		public List<BrandVendorModel> Brands { get; set; }

		[ApiMember(Name = "Franchises", DataType = "List<FranchiseVendorModel>", ParameterType = "body", IsRequired = false,
			Description = "Franchises this object is associated with")]
		public List<FranchiseVendorModel> Franchises { get; set; }

		[ApiMember(Name = "Manufacturers", DataType = "List<VendorManufacturerModel>", ParameterType = "body", IsRequired = false,
			Description = "Manufacturers this object is associated with")]
		public List<VendorManufacturerModel> Manufacturers { get; set; }

		[ApiMember(Name = "Products", DataType = "List<VendorProductModel>", ParameterType = "body", IsRequired = false,
			Description = "Products this object is associated with")]
		public List<VendorProductModel> Products { get; set; }

		[ApiMember(Name = "Stores", DataType = "List<StoreVendorModel>", ParameterType = "body", IsRequired = false,
			Description = "Stores this object is associated with")]
		public List<StoreVendorModel> Stores { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }

		[ApiMember(Name = "Notes", DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
			Description = "Notes for the object, optional")]
		public List<NoteModel> Notes { get; set; }

		[ApiMember(Name = "Images", DataType = "List<VendorImageModel>", ParameterType = "body", IsRequired = false,
			Description = "Images for the object, optional")]
		public List<VendorImageModel> Images { get; set; }

		[ApiMember(Name = "PrimaryImageFileName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
		public string PrimaryImageFileName { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Dollar Amount")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool", ParameterType = "body", IsRequired = false,
			Description = "")]
		public bool MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The accepted override fee message for not reaching the minimum order requirement by Unit Quantity")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		public string MinimumOrderDollarAmountBufferProductKey { get; set; }

		public string MinimumOrderDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderDollarAmountBufferProduct { get; set; }

		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		public string MinimumOrderQuantityAmountBufferProductKey { get; set; }

		public string MinimumOrderQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumOrderQuantityAmountBufferProduct { get; set; }

		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryKey { get; set; }

		public string MinimumOrderDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderDollarAmountBufferCategory { get; set; }

		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumOrderQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumOrderQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Dollar Amount")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public decimal? MinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The warning message for not reaching the minimum free shipping requirement by Unit Quantity")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingDollarAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferProductName { get; set; }

		public ProductModel MinimumForFreeShippingQuantityAmountBufferProduct { get; set; }

		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingDollarAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingDollarAmountBufferCategory { get; set; }

		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryKey { get; set; }

		public string MinimumForFreeShippingQuantityAmountBufferCategoryName { get; set; }

		public CategoryModel MinimumForFreeShippingQuantityAmountBufferCategory { get; set; }

		[ApiMember(Name = "Reviews", DataType = "List<ReviewModel>", ParameterType = "body", IsRequired = false,
			Description = "Vendor Reviews")]
		public List<ReviewModel> Reviews { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorPagedResults : PagedResultsBase<VendorModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || MANUFACTURERADMIN || STOREADMIN || VENDORADMIN
	[PublicAPI]
	public partial class VendorProductModel : AmARelationshipTableBaseModel
	{
		public string Bin { get; set; }

		public int? MinimumInventory { get; set; }

		public int? MaximumInventory { get; set; }

		public decimal? CostMultiplier { get; set; }

		public decimal? ActualCost { get; set; }

		public decimal? ListedPrice { get; set; }

		public int? InventoryCount { get; set; }

		[ApiMember(Name = "SlaveSeoUrl", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The SEO URL of the product.")]
		public string SlaveSeoUrl { get; set; }

		[ApiMember(Name = "MasterName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Master record.")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Name of the Slave record.")]
		public string SlaveName { get; set; }

		public VendorModel Master { get; set; }

		[ApiMember(Name = "Slave", DataType = "ProductModel?", ParameterType = "body", IsRequired = false,
			Description = "The Slave record (may only be partially mapped out).")]
		public ProductModel Slave { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorProductPagedResults : PagedResultsBase<VendorProductModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorProductSearchModel : AmARelationshipTableBaseSearchModel
	{
		[ApiMember(Name = "MasterName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Master Record [Optional]")]
		public string MasterName { get; set; }

		[ApiMember(Name = "SlaveName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Name of the Slave Record [Optional]")]
		public string SlaveName { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "VendorID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
		public int? VendorID { get; set; }

		[ApiMember(Name = "VendorKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Key for objects")]
		public string VendorKey { get; set; }

		[ApiMember(Name = "VendorName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Vendor Name for objects")]
		public string VendorName { get; set; }

		[ApiMember(Name = "MinActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinActualCost { get; set; }

		[ApiMember(Name = "MaxActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxActualCost { get; set; }

		[ApiMember(Name = "MatchActualCost", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchActualCost { get; set; }

		[ApiMember(Name = "MatchActualCostIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchActualCostIncludeNull { get; set; }

		[ApiMember(Name = "MinCostMultiplier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinCostMultiplier { get; set; }

		[ApiMember(Name = "MaxCostMultiplier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxCostMultiplier { get; set; }

		[ApiMember(Name = "MatchCostMultiplier", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchCostMultiplier { get; set; }

		[ApiMember(Name = "MatchCostMultiplierIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchCostMultiplierIncludeNull { get; set; }

		[ApiMember(Name = "MinInventoryCount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinInventoryCount { get; set; }

		[ApiMember(Name = "MaxInventoryCount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxInventoryCount { get; set; }

		[ApiMember(Name = "MatchInventoryCount", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchInventoryCount { get; set; }

		[ApiMember(Name = "MatchInventoryCountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchInventoryCountIncludeNull { get; set; }

		[ApiMember(Name = "MinListedPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinListedPrice { get; set; }

		[ApiMember(Name = "MaxListedPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxListedPrice { get; set; }

		[ApiMember(Name = "MatchListedPrice", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchListedPrice { get; set; }

		[ApiMember(Name = "MatchListedPriceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchListedPriceIncludeNull { get; set; }

		[ApiMember(Name = "MinMaximumInventory", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinMaximumInventory { get; set; }

		[ApiMember(Name = "MaxMaximumInventory", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxMaximumInventory { get; set; }

		[ApiMember(Name = "MatchMaximumInventory", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchMaximumInventory { get; set; }

		[ApiMember(Name = "MatchMaximumInventoryIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMaximumInventoryIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumInventory", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinMinimumInventory { get; set; }

		[ApiMember(Name = "MaxMinimumInventory", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxMinimumInventory { get; set; }

		[ApiMember(Name = "MatchMinimumInventory", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchMinimumInventory { get; set; }

		[ApiMember(Name = "MatchMinimumInventoryIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumInventoryIncludeNull { get; set; }

		[ApiMember(Name = "Bin", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Bin { get; set; }

		[ApiMember(Name = "BinStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BinStrict { get; set; }

		[ApiMember(Name = "BinIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BinIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || BRANDADMIN || FRANCHISEADMIN || NOTMANUFACTURERADMIN || STOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "Notes", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Notes for search")]
		public string Notes { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Address ID for search")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "TermID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Vendor Term ID for search")]
		public int? TermID { get; set; }

		[ApiMember(Name = "VendorsShipViaID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Vendors Ship Via ID for search")]
		public int? VendorsShipViaID { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "AccountID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
		public int? AccountID { get; set; }

		[ApiMember(Name = "AccountIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountID field")]
		public bool? AccountIDIncludeNull { get; set; }

		[ApiMember(Name = "AccountKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Key for objects")]
		public string AccountKey { get; set; }

		[ApiMember(Name = "AccountName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Account Name for objects")]
		public string AccountName { get; set; }

		[ApiMember(Name = "AccountNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
		public bool? AccountNameStrict { get; set; }

		[ApiMember(Name = "AccountNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "When true, allow matches to null for AccountName field")]
		public bool? AccountNameIncludeNull { get; set; }

		[ApiMember(Name = "AccountIDOrCustomKeyOrNameOrDescription", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountIDOrCustomKeyOrNameOrDescription { get; set; }

		[ApiMember(Name = "BrandID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
		public int? BrandID { get; set; }

		[ApiMember(Name = "BrandIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandIDIncludeNull { get; set; }

		[ApiMember(Name = "BrandKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Key for objects")]
		public string BrandKey { get; set; }

		[ApiMember(Name = "BrandName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Brand Name for objects")]
		public string BrandName { get; set; }

		[ApiMember(Name = "BrandNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameStrict { get; set; }

		[ApiMember(Name = "BrandNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrandNameIncludeNull { get; set; }

		[ApiMember(Name = "BrandCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a brand which uses this category")]
		public int? BrandCategoryID { get; set; }

		[ApiMember(Name = "ProductID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ProductID { get; set; }

		[ApiMember(Name = "ProductKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Key for objects")]
		public string ProductKey { get; set; }

		[ApiMember(Name = "ProductName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product Name for objects")]
		public string ProductName { get; set; }

		[ApiMember(Name = "ProductSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Product SEO URL for objects")]
		public string ProductSeoUrl { get; set; }

		[ApiMember(Name = "FranchiseID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
		public int? FranchiseID { get; set; }

		[ApiMember(Name = "FranchiseIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseIDIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Key for objects")]
		public string FranchiseKey { get; set; }

		[ApiMember(Name = "FranchiseName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Franchise Name for objects")]
		public string FranchiseName { get; set; }

		[ApiMember(Name = "FranchiseNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameStrict { get; set; }

		[ApiMember(Name = "FranchiseNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FranchiseNameIncludeNull { get; set; }

		[ApiMember(Name = "FranchiseCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a Franchise which uses this category")]
		public int? FranchiseCategoryID { get; set; }

		[ApiMember(Name = "ManufacturerID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
		public int? ManufacturerID { get; set; }

		[ApiMember(Name = "ManufacturerKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Key for objects")]
		public string ManufacturerKey { get; set; }

		[ApiMember(Name = "ManufacturerName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Manufacturer Name for objects")]
		public string ManufacturerName { get; set; }

		[ApiMember(Name = "StoreID", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
		public int? StoreID { get; set; }

		[ApiMember(Name = "StoreIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StoreIDIncludeNull { get; set; }

		[ApiMember(Name = "StoreKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Key for objects")]
		public string StoreKey { get; set; }

		[ApiMember(Name = "StoreName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store Name for objects")]
		public string StoreName { get; set; }

		[ApiMember(Name = "StoreSeoUrl", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Store SEO URL for objects")]
		public string StoreSeoUrl { get; set; }

		[ApiMember(Name = "StoreCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this country")]
		public int? StoreCountryID { get; set; }

		[ApiMember(Name = "StoreRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this region")]
		public int? StoreRegionID { get; set; }

		[ApiMember(Name = "StoreCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store within this city")]
		public string StoreCity { get; set; }

		[ApiMember(Name = "StoreAnyCountryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this country")]
		public int? StoreAnyCountryID { get; set; }

		[ApiMember(Name = "StoreAnyRegionID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this region")]
		public int? StoreAnyRegionID { get; set; }

		[ApiMember(Name = "StoreAnyCity", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any contact within this city")]
		public string StoreAnyCity { get; set; }

		[ApiMember(Name = "StoreAnyDistrictID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any district")]
		public int? StoreAnyDistrictID { get; set; }

		[ApiMember(Name = "StoreAnyZipCode", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any zip code")]
		public string StoreAnyZipCode { get; set; }

		[ApiMember(Name = "StoreAnyLatitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any latitude")]
		public double? StoreAnyLatitude { get; set; }

		[ApiMember(Name = "StoreAnyLongitude", DataType = "double?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any longitude")]
		public double? StoreAnyLongitude { get; set; }

		[ApiMember(Name = "StoreAnyRadius", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any radius")]
		public int? StoreAnyRadius { get; set; }

		[ApiMember(Name = "StoreAnyUnits", DataType = "string?", ParameterType = "query", IsRequired = false,
			Description = "Match a store with any units")]
		public LocatorUnits? StoreAnyUnits { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "AllowDropShip", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AllowDropShip { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeIsPercent", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

		[ApiMember(Name = "MustResetPassword", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MustResetPassword { get; set; }

		[ApiMember(Name = "MinDefaultDiscount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinDefaultDiscount { get; set; }

		[ApiMember(Name = "MaxDefaultDiscount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxDefaultDiscount { get; set; }

		[ApiMember(Name = "MatchDefaultDiscount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchDefaultDiscount { get; set; }

		[ApiMember(Name = "MatchDefaultDiscountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDefaultDiscountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumForFreeShippingQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumForFreeShippingQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderDollarAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderDollarAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderDollarAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderDollarAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmount { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfter", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountAfter { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountAfterIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountAfterIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferCategoryIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferCategoryIDIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountBufferProductIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountBufferProductIDIncludeNull { get; set; }

		[ApiMember(Name = "MinMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MaxMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFee", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchMinimumOrderQuantityAmountOverrideFee { get; set; }

		[ApiMember(Name = "MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMinimumOrderQuantityAmountOverrideFeeIncludeNull { get; set; }

		[ApiMember(Name = "MinRecommendedPurchaseOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinRecommendedPurchaseOrderDollarAmount { get; set; }

		[ApiMember(Name = "MaxRecommendedPurchaseOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxRecommendedPurchaseOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchRecommendedPurchaseOrderDollarAmount", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchRecommendedPurchaseOrderDollarAmount { get; set; }

		[ApiMember(Name = "MatchRecommendedPurchaseOrderDollarAmountIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchRecommendedPurchaseOrderDollarAmountIncludeNull { get; set; }

		[ApiMember(Name = "AccountNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountNumber { get; set; }

		[ApiMember(Name = "AccountNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountNumberStrict { get; set; }

		[ApiMember(Name = "AccountNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountNumberIncludeNull { get; set; }

		[ApiMember(Name = "EmailSubject", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string EmailSubject { get; set; }

		[ApiMember(Name = "EmailSubjectStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EmailSubjectStrict { get; set; }

		[ApiMember(Name = "EmailSubjectIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EmailSubjectIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumForFreeShippingQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderDollarAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderDollarAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderDollarAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeAcceptedMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountOverrideFeeWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string MinimumOrderQuantityAmountWarningMessage { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageStrict { get; set; }

		[ApiMember(Name = "MinimumOrderQuantityAmountWarningMessageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MinimumOrderQuantityAmountWarningMessageIncludeNull { get; set; }

		[ApiMember(Name = "Notes1", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Notes1 { get; set; }

		[ApiMember(Name = "Notes1Strict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Notes1Strict { get; set; }

		[ApiMember(Name = "Notes1IncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? Notes1IncludeNull { get; set; }

		[ApiMember(Name = "PasswordHash", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PasswordHash { get; set; }

		[ApiMember(Name = "PasswordHashStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PasswordHashStrict { get; set; }

		[ApiMember(Name = "PasswordHashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PasswordHashIncludeNull { get; set; }

		[ApiMember(Name = "SecurityToken", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SecurityToken { get; set; }

		[ApiMember(Name = "SecurityTokenStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SecurityTokenStrict { get; set; }

		[ApiMember(Name = "SecurityTokenIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SecurityTokenIncludeNull { get; set; }

		[ApiMember(Name = "SendMethod", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SendMethod { get; set; }

		[ApiMember(Name = "SendMethodStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SendMethodStrict { get; set; }

		[ApiMember(Name = "SendMethodIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SendMethodIncludeNull { get; set; }

		[ApiMember(Name = "ShipTo", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ShipTo { get; set; }

		[ApiMember(Name = "ShipToStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShipToStrict { get; set; }

		[ApiMember(Name = "ShipToIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShipToIncludeNull { get; set; }

		[ApiMember(Name = "ShipViaNotes", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ShipViaNotes { get; set; }

		[ApiMember(Name = "ShipViaNotesStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShipViaNotesStrict { get; set; }

		[ApiMember(Name = "ShipViaNotesIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ShipViaNotesIncludeNull { get; set; }

		[ApiMember(Name = "SignBy", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string SignBy { get; set; }

		[ApiMember(Name = "SignByStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SignByStrict { get; set; }

		[ApiMember(Name = "SignByIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SignByIncludeNull { get; set; }

		[ApiMember(Name = "TermNotes", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TermNotes { get; set; }

		[ApiMember(Name = "TermNotesStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TermNotesStrict { get; set; }

		[ApiMember(Name = "TermNotesIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TermNotesIncludeNull { get; set; }

		[ApiMember(Name = "Terms", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Terms { get; set; }

		[ApiMember(Name = "TermsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TermsStrict { get; set; }

		[ApiMember(Name = "TermsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TermsIncludeNull { get; set; }

		[ApiMember(Name = "UserName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string UserName { get; set; }

		[ApiMember(Name = "UserNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserNameStrict { get; set; }

		[ApiMember(Name = "UserNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserNameIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorSearchViewModel : SearchViewModelBase<VendorCatalogSearchForm, VendorIndexableModel>
	{
	}
#endif

#if STOREFRONT || NOTADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorSuggestResult : SuggestResultBase
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VendorTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VisitModel : NameableBaseModel
	{
		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }

		public int? ContactID { get; set; }

		public string ContactKey { get; set; }

		public string ContactPhone { get; set; }

		public string ContactFax { get; set; }

		public string ContactEmail { get; set; }

		public string ContactFirstName { get; set; }

		public string ContactLastName { get; set; }

		public ContactModel Contact { get; set; }

		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The originating IP Address of the Request for the Event")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "Score", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Score of the Event")]
		public int? Score { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the Address storing location information for the Event")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string AddressKey { get; set; }

		[ApiMember(Name = "Address", DataType = "AddressModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Address storing location information for the Event")]
		public AddressModel Address { get; set; }

		[ApiMember(Name = "IPOrganizationID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the IP Organization related with this Event")]
		public int? IPOrganizationID { get; set; }

		[ApiMember(Name = "IPOrganizationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string IPOrganizationKey { get; set; }

		[ApiMember(Name = "IPOrganizationName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string IPOrganizationName { get; set; }

		[ApiMember(Name = "IPOrganization", DataType = "IPOrganizationModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the IP Organization related with this Event")]
		public IPOrganizationModel IPOrganization { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the Address storing location information for the Event")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string UserKey { get; set; }

		[ApiMember(Name = "User", DataType = "UserModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the User related with this Event")]
		public UserModel User { get; set; }

		[ApiMember(Name = "DidBounce", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "Did the visitor bounce from the site after coming to it?")]
		public bool? DidBounce { get; set; }

		[ApiMember(Name = "OperatingSystem", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "The Operating System used in the request for the Event")]
		public string OperatingSystem { get; set; }

		[ApiMember(Name = "Browser", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Browser used in the request for the Event")]
		public string Browser { get; set; }

		[ApiMember(Name = "Language", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Language of the Request for the Event")]
		public string Language { get; set; }

		[ApiMember(Name = "ContainsSocialProfile", DataType = "bool?", ParameterType = "body", IsRequired = false,
			Description = "Does the Event contain Social Profile Data?")]
		public bool? ContainsSocialProfile { get; set; }

		[ApiMember(Name = "Delta", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The number of changes from this Event")]
		public int? Delta { get; set; }

		[ApiMember(Name = "Duration", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The duration of this event in seconds")]
		public int? Duration { get; set; }

		[ApiMember(Name = "StartedOn", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The time at which the Event started")]
		public DateTime? StartedOn { get; set; }

		[ApiMember(Name = "EndedOn", DataType = "DateTime?", ParameterType = "body", IsRequired = false,
			Description = "The time at which the Event ended")]
		public DateTime? EndedOn { get; set; }

		[ApiMember(Name = "Time", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The time of the Event")]
		public string Time { get; set; }

		[ApiMember(Name = "EntryPage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The entry page of the event")]
		public string EntryPage { get; set; }

		[ApiMember(Name = "ExitPage", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The the exit page of the event")]
		public string ExitPage { get; set; }

		[ApiMember(Name = "IsFirstTrigger", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Is this the first time this event has triggered?")]
		public bool? IsFirstTrigger { get; set; }

		[ApiMember(Name = "Flash", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Was Flash used to trigger this event? If so, the version of Flash")]
		public string Flash { get; set; }

		[ApiMember(Name = "Keywords", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The keywords for the Event")]
		public string Keywords { get; set; }

		[ApiMember(Name = "PartitionKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Partition Key for the Event")]
		public string PartitionKey { get; set; }

		[ApiMember(Name = "Referrer", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Referring Source of the Event (such as Google, Bing or another website)")]
		public string Referrer { get; set; }

		[ApiMember(Name = "ReferringHost", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Host URL of the Referring Source of the Event (such as www.google.com)")]
		public string ReferringHost { get; set; }

		[ApiMember(Name = "RowKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The Row Key for this Event")]
		public string RowKey { get; set; }

		[ApiMember(Name = "Source", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Source of this Event as an integer")]
		public int? Source { get; set; }

		[ApiMember(Name = "TotalTriggers", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The total number of Triggers for this event")]
		public int? TotalTriggers { get; set; }

		[ApiMember(Name = "CampaignID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Campaign related to this Event")]
		public int? CampaignID { get; set; }

		[ApiMember(Name = "Campaign", DataType = "CampaignModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Campaign related to this Event")]
		public CampaignModel Campaign { get; set; }

		[ApiMember(Name = "CampaignKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string CampaignKey { get; set; }

		[ApiMember(Name = "CampaignName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string CampaignName { get; set; }

		[ApiMember(Name = "SiteDomainID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Site Domain related to this Event")]
		public int? SiteDomainID { get; set; }

		[ApiMember(Name = "SiteDomain", DataType = "SiteDomainModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Site Domain related to this Event")]
		public SiteDomainModel SiteDomain { get; set; }

		[ApiMember(Name = "SiteDomainKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SiteDomainKey { get; set; }

		[ApiMember(Name = "SiteDomainName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string SiteDomainName { get; set; }

		[ApiMember(Name = "VisitorID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The identifier of the Visitor related to this Event")]
		public int? VisitorID { get; set; }

		[ApiMember(Name = "Visitor", DataType = "VisitorModel?", ParameterType = "body", IsRequired = false,
			Description = "The body of the Visitor related to this Event")]
		public VisitorModel Visitor { get; set; }

		[ApiMember(Name = "VisitorKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string VisitorKey { get; set; }

		[ApiMember(Name = "VisitorName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string VisitorName { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VisitorModel : NameableBaseModel
	{
		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "The originating IP Address of the Request for the Event")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "Score", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Score of the Event")]
		public int? Score { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the Address storing location information for the Event")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string AddressKey { get; set; }

		[ApiMember(Name = "Address", DataType = "AddressModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the Address storing location information for the Event")]
		public AddressModel Address { get; set; }

		[ApiMember(Name = "IPOrganizationID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the IP Organization related with this Event")]
		public int? IPOrganizationID { get; set; }

		[ApiMember(Name = "IPOrganizationKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string IPOrganizationKey { get; set; }

		[ApiMember(Name = "IPOrganizationName", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string IPOrganizationName { get; set; }

		[ApiMember(Name = "IPOrganization", DataType = "IPOrganizationModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the IP Organization related with this Event")]
		public IPOrganizationModel IPOrganization { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "The Identifier for the Address storing location information for the Event")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserKey", DataType = "string?", ParameterType = "body", IsRequired = false,
			Description = "")]
		public string UserKey { get; set; }

		[ApiMember(Name = "User", DataType = "UserModel", ParameterType = "body", IsRequired = false,
			Description = "The body of the User related with this Event")]
		public UserModel User { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VisitorPagedResults : PagedResultsBase<VisitorModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VisitorSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressIDIncludeNull { get; set; }

		[ApiMember(Name = "IPOrganizationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? IPOrganizationID { get; set; }

		[ApiMember(Name = "IPOrganizationIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPOrganizationIDIncludeNull { get; set; }

		[ApiMember(Name = "MinScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinScore { get; set; }

		[ApiMember(Name = "MaxScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxScore { get; set; }

		[ApiMember(Name = "MatchScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchScore { get; set; }

		[ApiMember(Name = "MatchScoreIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchScoreIncludeNull { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "IPAddressStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressStrict { get; set; }

		[ApiMember(Name = "IPAddressIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VisitPagedResults : PagedResultsBase<VisitModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VisitSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "ContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "Contact ID for search")]
		public int? ContactID { get; set; }

		[ApiMember(Name = "ContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactIDIncludeNull { get; set; }

		[ApiMember(Name = "ContactKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Key for search")]
		public string ContactKey { get; set; }

		[ApiMember(Name = "ContactKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyStrict { get; set; }

		[ApiMember(Name = "ContactKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactKeyIncludeNull { get; set; }

		[ApiMember(Name = "ContactFirstName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact First Name for search")]
		public string ContactFirstName { get; set; }

		[ApiMember(Name = "ContactFirstNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameStrict { get; set; }

		[ApiMember(Name = "ContactFirstNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFirstNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactLastName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Last Name for search")]
		public string ContactLastName { get; set; }

		[ApiMember(Name = "ContactLastNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameStrict { get; set; }

		[ApiMember(Name = "ContactLastNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactLastNameIncludeNull { get; set; }

		[ApiMember(Name = "ContactPhone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Phone for search")]
		public string ContactPhone { get; set; }

		[ApiMember(Name = "ContactPhoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneStrict { get; set; }

		[ApiMember(Name = "ContactPhoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactPhoneIncludeNull { get; set; }

		[ApiMember(Name = "ContactFax", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Fax for search")]
		public string ContactFax { get; set; }

		[ApiMember(Name = "ContactFaxStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxStrict { get; set; }

		[ApiMember(Name = "ContactFaxIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactFaxIncludeNull { get; set; }

		[ApiMember(Name = "ContactEmail", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Contact Email for search")]
		public string ContactEmail { get; set; }

		[ApiMember(Name = "ContactEmailStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailStrict { get; set; }

		[ApiMember(Name = "ContactEmailIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContactEmailIncludeNull { get; set; }

		[ApiMember(Name = "AddressID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AddressID { get; set; }

		[ApiMember(Name = "AddressIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AddressIDIncludeNull { get; set; }

		[ApiMember(Name = "CampaignID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CampaignID { get; set; }

		[ApiMember(Name = "CampaignIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CampaignIDIncludeNull { get; set; }

		[ApiMember(Name = "ContainsSocialProfile", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContainsSocialProfile { get; set; }

		[ApiMember(Name = "ContainsSocialProfileIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ContainsSocialProfileIncludeNull { get; set; }

		[ApiMember(Name = "MinDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDelta { get; set; }

		[ApiMember(Name = "MaxDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDelta { get; set; }

		[ApiMember(Name = "MatchDelta", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDelta { get; set; }

		[ApiMember(Name = "MatchDeltaIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDeltaIncludeNull { get; set; }

		[ApiMember(Name = "DidBounce", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DidBounce { get; set; }

		[ApiMember(Name = "DidBounceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DidBounceIncludeNull { get; set; }

		[ApiMember(Name = "MinDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinDuration { get; set; }

		[ApiMember(Name = "MaxDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxDuration { get; set; }

		[ApiMember(Name = "MatchDuration", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchDuration { get; set; }

		[ApiMember(Name = "MatchDurationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchDurationIncludeNull { get; set; }

		[ApiMember(Name = "MinEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinEndedOn { get; set; }

		[ApiMember(Name = "MaxEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxEndedOn { get; set; }

		[ApiMember(Name = "MatchEndedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchEndedOn { get; set; }

		[ApiMember(Name = "MatchEndedOnIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchEndedOnIncludeNull { get; set; }

		[ApiMember(Name = "IPOrganizationID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? IPOrganizationID { get; set; }

		[ApiMember(Name = "IPOrganizationIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPOrganizationIDIncludeNull { get; set; }

		[ApiMember(Name = "IsFirstTrigger", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsFirstTrigger { get; set; }

		[ApiMember(Name = "IsFirstTriggerIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsFirstTriggerIncludeNull { get; set; }

		[ApiMember(Name = "MinScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinScore { get; set; }

		[ApiMember(Name = "MaxScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxScore { get; set; }

		[ApiMember(Name = "MatchScore", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchScore { get; set; }

		[ApiMember(Name = "MatchScoreIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchScoreIncludeNull { get; set; }

		[ApiMember(Name = "SiteDomainID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? SiteDomainID { get; set; }

		[ApiMember(Name = "SiteDomainIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? SiteDomainIDIncludeNull { get; set; }

		[ApiMember(Name = "MinSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinSource { get; set; }

		[ApiMember(Name = "MaxSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxSource { get; set; }

		[ApiMember(Name = "MatchSource", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchSource { get; set; }

		[ApiMember(Name = "MatchSourceIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchSourceIncludeNull { get; set; }

		[ApiMember(Name = "MinStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MinStartedOn { get; set; }

		[ApiMember(Name = "MaxStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MaxStartedOn { get; set; }

		[ApiMember(Name = "MatchStartedOn", DataType = "DateTime?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public DateTime? MatchStartedOn { get; set; }

		[ApiMember(Name = "MatchStartedOnIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStartedOnIncludeNull { get; set; }

		[ApiMember(Name = "MinTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinTotalTriggers { get; set; }

		[ApiMember(Name = "MaxTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxTotalTriggers { get; set; }

		[ApiMember(Name = "MatchTotalTriggers", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchTotalTriggers { get; set; }

		[ApiMember(Name = "MatchTotalTriggersIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchTotalTriggersIncludeNull { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "UserIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? UserIDIncludeNull { get; set; }

		[ApiMember(Name = "VisitorID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? VisitorID { get; set; }

		[ApiMember(Name = "VisitorIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? VisitorIDIncludeNull { get; set; }

		[ApiMember(Name = "Browser", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Browser { get; set; }

		[ApiMember(Name = "BrowserStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrowserStrict { get; set; }

		[ApiMember(Name = "BrowserIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BrowserIncludeNull { get; set; }

		[ApiMember(Name = "EntryPage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string EntryPage { get; set; }

		[ApiMember(Name = "EntryPageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EntryPageStrict { get; set; }

		[ApiMember(Name = "EntryPageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? EntryPageIncludeNull { get; set; }

		[ApiMember(Name = "ExitPage", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ExitPage { get; set; }

		[ApiMember(Name = "ExitPageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExitPageStrict { get; set; }

		[ApiMember(Name = "ExitPageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ExitPageIncludeNull { get; set; }

		[ApiMember(Name = "Flash", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Flash { get; set; }

		[ApiMember(Name = "FlashStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FlashStrict { get; set; }

		[ApiMember(Name = "FlashIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? FlashIncludeNull { get; set; }

		[ApiMember(Name = "IPAddress", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string IPAddress { get; set; }

		[ApiMember(Name = "IPAddressStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressStrict { get; set; }

		[ApiMember(Name = "IPAddressIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IPAddressIncludeNull { get; set; }

		[ApiMember(Name = "Keywords", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Keywords { get; set; }

		[ApiMember(Name = "KeywordsStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? KeywordsStrict { get; set; }

		[ApiMember(Name = "KeywordsIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? KeywordsIncludeNull { get; set; }

		[ApiMember(Name = "Language", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Language { get; set; }

		[ApiMember(Name = "LanguageStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LanguageStrict { get; set; }

		[ApiMember(Name = "LanguageIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? LanguageIncludeNull { get; set; }

		[ApiMember(Name = "OperatingSystem", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string OperatingSystem { get; set; }

		[ApiMember(Name = "OperatingSystemStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingSystemStrict { get; set; }

		[ApiMember(Name = "OperatingSystemIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? OperatingSystemIncludeNull { get; set; }

		[ApiMember(Name = "PartitionKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string PartitionKey { get; set; }

		[ApiMember(Name = "PartitionKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PartitionKeyStrict { get; set; }

		[ApiMember(Name = "PartitionKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? PartitionKeyIncludeNull { get; set; }

		[ApiMember(Name = "Referrer", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Referrer { get; set; }

		[ApiMember(Name = "ReferrerStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferrerStrict { get; set; }

		[ApiMember(Name = "ReferrerIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferrerIncludeNull { get; set; }

		[ApiMember(Name = "ReferringHost", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ReferringHost { get; set; }

		[ApiMember(Name = "ReferringHostStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferringHostStrict { get; set; }

		[ApiMember(Name = "ReferringHostIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ReferringHostIncludeNull { get; set; }

		[ApiMember(Name = "RowKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RowKey { get; set; }

		[ApiMember(Name = "RowKeyStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RowKeyStrict { get; set; }

		[ApiMember(Name = "RowKeyIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RowKeyIncludeNull { get; set; }

		[ApiMember(Name = "Time", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Time { get; set; }

		[ApiMember(Name = "TimeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeStrict { get; set; }

		[ApiMember(Name = "TimeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class VisitStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class WalletModel : NameableBaseModel
	{
		public string CreditCardNumber { get; set; }

		public string AccountNumber { get; set; }

		public string RoutingNumber { get; set; }

		public string BankName { get; set; }

		public string CardHolderName { get; set; }

		public int? ExpirationMonth { get; set; }

		public int? ExpirationYear { get; set; }

		public string Token { get; set; }

		public string CardType { get; set; }

		public bool IsDefault { get; set; }

		public int UserID { get; set; }

		public string UserKey { get; set; }

		public UserModel User { get; set; }

		public int? CurrencyID { get; set; }

		public string CurrencyKey { get; set; }

		public string CurrencyName { get; set; }

		public CurrencyModel Currency { get; set; }

		public int? AccountContactID { get; set; }

		public string AccountContactKey { get; set; }

		public string AccountContactName { get; set; }

		public AccountContactModel AccountContact { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class WalletPagedResults : PagedResultsBase<WalletModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class WalletSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "IsDefault", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? IsDefault { get; set; }

		[ApiMember(Name = "UserID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? UserID { get; set; }

		[ApiMember(Name = "AccountContactID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? AccountContactID { get; set; }

		[ApiMember(Name = "AccountContactIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountContactIDIncludeNull { get; set; }

		[ApiMember(Name = "CurrencyID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? CurrencyID { get; set; }

		[ApiMember(Name = "CurrencyIDIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CurrencyIDIncludeNull { get; set; }

		[ApiMember(Name = "MinExpirationMonth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinExpirationMonth { get; set; }

		[ApiMember(Name = "MaxExpirationMonth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxExpirationMonth { get; set; }

		[ApiMember(Name = "MatchExpirationMonth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchExpirationMonth { get; set; }

		[ApiMember(Name = "MatchExpirationMonthIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchExpirationMonthIncludeNull { get; set; }

		[ApiMember(Name = "MinExpirationYear", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinExpirationYear { get; set; }

		[ApiMember(Name = "MaxExpirationYear", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxExpirationYear { get; set; }

		[ApiMember(Name = "MatchExpirationYear", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchExpirationYear { get; set; }

		[ApiMember(Name = "MatchExpirationYearIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchExpirationYearIncludeNull { get; set; }

		[ApiMember(Name = "AccountNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AccountNumber { get; set; }

		[ApiMember(Name = "AccountNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountNumberStrict { get; set; }

		[ApiMember(Name = "AccountNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AccountNumberIncludeNull { get; set; }

		[ApiMember(Name = "BankName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string BankName { get; set; }

		[ApiMember(Name = "BankNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BankNameStrict { get; set; }

		[ApiMember(Name = "BankNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? BankNameIncludeNull { get; set; }

		[ApiMember(Name = "CardHolderName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CardHolderName { get; set; }

		[ApiMember(Name = "CardHolderNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CardHolderNameStrict { get; set; }

		[ApiMember(Name = "CardHolderNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CardHolderNameIncludeNull { get; set; }

		[ApiMember(Name = "CardType", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CardType { get; set; }

		[ApiMember(Name = "CardTypeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CardTypeStrict { get; set; }

		[ApiMember(Name = "CardTypeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CardTypeIncludeNull { get; set; }

		[ApiMember(Name = "CreditCardNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CreditCardNumber { get; set; }

		[ApiMember(Name = "CreditCardNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CreditCardNumberStrict { get; set; }

		[ApiMember(Name = "CreditCardNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CreditCardNumberIncludeNull { get; set; }

		[ApiMember(Name = "RoutingNumber", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string RoutingNumber { get; set; }

		[ApiMember(Name = "RoutingNumberStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RoutingNumberStrict { get; set; }

		[ApiMember(Name = "RoutingNumberIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? RoutingNumberIncludeNull { get; set; }

		[ApiMember(Name = "Token", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string Token { get; set; }

		[ApiMember(Name = "TokenStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TokenStrict { get; set; }

		[ApiMember(Name = "TokenIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TokenIncludeNull { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ZipCodeModel : BaseModel
	{
		public string ZipCodeValue { get; set; }

		public string ZipType { get; set; }

		public string CityName { get; set; }

		public string CityType { get; set; }

		public string CountyName { get; set; }

		public long? CountyFIPS { get; set; }

		public string StateName { get; set; }

		public string StateAbbreviation { get; set; }

		public long? StateFIPS { get; set; }

		public long? MSACode { get; set; }

		public string AreaCode { get; set; }

		public string TimeZone { get; set; }

		public long? UTC { get; set; }

		public string DST { get; set; }

		public decimal? Latitude { get; set; }

		public decimal? Longitude { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ZipCodePagedResults : PagedResultsBase<ZipCodeModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ZipCodeSearchModel : BaseSearchModel
	{
		[ApiMember(Name = "ZipCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "Zip Code Number (5-digit)")]
		public string ZipCode { get; set; }

		[ApiMember(Name = "MinCountyFIPS", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MinCountyFIPS { get; set; }

		[ApiMember(Name = "MaxCountyFIPS", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MaxCountyFIPS { get; set; }

		[ApiMember(Name = "MatchCountyFIPS", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MatchCountyFIPS { get; set; }

		[ApiMember(Name = "MatchCountyFIPSIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchCountyFIPSIncludeNull { get; set; }

		[ApiMember(Name = "MinLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLatitude { get; set; }

		[ApiMember(Name = "MaxLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLatitude { get; set; }

		[ApiMember(Name = "MatchLatitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLatitude { get; set; }

		[ApiMember(Name = "MatchLatitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLatitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MinLongitude { get; set; }

		[ApiMember(Name = "MaxLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MaxLongitude { get; set; }

		[ApiMember(Name = "MatchLongitude", DataType = "decimal?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public decimal? MatchLongitude { get; set; }

		[ApiMember(Name = "MatchLongitudeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchLongitudeIncludeNull { get; set; }

		[ApiMember(Name = "MinMSACode", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MinMSACode { get; set; }

		[ApiMember(Name = "MaxMSACode", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MaxMSACode { get; set; }

		[ApiMember(Name = "MatchMSACode", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MatchMSACode { get; set; }

		[ApiMember(Name = "MatchMSACodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchMSACodeIncludeNull { get; set; }

		[ApiMember(Name = "MinStateFIPS", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MinStateFIPS { get; set; }

		[ApiMember(Name = "MaxStateFIPS", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MaxStateFIPS { get; set; }

		[ApiMember(Name = "MatchStateFIPS", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MatchStateFIPS { get; set; }

		[ApiMember(Name = "MatchStateFIPSIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchStateFIPSIncludeNull { get; set; }

		[ApiMember(Name = "MinUTC", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MinUTC { get; set; }

		[ApiMember(Name = "MaxUTC", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MaxUTC { get; set; }

		[ApiMember(Name = "MatchUTC", DataType = "long?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public long? MatchUTC { get; set; }

		[ApiMember(Name = "MatchUTCIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? MatchUTCIncludeNull { get; set; }

		[ApiMember(Name = "AreaCode", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string AreaCode { get; set; }

		[ApiMember(Name = "AreaCodeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AreaCodeStrict { get; set; }

		[ApiMember(Name = "AreaCodeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? AreaCodeIncludeNull { get; set; }

		[ApiMember(Name = "CityName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CityName { get; set; }

		[ApiMember(Name = "CityNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CityNameStrict { get; set; }

		[ApiMember(Name = "CityNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CityNameIncludeNull { get; set; }

		[ApiMember(Name = "CityType", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CityType { get; set; }

		[ApiMember(Name = "CityTypeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CityTypeStrict { get; set; }

		[ApiMember(Name = "CityTypeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CityTypeIncludeNull { get; set; }

		[ApiMember(Name = "CountyName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string CountyName { get; set; }

		[ApiMember(Name = "CountyNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CountyNameStrict { get; set; }

		[ApiMember(Name = "CountyNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? CountyNameIncludeNull { get; set; }

		[ApiMember(Name = "DST", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string DST { get; set; }

		[ApiMember(Name = "DSTStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DSTStrict { get; set; }

		[ApiMember(Name = "DSTIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? DSTIncludeNull { get; set; }

		[ApiMember(Name = "StateAbbreviation", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string StateAbbreviation { get; set; }

		[ApiMember(Name = "StateAbbreviationStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StateAbbreviationStrict { get; set; }

		[ApiMember(Name = "StateAbbreviationIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StateAbbreviationIncludeNull { get; set; }

		[ApiMember(Name = "StateName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string StateName { get; set; }

		[ApiMember(Name = "StateNameStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StateNameStrict { get; set; }

		[ApiMember(Name = "StateNameIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? StateNameIncludeNull { get; set; }

		[ApiMember(Name = "TimeZone", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string TimeZone { get; set; }

		[ApiMember(Name = "TimeZoneStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeZoneStrict { get; set; }

		[ApiMember(Name = "TimeZoneIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? TimeZoneIncludeNull { get; set; }

		[ApiMember(Name = "ZipCodeValue", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ZipCodeValue { get; set; }

		[ApiMember(Name = "ZipCodeValueStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ZipCodeValueStrict { get; set; }

		[ApiMember(Name = "ZipCodeValueIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ZipCodeValueIncludeNull { get; set; }

		[ApiMember(Name = "ZipType", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "")]
		public string ZipType { get; set; }

		[ApiMember(Name = "ZipTypeStrict", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ZipTypeStrict { get; set; }

		[ApiMember(Name = "ZipTypeIncludeNull", DataType = "bool?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public bool? ZipTypeIncludeNull { get; set; }
	}
#endif

#if STOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ZoneModel : NameableBaseModel
	{
		public int Height { get; set; }

		public int Width { get; set; }

		public List<AdZoneModel> AdZones { get; set; }

		[ApiMember(Name = "TypeID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Type of this Account, required if no TypeModel present")]
		public int TypeID { get; set; }

		[ApiMember(Name = "Type", DataType = "TypeModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Type of this Account, required if no TypeID present")]
		public TypeModel Type { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Type of this Account, read-only")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Type of this Account, read-only")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Display Name for the Type of this object, read-only")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "body", IsRequired = false,
			Description = "Translation Key for the Type of this object, read-only")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "TypeSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Type of this object, read-only")]
		public int? TypeSortOrder { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int", ParameterType = "body", IsRequired = true,
			Description = "Identifier for the Status of this object, required if no StatusModel present")]
		public int StatusID { get; set; }

		[ApiMember(Name = "Status", DataType = "StatusModel", ParameterType = "body", IsRequired = true,
			Description = "Model for Status of this object, required if no StatusID present")]
		public StatusModel Status { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Key for the Status of this object, read-only")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Name for the Status of this object, read-only")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Display Name for the Status of this object, read-only")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "body", IsRequired = true,
			Description = "Translation Key for the Status of this object, read-only")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "StatusSortOrder", DataType = "int?", ParameterType = "body", IsRequired = false,
			Description = "Sort Order for the Status of this object, read-only")]
		public int? StatusSortOrder { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ZonePagedResults : PagedResultsBase<ZoneModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ZoneSearchModel : NameableBaseSearchModel
	{
		[ApiMember(Name = "TypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects")]
		public int? TypeID { get; set; }

		[ApiMember(Name = "TypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically include")]
		public int?[] TypeIDs { get; set; }

		[ApiMember(Name = "ExcludedTypeID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Type ID for objects to specifically exclude")]
		public int? ExcludedTypeID { get; set; }

		[ApiMember(Name = "ExcludedTypeIDs", DataType = "int?[]", ParameterType = "query", IsRequired = false,
			Description = "The Type IDs for objects to specifically exclude")]
		public int?[] ExcludedTypeIDs { get; set; }

		[ApiMember(Name = "TypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects")]
		public string TypeKey { get; set; }

		[ApiMember(Name = "TypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically include")]
		public string[] TypeKeys { get; set; }

		[ApiMember(Name = "ExcludedTypeKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Key for objects to specifically exclude")]
		public string ExcludedTypeKey { get; set; }

		[ApiMember(Name = "ExcludedTypeKeys", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Keys for objects to specifically exclude")]
		public string[] ExcludedTypeKeys { get; set; }

		[ApiMember(Name = "TypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects")]
		public string TypeName { get; set; }

		[ApiMember(Name = "TypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically include")]
		public string[] TypeNames { get; set; }

		[ApiMember(Name = "ExcludedTypeName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Name for objects to specifically exclude")]
		public string ExcludedTypeName { get; set; }

		[ApiMember(Name = "ExcludedTypeNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Names for objects to specifically exclude")]
		public string[] ExcludedTypeNames { get; set; }

		[ApiMember(Name = "TypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects")]
		public string TypeDisplayName { get; set; }

		[ApiMember(Name = "TypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically include")]
		public string[] TypeDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Name for objects to specifically exclude")]
		public string ExcludedTypeDisplayName { get; set; }

		[ApiMember(Name = "ExcludedTypeDisplayNames", DataType = "string[]", ParameterType = "query", IsRequired = false,
			Description = "The Type Display Names for objects to specifically exclude")]
		public string[] ExcludedTypeDisplayNames { get; set; }

		[ApiMember(Name = "TypeTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Type Translation Key for objects")]
		public string TypeTranslationKey { get; set; }

		[ApiMember(Name = "StatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects")]
		public int? StatusID { get; set; }

		[ApiMember(Name = "StatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically include")]
		public int?[] StatusIDs { get; set; }

		[ApiMember(Name = "ExcludedStatusID", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status ID for objects to specifically exclude")]
		public int? ExcludedStatusID { get; set; }

		[ApiMember(Name = "ExcludedStatusIDs", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "The Status IDs for objects to specifically exclude")]
		public int?[] ExcludedStatusIDs { get; set; }

		[ApiMember(Name = "StatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects")]
		public string StatusKey { get; set; }

		[ApiMember(Name = "StatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically include")]
		public string[] StatusKeys { get; set; }

		[ApiMember(Name = "ExcludedStatusKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Key for objects to specifically exclude")]
		public string ExcludedStatusKey { get; set; }

		[ApiMember(Name = "ExcludedStatusKeys", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Keys for objects to specifically exclude")]
		public string[] ExcludedStatusKeys { get; set; }

		[ApiMember(Name = "StatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects")]
		public string StatusName { get; set; }

		[ApiMember(Name = "StatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically include")]
		public string[] StatusNames { get; set; }

		[ApiMember(Name = "ExcludedStatusName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Name for objects to specifically exclude")]
		public string ExcludedStatusName { get; set; }

		[ApiMember(Name = "ExcludedStatusNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Names for objects to specifically exclude")]
		public string[] ExcludedStatusNames { get; set; }

		[ApiMember(Name = "StatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects")]
		public string StatusDisplayName { get; set; }

		[ApiMember(Name = "StatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically include")]
		public string[] StatusDisplayNames { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayName", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Name for objects to specifically exclude")]
		public string ExcludedStatusDisplayName { get; set; }

		[ApiMember(Name = "ExcludedStatusDisplayNames", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Display Names for objects to specifically exclude")]
		public string[] ExcludedStatusDisplayNames { get; set; }

		[ApiMember(Name = "StatusTranslationKey", DataType = "string", ParameterType = "query", IsRequired = false,
			Description = "The Status Translation Key for objects")]
		public string StatusTranslationKey { get; set; }

		[ApiMember(Name = "MinHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinHeight { get; set; }

		[ApiMember(Name = "MaxHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxHeight { get; set; }

		[ApiMember(Name = "MatchHeight", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchHeight { get; set; }

		[ApiMember(Name = "MinWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MinWidth { get; set; }

		[ApiMember(Name = "MaxWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MaxWidth { get; set; }

		[ApiMember(Name = "MatchWidth", DataType = "int?", ParameterType = "query", IsRequired = false,
			Description = "")]
		public int? MatchWidth { get; set; }
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ZoneStatusPagedResults : PagedResultsBase<StatusModel>
	{
	}
#endif

#if NOTSTOREFRONT || ADMIN || NOTBRANDADMIN || NOTFRANCHISEADMIN || NOTMANUFACTURERADMIN || NOTSTOREADMIN || NOTVENDORADMIN
	[PublicAPI]
	public partial class ZoneTypePagedResults : PagedResultsBase<TypeModel>
	{
	}
#endif
}
