/**
 * @file framework/store/_api/cvApi.Shipping.ts
 * @author Copyright (c) 2015-2023 clarity-ventures.com. All rights reserved.
 * @desc The Angular Service module written in TypeScript
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/AngJS/framework/store/_api/
 */
module cef.store.api {

	/**
	 * Create shipments for order.
	 * @public
	 */
	export interface CreateShipmentsForOrderDto {
		Shipments: Array<JBMShipment>;
	}
	/**
	 * Use to get a list of package types
	 * @see {@link TypeSearchModel}
	 * @public
	 */
	export interface GetPackageTypesDto extends TypeSearchModel {
	}
	/**
	 * Get the current price lists for an account.
	 * @public
	 */
	export interface GetShipmentByIDDto {
		ShipmentID: number;
	}
	/**
	 * Get the current price lists for an account.
	 * @public
	 */
	export interface GetShipmentsBySalesGroupIDDto {
		SalesGroupID: number;
	}
	/**
	 * Use to get a list of shipment statuses
	 * @see {@link StatusSearchModel}
	 * @public
	 */
	export interface GetShipmentStatusesDto extends StatusSearchModel {
	}
	/**
	 * Use to get a list of shipment types
	 * @see {@link TypeSearchModel}
	 * @public
	 */
	export interface GetShipmentTypesDto extends TypeSearchModel {
	}

	export class Shipping extends ServiceStackRoute {
		/**
		 * Create shipments for order.
		 * @param {@link cef.store.api.CreateShipmentsForOrderDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Clients.JBM.CreateShipmentsForOrder
		 * @path <API Root>/Shipping/Shipment/CreateShipments
		 * @verb POST
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		CreateShipmentsForOrder = (routeParams: CreateShipmentsForOrderDto) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Shipping", "Shipment", "CreateShipments"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Use to get a list of package types
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetPackageTypes
		 * @path <API Root>/Shipping/PackageTypes
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<PackageTypePagedResults>}
		 * @public
		 */
		GetPackageTypes = (routeParams?: GetPackageTypesDto) => this.$http<PackageTypePagedResults>({
			url: [this.rootUrl, "Shipping", "PackageTypes"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Get the current price lists for an account.
		 * @generatedByCSharpType Clarity.Clients.JBM.GetShipmentByID
		 * @path <API Root>/Shipping/Shipment/ByID
		 * @verb GET
		 * @returns {ng.IHttpPromise<ShipmentModel>}
		 * @public
		 */
		GetShipmentByID = (routeParams: GetShipmentByIDDto) => this.$http<ShipmentModel>({
			url: [this.rootUrl, "Shipping", "Shipment", "ByID"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Get the current price lists for an account.
		 * @generatedByCSharpType Clarity.Clients.JBM.GetShipmentsBySalesGroupID
		 * @path <API Root>/Shipping/Shipment/BySalesGroupID
		 * @verb GET
		 * @returns {ng.IHttpPromise<Array<ShipmentModel>>}
		 * @public
		 */
		GetShipmentsBySalesGroupID = (routeParams: GetShipmentsBySalesGroupIDDto) => this.$http<Array<ShipmentModel>>({
			url: [this.rootUrl, "Shipping", "Shipment", "BySalesGroupID"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a list of shipment statuses
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetShipmentStatuses
		 * @path <API Root>/Shipping/ShipmentStatuses
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<ShipmentStatusPagedResults>}
		 * @public
		 */
		GetShipmentStatuses = (routeParams?: GetShipmentStatusesDto) => this.$http<ShipmentStatusPagedResults>({
			url: [this.rootUrl, "Shipping", "ShipmentStatuses"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a list of shipment types
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetShipmentTypes
		 * @path <API Root>/Shipping/ShipmentTypes
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<ShipmentTypePagedResults>}
		 * @public
		 */
		GetShipmentTypes = (routeParams?: GetShipmentTypesDto) => this.$http<ShipmentTypePagedResults>({
			url: [this.rootUrl, "Shipping", "ShipmentTypes"].join("/"),
			method: "GET",
			params: routeParams
		});

	}
}
