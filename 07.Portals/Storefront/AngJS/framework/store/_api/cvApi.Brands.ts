/**
 * @file framework/store/_api/cvApi.Brands.ts
 * @author Copyright (c) 2015-2023 clarity-ventures.com. All rights reserved.
 * @desc The Angular Service module written in TypeScript
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/AngJS/framework/store/_api/
 */
module cef.store.api {

	/**
	 * Use to get a list of brand currencies
	 * @see {@link BrandCurrencySearchModel}
	 * @public
	 */
	export interface GetBrandCurrenciesDto extends BrandCurrencySearchModel {
	}
	/**
	 * Use to get a list of brand languages
	 * @see {@link BrandLanguageSearchModel}
	 * @public
	 */
	export interface GetBrandLanguagesDto extends BrandLanguageSearchModel {
	}
	/**
	 * Use to get a list of brands
	 * @see {@link BrandSearchModel}
	 * @public
	 */
	export interface GetBrandsDto extends BrandSearchModel {
	}
	/**
	 * Use to get a list of brand site domains
	 * @see {@link BrandSiteDomainSearchModel}
	 * @public
	 */
	export interface GetBrandSiteDomainsDto extends BrandSiteDomainSearchModel {
	}

	export class Brands extends ServiceStackRoute {
		/**
		 * Use to get a list of brand currencies
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetBrandCurrencies
		 * @path <API Root>/Brands/BrandCurrencies
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<BrandCurrencyPagedResults>}
		 * @public
		 */
		GetBrandCurrencies = (routeParams?: GetBrandCurrenciesDto) => this.$http<BrandCurrencyPagedResults>({
			url: [this.rootUrl, "Brands", "BrandCurrencies"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a list of brand languages
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetBrandLanguages
		 * @path <API Root>/Brands/BrandLanguages
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<BrandLanguagePagedResults>}
		 * @public
		 */
		GetBrandLanguages = (routeParams?: GetBrandLanguagesDto) => this.$http<BrandLanguagePagedResults>({
			url: [this.rootUrl, "Brands", "BrandLanguages"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a list of brands
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetBrands
		 * @path <API Root>/Brands/Brands
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<BrandPagedResults>}
		 * @public
		 */
		GetBrands = (routeParams?: GetBrandsDto) => this.$http<BrandPagedResults>({
			url: [this.rootUrl, "Brands", "Brands"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a list of brand site domains
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetBrandSiteDomains
		 * @path <API Root>/Brands/BrandSiteDomains
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<BrandSiteDomainPagedResults>}
		 * @public
		 */
		GetBrandSiteDomains = (routeParams?: GetBrandSiteDomainsDto) => this.$http<BrandSiteDomainPagedResults>({
			url: [this.rootUrl, "Brands", "BrandSiteDomains"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get the current brand based on url, sub-domain or sub-folder
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetCurrentBrand
		 * @path <API Root>/Brands/Brand/Current
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<BrandModel>>}
		 * @public
		 */
		GetCurrentBrand = () => this.$http<CEFActionResponseT<BrandModel>>({
			url: [this.rootUrl, "Brands", "Brand", "Current"].join("/"),
			method: "GET",
		});

	}
}
