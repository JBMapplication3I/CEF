/**
 * @file framework/store/_api/cvApi.Structure.ts
 * @author Copyright (c) 2015-2023 clarity-ventures.com. All rights reserved.
 * @desc The Angular Service module written in TypeScript
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/AngJS/framework/store/_api/
 */
module cef.store.api {

	/**
	 * Use to create a new note.
	 * @see {@link NoteModel}
	 * @public
	 */
	export interface CreateNoteDto extends NoteModel {
	}
	/**
	 * Use to get a list of note types
	 * @see {@link NoteTypeSearchModel}
	 * @public
	 */
	export interface GetNoteTypesDto extends NoteTypeSearchModel {
	}

	export class Structure extends ServiceStackRoute {
		/**
		 * Use to create a new note.
		 * @param {@link cef.store.api.CreateNoteDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CreateNote
		 * @path <API Root>/Structure/Note/Create
		 * @verb POST
		 * @priority 1
		 * @returns {ng.IHttpPromise<CEFActionResponseT<number>>}
		 * @public
		 */
		CreateNote = (routeParams?: CreateNoteDto) => this.$http<CEFActionResponseT<number>>({
			url: [this.rootUrl, "Structure", "Note", "Create"].join("/"),
			method: "POST",
			data: routeParams
		});

		/**
		 * Use to get a specific note
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetNoteByID
		 * @path <API Root>/Structure/Note/ID/{ID}
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<NoteModel>}
		 * @public
		 */
		GetNoteByID = (id: number) => this.$http<NoteModel>({
			url: [this.rootUrl, "Structure", "Note", "ID", id].join("/"),
			method: "GET",
		});

		/**
		 * Use to get a list of note types
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetNoteTypes
		 * @path <API Root>/Structure/NoteTypes
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<NoteTypePagedResults>}
		 * @public
		 */
		GetNoteTypes = (routeParams?: GetNoteTypesDto) => this.$http<NoteTypePagedResults>({
			url: [this.rootUrl, "Structure", "NoteTypes"].join("/"),
			method: "GET",
			params: routeParams
		});

	}
}
