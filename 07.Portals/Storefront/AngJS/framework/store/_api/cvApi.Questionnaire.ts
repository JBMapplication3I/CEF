/**
 * @file framework/store/_api/cvApi.Questionnaire.ts
 * @author Copyright (c) 2015-2023 clarity-ventures.com. All rights reserved.
 * @desc The Angular Service module written in TypeScript
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/AngJS/framework/store/_api/
 */
module cef.store.api {

	/**
	 * Checks if the current user has answered the given brand's questionnaire.
	 * @public
	 */
	export interface CheckIfQuestionnaireIsAnsweredDto {
		/** Brand ID For Search, Note: This will be overridden on data calls automatically */
		BrandID?: number;
		BrandIDIncludeNull?: boolean;
		/** The Brand Key for objects */
		BrandKey?: string;
		/** The Brand Name for objects */
		BrandName?: string;
		BrandNameStrict?: boolean;
		BrandNameIncludeNull?: boolean;
		/** Match a store which uses this category */
		BrandCategoryID?: number;
	}
	/**
	 * Use to get a list of questions
	 * @see {@link QuestionSearchModel}
	 * @public
	 */
	export interface GetQuestionsDto extends QuestionSearchModel {
	}
	/**
	 * Securely creates many answers, ensures that the user ID on the answers is the current user.
	 * @public
	 */
	export interface SecureCreateAnswersDto {
		Answers?: Array<AnswerModel>;
	}

	export class Questionnaire extends ServiceStackRoute {
		/**
		 * Checks if the current user has answered the given brand's questionnaire.
		 * @generatedByCSharpType Clarity.Ecommerce.Service.CheckIfQuestionnaireIsAnswered
		 * @path <API Root>/Questionnaire/CurrentUser/HasAnswersForBrandQuestionnaire
		 * @verb GET
		 * @returns {ng.IHttpPromise<CEFActionResponseT<boolean>>}
		 * @public
		 */
		CheckIfQuestionnaireIsAnswered = (routeParams?: CheckIfQuestionnaireIsAnsweredDto) => this.$http<CEFActionResponseT<boolean>>({
			url: [this.rootUrl, "Questionnaire", "CurrentUser", "HasAnswersForBrandQuestionnaire"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Use to get a list of questions
		 * @generatedByCSharpType Clarity.Ecommerce.Service.GetQuestions
		 * @path <API Root>/Questionnaire/Questions
		 * @verb GET
		 * @priority 1
		 * @returns {ng.IHttpPromise<QuestionPagedResults>}
		 * @public
		 */
		GetQuestions = (routeParams?: GetQuestionsDto) => this.$http<QuestionPagedResults>({
			url: [this.rootUrl, "Questionnaire", "Questions"].join("/"),
			method: "GET",
			params: routeParams
		});

		/**
		 * Securely creates many answers, ensures that the user ID on the answers is the current user.
		 * @param {@link cef.store.api.SecureCreateAnswersDto} routeParams - The route parameters as a Body Object
		 * @generatedByCSharpType Clarity.Ecommerce.Service.SecureCreateAnswers
		 * @path <API Root>/Questionnaire/Answers/CreateMany
		 * @verb POST
		 * @returns {ng.IHttpPromise<CEFActionResponse>}
		 * @public
		 */
		SecureCreateAnswers = (routeParams?: SecureCreateAnswersDto) => this.$http<CEFActionResponse>({
			url: [this.rootUrl, "Questionnaire", "Answers", "CreateMany"].join("/"),
			method: "POST",
			data: routeParams
		});

	}
}
