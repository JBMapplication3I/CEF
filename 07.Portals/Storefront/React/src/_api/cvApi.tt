<#@ template hostspecific="True" language="C#" #><#@
output extension=".tstxt" #><#@
assembly name="EnvDTE" #><#@
assembly name="System.Configuration" #><#@
assembly name="System.Core" #><#@
assembly name="System.Web.dll" #><#@
assembly name="$(UserProfile)\.nuget\packages\hangfire.core\1.7.27\lib\net46\Hangfire.Core.dll" #><#@
assembly name="$(UserProfile)\.nuget\packages\newtonsoft.json\13.0.1\lib\net45\Newtonsoft.Json.dll" #><#@
assembly name="$(UserProfile)\.nuget\packages\system.valuetuple\4.5.0\lib\net461\System.ValueTuple.dll" #><#@
assembly name="$(UserProfile)\.nuget\packages\servicestack.interfaces\5.12.0\lib\netstandard2.0\ServiceStack.Interfaces.dll" #><#@
assembly name="$(UserProfile)\.nuget\packages\servicestack.text\5.12.0\lib\netstandard2.0\ServiceStack.Text.dll" #><#@
assembly name="$(SolutionDir)00.Core\00.Clarity.Ecommerce.RegistryLoader\bin\Debug\net472\Clarity.Ecommerce.RegistryLoader.dll" #><#@
assembly name="$(SolutionDir)03.ModelsAndMapping\03.Clarity.Ecommerce.Models\bin\Debug\net472\Clarity.Ecommerce.Models.dll" #><#@
assembly name="$(SolutionDir)05.BusinessLogic\05.Clarity.Ecommerce.Workflow\bin\Debug\net472\Clarity.Ecommerce.Workflow.dll" #><#@
assembly name="$(SolutionDir)06.Services\06.Clarity.Ecommerce.Service.Core\bin\Debug\net472\Clarity.Ecommerce.Service.Core.dll" #><#@
assembly name="$(SolutionDir)06.Services\06.Clarity.Ecommerce.Service\bin\Clarity.Ecommerce.Service.dll" #><#@
assembly name="$(SolutionDir)11.T4\11.T4.CodeGenerator\bin\Debug\net472\CodeGenerator.dll" #><#@
assembly name="$(SolutionDir)11.T4\11.T4.ServiceStack.CodeGenerator.TypeScript\bin\Debug\net472\ServiceStack.CodeGenerator.TypeScript.dll" #><#@
import namespace="System" #><#@
import namespace="System.Collections.Generic" #><#@
import namespace="System.Configuration" #><#@
import namespace="System.Linq" #><#@
import namespace="System.Reflection" #><#@
import namespace="System.Runtime.InteropServices" #><#@
import namespace="System.Text.RegularExpressions" #><#@
import namespace="ServiceStack" #><#@
import namespace="ServiceStack.CodeGenerator.TypeScript" #><#@
include file="$(SolutionDir)11.T4\11.T4.CodeGenerator\MultiOutput.old.ttinclude" #><#
TypescriptCodeGenerator cg = new TypescriptCodeGenerator(
    "ClarityEcomService",
    new string[] { "Clarity.Ecommerce.DataModel" },
    "store");
List<string[]> results = cg.GenerateForReact();
List<string> fileNamesForReferences = new List<string>();
for (int i = 0; i < results.Count; i++)
{
    var fileName = "cvApi." + results[i][0];
    fileNamesForReferences.Add(fileName);
#>/**
 * @file _api/<#= fileName #>.ts
 * @author Copyright (c) 2021-<#= DateTime.Today.Year #> clarity-ventures.com. All rights reserved.
 * @desc Endpoints generated based on C# routes.
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/React/src/_api/
 */
<#= results[i][1] #>
<# SaveOutput(fileName, "ts", true);
} #>
/**
 * @file _api/cvApi.ts
 * @author Copyright (c) 2021-<#= DateTime.Today.Year #> clarity-ventures.com. All rights reserved.
 * @desc Creates the cvApi singleton
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/React/src/_api/
 */
import { CEFAPI } from "./cvApi._ServiceClass";
const instance = new CEFAPI();
export default instance;
<#
SaveOutput("cvApi", "ts", true);
DeleteOldOutputs();
#>