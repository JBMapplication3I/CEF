/**
 * @file _api/cvApi.Attributes.ts
 * @author Copyright (c) 2021-2023 clarity-ventures.com. All rights reserved.
 * @desc Endpoints generated based on C# routes.
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/React/src/_api/
 */

import axios from "../axios";

import {
	ImplementsDisplayNameBase,
	ImplementsNameBase,
	AttributeGroupSearchModel,
	AttributeGroupPagedResults,
	AttributeTabSearchModel,
	AttributeTabPagedResults,
	AttributeTypeSearchModel,
	AttributeTypePagedResults,
	GeneralAttributeModel,
	GeneralAttributePredefinedOptionSearchModel,
	GeneralAttributePredefinedOptionPagedResults,
	GeneralAttributeSearchModel,
	GeneralAttributePagedResults,
} from "./cvApi._DtoClasses";

import {
	IHttpPromise
} from "./cvApi.shared";

/**
 * Check if this Display Name exists and return the id if it does (null if it does not)
 * @see {@link ImplementsDisplayNameBase}
 * @public
 */
export interface CheckGeneralAttributeExistsByDisplayNameDto extends ImplementsDisplayNameBase {
}

/**
 * Check if this Name exists and return the id if it does (null if it does not)
 * @see {@link ImplementsNameBase}
 * @public
 */
export interface CheckGeneralAttributeExistsByNameDto extends ImplementsNameBase {
}

/**
 * Use to get a list of attribute groups
 * @see {@link AttributeGroupSearchModel}
 * @public
 */
export interface GetAttributeGroupsDto extends AttributeGroupSearchModel {
}

/**
 * Use to get a list of attribute tabs
 * @see {@link AttributeTabSearchModel}
 * @public
 */
export interface GetAttributeTabsDto extends AttributeTabSearchModel {
}

/**
 * Use to get a list of attribute types
 * @see {@link AttributeTypeSearchModel}
 * @public
 */
export interface GetAttributeTypesDto extends AttributeTypeSearchModel {
}

/**
 * Use to get a list of general attribute predefined options
 * @see {@link GeneralAttributePredefinedOptionSearchModel}
 * @public
 */
export interface GetGeneralAttributePredefinedOptionsDto extends GeneralAttributePredefinedOptionSearchModel {
}

/**
 * Use to get a list of general attributes
 * @see {@link GeneralAttributeSearchModel}
 * @public
 */
export interface GetGeneralAttributesDto extends GeneralAttributeSearchModel {
}

export class Attributes {
	/**
	 * Check if this Display Name exists and return the id if it does (null if it does not)
	 * @generatedByCSharpType Clarity.Ecommerce.Service.CheckGeneralAttributeExistsByDisplayName
	 * @path <API Root>/Attributes/GeneralAttribute/Exists/DisplayName
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<number>}
	 * @public
	 */
	CheckGeneralAttributeExistsByDisplayName = (routeParams?: CheckGeneralAttributeExistsByDisplayNameDto): IHttpPromise<number> =>
		axios.get(["Attributes", "GeneralAttribute", "Exists", "DisplayName"].join("/"),
		{
			params: routeParams
		});

	/**
	 * Check if this key exists and return the id if it does (null if it does not)
	 * @generatedByCSharpType Clarity.Ecommerce.Service.CheckGeneralAttributeExistsByKey
	 * @path <API Root>/Attributes/GeneralAttribute/Exists/Key/{Key*}
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<number>}
	 * @public
	 */
	CheckGeneralAttributeExistsByKey = (key: string): IHttpPromise<number> =>
		axios.get(["Attributes", "GeneralAttribute", "Exists", "Key", encodeURIComponent(key)].join("/"));

	/**
	 * Check if this Name exists and return the id if it does (null if it does not)
	 * @generatedByCSharpType Clarity.Ecommerce.Service.CheckGeneralAttributeExistsByName
	 * @path <API Root>/Attributes/GeneralAttribute/Exists/Name
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<number>}
	 * @public
	 */
	CheckGeneralAttributeExistsByName = (routeParams?: CheckGeneralAttributeExistsByNameDto): IHttpPromise<number> =>
		axios.get(["Attributes", "GeneralAttribute", "Exists", "Name"].join("/"),
		{
			params: routeParams
		});

	/**
	 * Use to get a list of attribute groups
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetAttributeGroups
	 * @path <API Root>/Attributes/AttributeGroups
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<AttributeGroupPagedResults>}
	 * @public
	 */
	GetAttributeGroups = (routeParams?: GetAttributeGroupsDto): IHttpPromise<AttributeGroupPagedResults> =>
		axios.get(["Attributes", "AttributeGroups"].join("/"),
		{
			params: routeParams
		});

	/**
	 * Use to get a list of attribute tabs
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetAttributeTabs
	 * @path <API Root>/Attributes/AttributeTabs
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<AttributeTabPagedResults>}
	 * @public
	 */
	GetAttributeTabs = (routeParams?: GetAttributeTabsDto): IHttpPromise<AttributeTabPagedResults> =>
		axios.get(["Attributes", "AttributeTabs"].join("/"),
		{
			params: routeParams
		});

	/**
	 * Use to get a list of attribute types
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetAttributeTypes
	 * @path <API Root>/Attributes/AttributeTypes
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<AttributeTypePagedResults>}
	 * @public
	 */
	GetAttributeTypes = (routeParams?: GetAttributeTypesDto): IHttpPromise<AttributeTypePagedResults> =>
		axios.get(["Attributes", "AttributeTypes"].join("/"),
		{
			params: routeParams
		});

	/**
	 * Use to get a specific general attribute
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetGeneralAttributeByID
	 * @path <API Root>/Attributes/GeneralAttribute/ID/{ID}
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<GeneralAttributeModel>}
	 * @public
	 */
	GetGeneralAttributeByID = (id: number): IHttpPromise<GeneralAttributeModel> =>
		axios.get(["Attributes", "GeneralAttribute", "ID", id].join("/"));

	/**
	 * Use to get a list of general attribute predefined options
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetGeneralAttributePredefinedOptions
	 * @path <API Root>/Attributes/GeneralAttributePredefinedOptions
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<GeneralAttributePredefinedOptionPagedResults>}
	 * @public
	 */
	GetGeneralAttributePredefinedOptions = (routeParams?: GetGeneralAttributePredefinedOptionsDto): IHttpPromise<GeneralAttributePredefinedOptionPagedResults> =>
		axios.get(["Attributes", "GeneralAttributePredefinedOptions"].join("/"),
		{
			params: routeParams
		});

	/**
	 * Use to get a list of general attributes
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetGeneralAttributes
	 * @path <API Root>/Attributes/GeneralAttributes
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<GeneralAttributePagedResults>}
	 * @public
	 */
	GetGeneralAttributes = (routeParams?: GetGeneralAttributesDto): IHttpPromise<GeneralAttributePagedResults> =>
		axios.get(["Attributes", "GeneralAttributes"].join("/"),
		{
			params: routeParams
		});
}
