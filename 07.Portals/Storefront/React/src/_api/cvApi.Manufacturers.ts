/**
 * @file _api/cvApi.Manufacturers.ts
 * @author Copyright (c) 2021-2023 clarity-ventures.com. All rights reserved.
 * @desc Endpoints generated based on C# routes.
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/React/src/_api/
 */

import axios from "../axios";

import {
	ImplementsNameBase,
	ManufacturerModel,
	ManufacturerSearchModel,
	ManufacturerPagedResults,
} from "./cvApi._DtoClasses";

import {
	IHttpPromise
} from "./cvApi.shared";

/**
 * Check if this Name exists and return the id if it does (null if it does not)
 * @see {@link ImplementsNameBase}
 * @public
 */
export interface CheckManufacturerExistsByNameDto extends ImplementsNameBase {
}

/**
 * Use to get a list of manufacturers
 * @see {@link ManufacturerSearchModel}
 * @public
 */
export interface GetManufacturersDto extends ManufacturerSearchModel {
}

export class Manufacturers {
	/**
	 * Check if this ID exists and return the id if it does (null if it does not)
	 * @generatedByCSharpType Clarity.Ecommerce.Service.CheckManufacturerExistsByID
	 * @path <API Root>/Manufacturers/Manufacturer/Exists/ID/{ID}
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<number>}
	 * @public
	 */
	CheckManufacturerExistsByID = (id: number): IHttpPromise<number> =>
		axios.get(["Manufacturers", "Manufacturer", "Exists", "ID", id].join("/"));

	/**
	 * Check if this key exists and return the id if it does (null if it does not)
	 * @generatedByCSharpType Clarity.Ecommerce.Service.CheckManufacturerExistsByKey
	 * @path <API Root>/Manufacturers/Manufacturer/Exists/Key/{Key*}
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<number>}
	 * @public
	 */
	CheckManufacturerExistsByKey = (key: string): IHttpPromise<number> =>
		axios.get(["Manufacturers", "Manufacturer", "Exists", "Key", encodeURIComponent(key)].join("/"));

	/**
	 * Check if this Name exists and return the id if it does (null if it does not)
	 * @generatedByCSharpType Clarity.Ecommerce.Service.CheckManufacturerExistsByName
	 * @path <API Root>/Manufacturers/Manufacturer/Exists/Name
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<number>}
	 * @public
	 */
	CheckManufacturerExistsByName = (routeParams?: CheckManufacturerExistsByNameDto): IHttpPromise<number> =>
		axios.get(["Manufacturers", "Manufacturer", "Exists", "Name"].join("/"),
		{
			params: routeParams
		});

	/**
	 * Use to get a specific manufacturer
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetManufacturerByID
	 * @path <API Root>/Manufacturers/Manufacturer/ID/{ID}
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<ManufacturerModel>}
	 * @public
	 */
	GetManufacturerByID = (id: number): IHttpPromise<ManufacturerModel> =>
		axios.get(["Manufacturers", "Manufacturer", "ID", id].join("/"));

	/**
	 * Use to get a list of manufacturers
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetManufacturers
	 * @path <API Root>/Manufacturers/Manufacturers
	 * @verb GET
	 * @priority 1
	 * @returns {ng.IHttpPromise<ManufacturerPagedResults>}
	 * @public
	 */
	GetManufacturers = (routeParams?: GetManufacturersDto): IHttpPromise<ManufacturerPagedResults> =>
		axios.get(["Manufacturers", "Manufacturers"].join("/"),
		{
			params: routeParams
		});
}
