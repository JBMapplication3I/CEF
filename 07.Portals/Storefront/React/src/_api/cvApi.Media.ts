/**
 * @file _api/cvApi.Media.ts
 * @author Copyright (c) 2021-2023 clarity-ventures.com. All rights reserved.
 * @desc Endpoints generated based on C# routes.
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/React/src/_api/
 */

import axios from "../axios";

import {
	FileEntityType,
} from "./cvApi._DtoClasses";

import {
	IUploadResponse,
	IHttpPromise
} from "./cvApi.shared";

/**
 * FileUrl
 * @public
 */
export interface GetStoredFileUrlDto {
	EntityType: FileEntityType;
	FileKey: string;
}

/**
 * Upload stored files of any type and they will be injected with your model as you save them (e.g.- Create/Update Product, Category, etc)
 * @public
 */
export interface UploadStoredFileDto {
	EntityFileType: FileEntityType;
	Name?: string;
	Async: boolean;
}

export class Media {
	/**
	 * FileUrl
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetStoredFileUrl
	 * @path <API Root>/Media/StoredFiles/Url
	 * @verb GET
	 * @returns {ng.IHttpPromise<string>}
	 * @public
	 */
	GetStoredFileUrl = (routeParams: GetStoredFileUrlDto): IHttpPromise<string> =>
		axios.get(["Media", "StoredFiles", "Url"].join("/"),
		{
			params: routeParams
		});

	/**
	 * Get Upload StoredFile Results
	 * @generatedByCSharpType Clarity.Ecommerce.Service.GetUploadStoredFileResults
	 * @path <API Root>/Media/StoredFiles/UploadResults/{ID}
	 * @verb GET
	 * @returns {ng.IHttpPromise<IUploadResponse>}
	 * @public
	 */
	GetUploadStoredFileResults = (id: string): IHttpPromise<IUploadResponse> =>
		axios.get(["Media", "StoredFiles", "UploadResults", encodeURIComponent(id)].join("/"));

	/**
	 * Upload stored files of any type and they will be injected with your model as you save them (e.g.- Create/Update Product, Category, etc)
	 * @param {@link cef.store.api.UploadStoredFileDto} routeParams - The route parameters as a Body Object
	 * @generatedByCSharpType Clarity.Ecommerce.Service.UploadStoredFile
	 * @path <API Root>/Media/StoredFiles/Upload
	 * @verb POST
	 * @returns {ng.IHttpPromise<IUploadResponse>}
	 * @public
	 */
	UploadStoredFile = (routeParams: UploadStoredFileDto): IHttpPromise<IUploadResponse> =>
		axios.post(["Media", "StoredFiles", "Upload"].join("/"),
		{
			data: routeParams
		});
}
