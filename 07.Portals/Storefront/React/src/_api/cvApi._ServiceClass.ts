/**
 * @file _api/cvApi._ServiceClass.ts
 * @author Copyright (c) 2021-2023 clarity-ventures.com. All rights reserved.
 * @desc Endpoints generated based on C# routes.
 * @remarks This file was auto-generated by cvApi.tt in 07.Portals/Storefront/React/src/_api/
 */

/** Exposes access to the ServiceStack routes */
import { Accounts } from "./cvApi.Accounts";
import { Advertising } from "./cvApi.Advertising";
import { Attributes } from "./cvApi.Attributes";
import { Auctions } from "./cvApi.Auctions";
import { Authentication } from "./cvApi.Authentication";
import { Brands } from "./cvApi.Brands";
import { Categories } from "./cvApi.Categories";
import { Contacts } from "./cvApi.Contacts";
import { Currencies } from "./cvApi.Currencies";
import { Franchises } from "./cvApi.Franchises";
import { Geography } from "./cvApi.Geography";
import { Globalization } from "./cvApi.Globalization";
import { Inventory } from "./cvApi.Inventory";
import { Invoicing } from "./cvApi.Invoicing";
import { JSConfigs } from "./cvApi.JSConfigs";
import { Manufacturers } from "./cvApi.Manufacturers";
import { Media } from "./cvApi.Media";
import { Messaging } from "./cvApi.Messaging";
import { Ordering } from "./cvApi.Ordering";
import { Payments } from "./cvApi.Payments";
import { Pricing } from "./cvApi.Pricing";
import { Products } from "./cvApi.Products";
import { Providers } from "./cvApi.Providers";
import { Questionnaire } from "./cvApi.Questionnaire";
import { Quoting } from "./cvApi.Quoting";
import { Returning } from "./cvApi.Returning";
import { Reviews } from "./cvApi.Reviews";
import { Sales } from "./cvApi.Sales";
import { Sampling } from "./cvApi.Sampling";
import { Scheduling } from "./cvApi.Scheduling";
import { Shipping } from "./cvApi.Shipping";
import { Shopping } from "./cvApi.Shopping";
import { Stores } from "./cvApi.Stores";
import { Structure } from "./cvApi.Structure";
import { Tracking } from "./cvApi.Tracking";
import { Vendors } from "./cvApi.Vendors";

export class CEFAPI {
	accounts: Accounts;
	advertising: Advertising;
	attributes: Attributes;
	auctions: Auctions;
	authentication: Authentication;
	brands: Brands;
	categories: Categories;
	contacts: Contacts;
	currencies: Currencies;
	franchises: Franchises;
	geography: Geography;
	globalization: Globalization;
	inventory: Inventory;
	invoicing: Invoicing;
	jsConfigs: JSConfigs;
	manufacturers: Manufacturers;
	media: Media;
	messaging: Messaging;
	ordering: Ordering;
	payments: Payments;
	pricing: Pricing;
	products: Products;
	providers: Providers;
	questionnaire: Questionnaire;
	quoting: Quoting;
	returning: Returning;
	reviews: Reviews;
	sales: Sales;
	sampling: Sampling;
	scheduling: Scheduling;
	shipping: Shipping;
	shopping: Shopping;
	stores: Stores;
	structure: Structure;
	tracking: Tracking;
	vendors: Vendors;
	
	constructor() {
		this.accounts = new Accounts();
		this.advertising = new Advertising();
		this.attributes = new Attributes();
		this.auctions = new Auctions();
		this.authentication = new Authentication();
		this.brands = new Brands();
		this.categories = new Categories();
		this.contacts = new Contacts();
		this.currencies = new Currencies();
		this.franchises = new Franchises();
		this.geography = new Geography();
		this.globalization = new Globalization();
		this.inventory = new Inventory();
		this.invoicing = new Invoicing();
		this.jsConfigs = new JSConfigs();
		this.manufacturers = new Manufacturers();
		this.media = new Media();
		this.messaging = new Messaging();
		this.ordering = new Ordering();
		this.payments = new Payments();
		this.pricing = new Pricing();
		this.products = new Products();
		this.providers = new Providers();
		this.questionnaire = new Questionnaire();
		this.quoting = new Quoting();
		this.returning = new Returning();
		this.reviews = new Reviews();
		this.sales = new Sales();
		this.sampling = new Sampling();
		this.scheduling = new Scheduling();
		this.shipping = new Shipping();
		this.shopping = new Shopping();
		this.stores = new Stores();
		this.structure = new Structure();
		this.tracking = new Tracking();
		this.vendors = new Vendors();
	}
}

