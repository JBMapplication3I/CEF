// <autogenerated>
// <copyright file="VisitorModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for Visitor.</summary>
    public partial class VisitorModel
        : NameableBaseModel
            , IVisitorModel
    {
        #region IsIAmALitelyTrackedEventBase
        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPAddress), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The originating IP Address of the Request for the Event")]
        public string? IPAddress { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Score), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Score of the Event")]
        public int? Score { get; set; }

        // Related Objects

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(AddressID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Identifier for the Address storing location information for the Event")]
        public int? AddressID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(AddressKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? AddressKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Address), DataType = "AddressModel", ParameterType = "body", IsRequired = false,
                Description = "The body of the Address storing location information for the Event")]
        public AddressModel? Address { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IAddressModel? IAmALitelyTrackedEventBaseModel.Address { get => Address; set => Address = (AddressModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPOrganizationID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Identifier for the IP Organization related with this Event")]
        public int? IPOrganizationID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPOrganizationKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? IPOrganizationKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPOrganizationName), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? IPOrganizationName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPOrganization), DataType = "IPOrganizationModel", ParameterType = "body", IsRequired = false,
                Description = "The body of the IP Organization related with this Event")]
        public IPOrganizationModel? IPOrganization { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IIPOrganizationModel? IAmALitelyTrackedEventBaseModel.IPOrganization { get => IPOrganization; set => IPOrganization = (IPOrganizationModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(UserID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Identifier for the Address storing location information for the Event")]
        public int? UserID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(UserKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? UserKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(User), DataType = "UserModel", ParameterType = "body", IsRequired = false,
                Description = "The body of the User related with this Event")]
        public UserModel? User { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IUserModel? IAmALitelyTrackedEventBaseModel.User { get => User; set => User = (UserModel?)value; }
        #endregion
    }
}
