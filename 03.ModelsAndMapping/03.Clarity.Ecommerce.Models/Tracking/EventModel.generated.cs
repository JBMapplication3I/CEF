// <autogenerated>
// <copyright file="EventModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for Event.</summary>
    public partial class EventModel
        : NameableBaseModel
            , IEventModel
    {
        #region IHaveATypeBaseModel<ITypeModel>
        /// <inheritdoc/>
        [DefaultValue(0),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeID), DataType = "int", ParameterType = "body", IsRequired = true,
                Description = "Identifier for the Type of this Account, required if no TypeModel present")]
        public int TypeID { get; set; }

        /// <inheritdoc cref="IHaveATypeBaseModel{ITypeModel}.Type"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Type), IsRequired = true, DataType = "TypeModel", ParameterType = "body",
                Description = "Model for Type of this Account, required if no TypeID present")]
        public TypeModel? Type { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ITypeModel? IHaveATypeBaseModel<ITypeModel>.Type { get => Type; set => Type = (TypeModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeKey), DataType = "string", ParameterType = "body", IsRequired = true,
                Description = "Key for the Type of this Account, read-only")]
        public string? TypeKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeName), DataType = "string", ParameterType = "body", IsRequired = true,
                Description = "Name for the Type of this Account, read-only")]
        public string? TypeName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeDisplayName), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "Display Name for the Type of this object, read-only")]
        public string? TypeDisplayName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeTranslationKey), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "Translation Key for the Type of this object, read-only")]
        public string? TypeTranslationKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeSortOrder), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "Sort Order for the Type of this object, read-only")]
        public int? TypeSortOrder { get; set; }
        #endregion
        #region IHaveAStatusBaseModel<IStatusModel>
        /// <inheritdoc/>
        [DefaultValue(0),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(StatusID), DataType = "int", ParameterType = "body", IsRequired = true,
                Description = "Identifier for the Status of this object, required if no StatusModel present")]
        public int StatusID { get; set; }

        /// <inheritdoc cref="IHaveAStatusBaseModel{IStatusModel}.Status"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Status), DataType = "StatusModel", ParameterType = "body", IsRequired = true,
                Description = "Model for Status of this object, required if no StatusID present")]
        public StatusModel? Status { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IStatusModel? IHaveAStatusBaseModel<IStatusModel>.Status { get => Status; set => Status = (StatusModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(StatusKey), DataType = "string", ParameterType = "body", IsRequired = true,
                Description = "Key for the Status of this object, read-only")]
        public string? StatusKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(StatusName), DataType = "string", ParameterType = "body", IsRequired = true,
                Description = "Name for the Status of this object, read-only")]
        public string? StatusName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(StatusDisplayName), DataType = "string", ParameterType = "body", IsRequired = true,
                Description = "Display Name for the Status of this object, read-only")]
        public string? StatusDisplayName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(StatusTranslationKey), DataType = "string", ParameterType = "body", IsRequired = true,
                Description = "Translation Key for the Status of this object, read-only")]
        public string? StatusTranslationKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(StatusSortOrder), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "Sort Order for the Status of this object, read-only")]
        public int? StatusSortOrder { get; set; }
        #endregion
        #region IHaveANullableContactBaseModel
        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? ContactID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactPhone { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactFax { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactEmail { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactFirstName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactLastName { get; set; }

        /// <inheritdoc cref="IHaveANullableContactBaseModel.Contact"/>
        public ContactModel? Contact { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IContactModel? IHaveANullableContactBaseModel.Contact { get => Contact; set => Contact = (ContactModel?)value; }
        #endregion
        #region IsIAmALitelyTrackedEventBase
        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPAddress), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The originating IP Address of the Request for the Event")]
        public string? IPAddress { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Score), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Score of the Event")]
        public int? Score { get; set; }

        // Related Objects

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(AddressID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Identifier for the Address storing location information for the Event")]
        public int? AddressID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(AddressKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? AddressKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Address), DataType = "AddressModel", ParameterType = "body", IsRequired = false,
                Description = "The body of the Address storing location information for the Event")]
        public AddressModel? Address { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IAddressModel? IAmALitelyTrackedEventBaseModel.Address { get => Address; set => Address = (AddressModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPOrganizationID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Identifier for the IP Organization related with this Event")]
        public int? IPOrganizationID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPOrganizationKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? IPOrganizationKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPOrganizationName), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? IPOrganizationName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IPOrganization), DataType = "IPOrganizationModel", ParameterType = "body", IsRequired = false,
                Description = "The body of the IP Organization related with this Event")]
        public IPOrganizationModel? IPOrganization { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IIPOrganizationModel? IAmALitelyTrackedEventBaseModel.IPOrganization { get => IPOrganization; set => IPOrganization = (IPOrganizationModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(UserID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Identifier for the Address storing location information for the Event")]
        public int? UserID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(UserKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? UserKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(User), DataType = "UserModel", ParameterType = "body", IsRequired = false,
                Description = "The body of the User related with this Event")]
        public UserModel? User { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IUserModel? IAmALitelyTrackedEventBaseModel.User { get => User; set => User = (UserModel?)value; }
        #endregion
        #region IsIAmATrackedEventBase
        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(DidBounce), DataType = "bool?", ParameterType = "body", IsRequired = false,
                Description = "Did the visitor bounce from the site after coming to it?")]
        public bool? DidBounce { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(OperatingSystem), DataType = "string?", ParameterType = "body", IsRequired = false,
                Description = "The Operating System used in the request for the Event")]
        public string? OperatingSystem { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Browser), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The Browser used in the request for the Event")]
        public string? Browser { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Language), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The Language of the Request for the Event")]
        public string? Language { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(ContainsSocialProfile), DataType = "bool?", ParameterType = "body", IsRequired = false,
                Description = "Does the Event contain Social Profile Data?")]
        public bool? ContainsSocialProfile { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Delta), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The number of changes from this Event")]
        public int? Delta { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Duration), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The duration of this event in seconds")]
        public int? Duration { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(StartedOn), DataType = "DateTime?", ParameterType = "body", IsRequired = false,
                Description = "The time at which the Event started")]
        public DateTime? StartedOn { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(EndedOn), DataType = "DateTime?", ParameterType = "body", IsRequired = false,
                Description = "The time at which the Event ended")]
        public DateTime? EndedOn { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Time), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The time of the Event")]
        public string? Time { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(EntryPage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The entry page of the event")]
        public string? EntryPage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(ExitPage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The the exit page of the event")]
        public string? ExitPage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(IsFirstTrigger), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "Is this the first time this event has triggered?")]
        public bool? IsFirstTrigger { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Flash), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "Was Flash used to trigger this event? If so, the version of Flash")]
        public string? Flash { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Keywords), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The keywords for the Event")]
        public string? Keywords { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(PartitionKey), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The Partition Key for the Event")]
        public string? PartitionKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Referrer), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The Referring Source of the Event (such as Google, Bing or another website)")]
        public string? Referrer { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(ReferringHost), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The Host URL of the Referring Source of the Event (such as www.google.com)")]
        public string? ReferringHost { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(RowKey), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The Row Key for this Event")]
        public string? RowKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Source), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Source of this Event as an integer")]
        public int? Source { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TotalTriggers), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The total number of Triggers for this event")]
        public int? TotalTriggers { get; set; }

        // Related Objects

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(CampaignID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The identifier of the Campaign related to this Event")]
        public int? CampaignID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Campaign), DataType = "CampaignModel", ParameterType = "body", IsRequired = false,
                Description = "The body of the Campaign related to this Event")]
        public CampaignModel? Campaign { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ICampaignModel? IAmATrackedEventBaseModel.Campaign { get => Campaign; set => Campaign = (CampaignModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(CampaignKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? CampaignKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(CampaignName), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? CampaignName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(SiteDomainID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The identifier of the Site Domain related to this Event")]
        public int? SiteDomainID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(SiteDomain), DataType = "SiteDomainModel", ParameterType = "body", IsRequired = false,
                Description = "The body of the Site Domain related to this Event")]
        public SiteDomainModel? SiteDomain { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ISiteDomainModel? IAmATrackedEventBaseModel.SiteDomain { get => SiteDomain; set => SiteDomain = (SiteDomainModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(SiteDomainKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? SiteDomainKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(SiteDomainName), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? SiteDomainName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(VisitorID), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The identifier of the Visitor related to this Event")]
        public int? VisitorID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Visitor), DataType = "VisitorModel?", ParameterType = "body", IsRequired = false,
                Description = "The body of the Visitor related to this Event")]
        public VisitorModel? Visitor { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IVisitorModel? IAmATrackedEventBaseModel.Visitor { get => Visitor; set => Visitor = (VisitorModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(VisitorKey), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? VisitorKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(VisitorName), DataType = "string?", ParameterType = "body", IsRequired = false)]
        public string? VisitorName { get; set; }
        #endregion
    }
}
