// <autogenerated>
// <copyright file="LotSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Lot search.</summary>
    public partial class LotSearchModel
        : NameableBaseSearchModel
        , ILotSearchModel
    {
        #region IHaveATypeBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects")]
        public int? TypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically include")]
        public int?[]? TypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects to specifically exclude")]
        public int? ExcludedTypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically exclude")]
        public int?[]? ExcludedTypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects")]
        public string? TypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically include")]
        public string?[]? TypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects to specifically exclude")]
        public string? ExcludedTypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically exclude")]
        public string?[]? ExcludedTypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects")]
        public string? TypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically include")]
        public string?[]? TypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects to specifically exclude")]
        public string? ExcludedTypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects")]
        public string? TypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically include")]
        public string?[]? TypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects to specifically exclude")]
        public string? ExcludedTypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeTranslationKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Translation Key for objects")]
        public string? TypeTranslationKey { get; set; }
        #endregion
        #region IHaveAStatusBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status ID for objects")]
        public int? StatusID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusIDs), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status IDs for objects to specifically include")]
        public int?[]? StatusIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status ID for objects to specifically exclude")]
        public int? ExcludedStatusID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusIDs), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status IDs for objects to specifically exclude")]
        public int?[]? ExcludedStatusIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Key for objects")]
        public string? StatusKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusKeys), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Keys for objects to specifically include")]
        public string?[]? StatusKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Key for objects to specifically exclude")]
        public string? ExcludedStatusKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusKeys), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Keys for objects to specifically exclude")]
        public string?[]? ExcludedStatusKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Name for objects")]
        public string? StatusName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Names for objects to specifically include")]
        public string?[]? StatusNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Name for objects to specifically exclude")]
        public string? ExcludedStatusName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Names for objects to specifically exclude")]
        public string?[]? ExcludedStatusNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Name for objects")]
        public string? StatusDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusDisplayNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Names for objects to specifically include")]
        public string?[]? StatusDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Name for objects to specifically exclude")]
        public string? ExcludedStatusDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusDisplayNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Names for objects to specifically exclude")]
        public string?[]? ExcludedStatusDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusTranslationKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Translation Key for objects")]
        public string? StatusTranslationKey { get; set; }
        #endregion
        #region IAmFilterableByCategorySearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(CategoryID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Category ID For Search, Note: This will be overridden on data calls automatically")]
        public int? CategoryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CategoryKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Category Key for objects")]
        public string? CategoryKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CategoryName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Category Name for objects")]
        public string? CategoryName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CategorySeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Category SEO URL for objects")]
        public string? CategorySeoUrl { get; set; }
        #endregion
        #region IAmFilterableByProductSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ProductID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Key for objects")]
        public string? ProductKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Name for objects")]
        public string? ProductName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product SEO URL for objects")]
        public string? ProductSeoUrl { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(BuyNowAvailable), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BuyNowAvailable { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(NoShow), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? NoShow { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PreventBuyMultiple), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? PreventBuyMultiple { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AuctionID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? AuctionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinBiddingReserve), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinBiddingReserve { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxBiddingReserve), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxBiddingReserve { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchBiddingReserve), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchBiddingReserve { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchBiddingReserveIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchBiddingReserveIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(LotGroupID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? LotGroupID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(LotGroupIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? LotGroupIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PickupLocationID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? PickupLocationID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PickupLocationIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? PickupLocationIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinPickupTime), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinPickupTime { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxPickupTime), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxPickupTime { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPickupTime), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchPickupTime { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPickupTimeIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchPickupTimeIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinQuantityAvailable), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinQuantityAvailable { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxQuantityAvailable), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxQuantityAvailable { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityAvailable), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchQuantityAvailable { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityAvailableIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchQuantityAvailableIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinQuantitySold), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinQuantitySold { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxQuantitySold), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxQuantitySold { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantitySold), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchQuantitySold { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantitySoldIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchQuantitySoldIncludeNull { get; set; }
    }
}
