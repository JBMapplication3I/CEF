// <autogenerated>
// <copyright file="MessageSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Message search.</summary>
    public partial class MessageSearchModel
        : BaseSearchModel
        , IMessageSearchModel
    {
        #region IAmFilterableByBrandSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
        public int? BrandID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Key for objects")]
        public string? BrandKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Name for objects")]
        public string? BrandName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a brand which uses this category")]
        public int? BrandCategoryID { get; set; }
        #endregion
        #region IAmFilterableByStoreSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
        public int? StoreID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? StoreIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Key for objects")]
        public string? StoreKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Name for objects")]
        public string? StoreName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store SEO URL for objects")]
        public string? StoreSeoUrl { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this country")]
        public int? StoreCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this region")]
        public int? StoreRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this city")]
        public string? StoreCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this country")]
        public int? StoreAnyCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this region")]
        public int? StoreAnyRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this city")]
        public string? StoreAnyCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyDistrictID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any district")]
        public int? StoreAnyDistrictID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyZipCode), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any zip code")]
        public string? StoreAnyZipCode { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLatitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any latitude")]
        public double? StoreAnyLatitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLongitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any longitude")]
        public double? StoreAnyLongitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRadius), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any radius")]
        public int? StoreAnyRadius { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyUnits), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any units")]
        public Enums.LocatorUnits? StoreAnyUnits { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsReplyAllAllowed), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsReplyAllAllowed { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ConversationID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? ConversationID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ConversationIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ConversationIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SentByUserID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? SentByUserID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SentByUserIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? SentByUserIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Body), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Body { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BodyStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BodyStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BodyIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BodyIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Context), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Context { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContextStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContextStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContextIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContextIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Subject), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Subject { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SubjectStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? SubjectStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SubjectIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? SubjectIncludeNull { get; set; }
    }
}
