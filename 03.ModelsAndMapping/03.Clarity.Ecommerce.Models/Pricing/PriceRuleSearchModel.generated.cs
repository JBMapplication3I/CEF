// <autogenerated>
// <copyright file="PriceRuleSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Price Rule search.</summary>
    public partial class PriceRuleSearchModel
        : NameableBaseSearchModel
        , IPriceRuleSearchModel
    {
        #region IAmFilterableByAccountSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
        public int? AccountID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false,
            Description = "When true, allow matches to null for AccountID field")]
        public bool? AccountIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Account Key for objects")]
        public string? AccountKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Account Name for objects")]
        public string? AccountName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false,
            Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
        public bool? AccountNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false,
            Description = "When true, allow matches to null for AccountName field")]
        public bool? AccountNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountIDOrCustomKeyOrNameOrDescription), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? AccountIDOrCustomKeyOrNameOrDescription { get; set; }
        #endregion
        #region IAmFilterableByBrandSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
        public int? BrandID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Key for objects")]
        public string? BrandKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Name for objects")]
        public string? BrandName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a brand which uses this category")]
        public int? BrandCategoryID { get; set; }
        #endregion
        #region IAmFilterableByProductSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ProductID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Key for objects")]
        public string? ProductKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Name for objects")]
        public string? ProductName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product SEO URL for objects")]
        public string? ProductSeoUrl { get; set; }
        #endregion
        #region IAmFilterableByFranchiseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
        public int? FranchiseID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Franchise Key for objects")]
        public string? FranchiseKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Franchise Name for objects")]
        public string? FranchiseName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a Franchise which uses this category")]
        public int? FranchiseCategoryID { get; set; }
        #endregion
        #region IAmFilterableByManufacturerSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ManufacturerID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ManufacturerID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ManufacturerKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Manufacturer Key for objects")]
        public string? ManufacturerKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ManufacturerName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Manufacturer Name for objects")]
        public string? ManufacturerName { get; set; }
        #endregion
        #region IAmFilterableByStoreSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
        public int? StoreID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? StoreIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Key for objects")]
        public string? StoreKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Name for objects")]
        public string? StoreName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store SEO URL for objects")]
        public string? StoreSeoUrl { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this country")]
        public int? StoreCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this region")]
        public int? StoreRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this city")]
        public string? StoreCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this country")]
        public int? StoreAnyCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this region")]
        public int? StoreAnyRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this city")]
        public string? StoreAnyCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyDistrictID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any district")]
        public int? StoreAnyDistrictID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyZipCode), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any zip code")]
        public string? StoreAnyZipCode { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLatitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any latitude")]
        public double? StoreAnyLatitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLongitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any longitude")]
        public double? StoreAnyLongitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRadius), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any radius")]
        public int? StoreAnyRadius { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyUnits), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any units")]
        public Enums.LocatorUnits? StoreAnyUnits { get; set; }
        #endregion
        #region IAmFilterableByVendorSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
        public int? VendorID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Vendor Key for objects")]
        public string? VendorKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Vendor Name for objects")]
        public string? VendorName { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsExclusive), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsExclusive { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsMarkup), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsMarkup { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsOnlyForAnonymousUsers), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsOnlyForAnonymousUsers { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsPercentage), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsPercentage { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UsePriceBase), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? UsePriceBase { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinPriceAdjustment), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinPriceAdjustment { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxPriceAdjustment), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxPriceAdjustment { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPriceAdjustment), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchPriceAdjustment { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CurrencyID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? CurrencyID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CurrencyIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CurrencyIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchEndDateIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchEndDateIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinMaxQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinMaxQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxMaxQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxMaxQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMaxQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchMaxQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMaxQuantityIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchMaxQuantityIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinMinQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinMinQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxMinQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxMinQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMinQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchMinQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMinQuantityIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchMinQuantityIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinPriority), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinPriority { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxPriority), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxPriority { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPriority), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchPriority { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPriorityIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchPriorityIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchStartDateIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchStartDateIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UnitOfMeasure), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? UnitOfMeasure { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UnitOfMeasureStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? UnitOfMeasureStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UnitOfMeasureIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? UnitOfMeasureIncludeNull { get; set; }
    }
}
