// <autogenerated>
// <copyright file="SalesInvoiceItemModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for Sales Invoice Item.</summary>
    public partial class SalesItemBaseModel
        : NameableBaseModel
            , ISalesItemBaseModel
    {
        #region IAmFilterableByNullableProduct Properties
        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? ProductID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ProductKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ProductName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ProductSeoUrl { get; set; }

        /// <inheritdoc cref="IAmFilterableByNullableProductModel.Product"/>
        public ProductModel? Product { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IProductModel? IAmFilterableByNullableProductModel.Product { get => Product; set => Product = (ProductModel?)value; }
        #endregion
        #region IAmFilterableByNullableUser Properties
        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? UserID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? UserKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? UserName { get; set; }

        /// <inheritdoc cref="IAmFilterableByNullableUserModel.User "/>
        public UserModel? User { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IUserModel? IAmFilterableByNullableUserModel.User { get => User; set => User = (UserModel?)value; }
        #endregion
        #region IHaveNotesBaseModel
        /// <inheritdoc cref="IHaveNotesBaseModel.Notes"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Notes), DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
                Description = "Notes for the object, optional")]
        public List<NoteModel>? Notes { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<INoteModel>? IHaveNotesBaseModel.Notes { get => Notes?.ToList<INoteModel>(); set => Notes = value?.Cast<NoteModel>().ToList(); }
        #endregion
    }
}
