// <autogenerated>
// <copyright file="AccountSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Account search.</summary>
    public partial class AccountSearchModel
        : NameableBaseSearchModel
        , IAccountSearchModel
    {
        #region IHaveATypeBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects")]
        public int? TypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically include")]
        public int?[]? TypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects to specifically exclude")]
        public int? ExcludedTypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically exclude")]
        public int?[]? ExcludedTypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects")]
        public string? TypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically include")]
        public string?[]? TypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects to specifically exclude")]
        public string? ExcludedTypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically exclude")]
        public string?[]? ExcludedTypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects")]
        public string? TypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically include")]
        public string?[]? TypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects to specifically exclude")]
        public string? ExcludedTypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects")]
        public string? TypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically include")]
        public string?[]? TypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects to specifically exclude")]
        public string? ExcludedTypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeTranslationKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Translation Key for objects")]
        public string? TypeTranslationKey { get; set; }
        #endregion
        #region IHaveAStatusBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status ID for objects")]
        public int? StatusID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusIDs), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status IDs for objects to specifically include")]
        public int?[]? StatusIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status ID for objects to specifically exclude")]
        public int? ExcludedStatusID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusIDs), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status IDs for objects to specifically exclude")]
        public int?[]? ExcludedStatusIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Key for objects")]
        public string? StatusKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusKeys), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Keys for objects to specifically include")]
        public string?[]? StatusKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Key for objects to specifically exclude")]
        public string? ExcludedStatusKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusKeys), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Keys for objects to specifically exclude")]
        public string?[]? ExcludedStatusKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Name for objects")]
        public string? StatusName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Names for objects to specifically include")]
        public string?[]? StatusNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Name for objects to specifically exclude")]
        public string? ExcludedStatusName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Names for objects to specifically exclude")]
        public string?[]? ExcludedStatusNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Name for objects")]
        public string? StatusDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusDisplayNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Names for objects to specifically include")]
        public string?[]? StatusDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Name for objects to specifically exclude")]
        public string? ExcludedStatusDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusDisplayNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Names for objects to specifically exclude")]
        public string?[]? ExcludedStatusDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusTranslationKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Translation Key for objects")]
        public string? StatusTranslationKey { get; set; }
        #endregion
        #region IAmFilterableByBrandSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
        public int? BrandID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Key for objects")]
        public string? BrandKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Name for objects")]
        public string? BrandName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a brand which uses this category")]
        public int? BrandCategoryID { get; set; }
        #endregion
        #region IAmFilterableByProductSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ProductID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Key for objects")]
        public string? ProductKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Name for objects")]
        public string? ProductName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product SEO URL for objects")]
        public string? ProductSeoUrl { get; set; }
        #endregion
        #region IAmFilterableByFranchiseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
        public int? FranchiseID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Franchise Key for objects")]
        public string? FranchiseKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Franchise Name for objects")]
        public string? FranchiseName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a Franchise which uses this category")]
        public int? FranchiseCategoryID { get; set; }
        #endregion
        #region IAmFilterableByStoreSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
        public int? StoreID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? StoreIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Key for objects")]
        public string? StoreKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Name for objects")]
        public string? StoreName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store SEO URL for objects")]
        public string? StoreSeoUrl { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this country")]
        public int? StoreCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this region")]
        public int? StoreRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this city")]
        public string? StoreCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this country")]
        public int? StoreAnyCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this region")]
        public int? StoreAnyRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this city")]
        public string? StoreAnyCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyDistrictID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any district")]
        public int? StoreAnyDistrictID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyZipCode), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any zip code")]
        public string? StoreAnyZipCode { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLatitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any latitude")]
        public double? StoreAnyLatitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLongitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any longitude")]
        public double? StoreAnyLongitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRadius), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any radius")]
        public int? StoreAnyRadius { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyUnits), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any units")]
        public Enums.LocatorUnits? StoreAnyUnits { get; set; }
        #endregion
        #region IAmFilterableByUserSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
        public int? UserID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false,
            Description = "When true, allow matches to null for UserID field")]
        public bool? UserIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The User Key for objects")]
        public string? UserKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserUsername), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The User Name for objects")]
        public string? UserUsername { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserIDOrCustomKeyOrUserName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
        public string? UserIDOrCustomKeyOrUserName { get; set; }
        #endregion
        #region IAmFilterableByVendorSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
        public int? VendorID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Vendor Key for objects")]
        public string? VendorKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Vendor Name for objects")]
        public string? VendorName { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsOnHold), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsOnHold { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsTaxable), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsTaxable { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinCredit), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinCredit { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxCredit), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxCredit { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchCredit), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchCredit { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchCreditIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchCreditIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CreditCurrencyID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? CreditCurrencyID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CreditCurrencyIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CreditCurrencyIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BusinessType), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? BusinessType { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BusinessTypeStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BusinessTypeStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BusinessTypeIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BusinessTypeIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(DEANumber), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? DEANumber { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(DEANumberStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? DEANumberStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(DEANumberIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? DEANumberIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(DunsNumber), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? DunsNumber { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(DunsNumberStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? DunsNumberStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(DunsNumberIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? DunsNumberIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(EIN), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? EIN { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(EINStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? EINStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(EINIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? EINIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseHolderName), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? MedicalLicenseHolderName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseHolderNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MedicalLicenseHolderNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseHolderNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MedicalLicenseHolderNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseNumber), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? MedicalLicenseNumber { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseNumberStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MedicalLicenseNumberStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseNumberIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MedicalLicenseNumberIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseState), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? MedicalLicenseState { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseStateStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MedicalLicenseStateStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MedicalLicenseStateIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MedicalLicenseStateIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PreferredInvoiceMethod), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? PreferredInvoiceMethod { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PreferredInvoiceMethodStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? PreferredInvoiceMethodStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PreferredInvoiceMethodIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? PreferredInvoiceMethodIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SageID), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? SageID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SageIDStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? SageIDStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SageIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? SageIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SalesmanCode), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? SalesmanCode { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SalesmanCodeStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? SalesmanCodeStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SalesmanCodeIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? SalesmanCodeIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TaxEntityUseCode), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? TaxEntityUseCode { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TaxEntityUseCodeStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? TaxEntityUseCodeStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TaxEntityUseCodeIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? TaxEntityUseCodeIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TaxExemptionNo), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? TaxExemptionNo { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TaxExemptionNoStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? TaxExemptionNoStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TaxExemptionNoIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? TaxExemptionNoIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Token), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Token { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TokenStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? TokenStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TokenIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? TokenIncludeNull { get; set; }
    }
}
