// <autogenerated>
// <copyright file="ShipCarrierModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for Ship Carrier.</summary>
    public partial class ShipCarrierModel
        : NameableBaseModel
            , IShipCarrierModel
    {
        #region IHaveANullableContactBaseModel
        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? ContactID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactPhone { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactFax { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactEmail { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactFirstName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactLastName { get; set; }

        /// <inheritdoc cref="IHaveANullableContactBaseModel.Contact"/>
        public ContactModel? Contact { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IContactModel? IHaveANullableContactBaseModel.Contact { get => Contact; set => Contact = (ContactModel?)value; }
        #endregion
    }
}
