// <autogenerated>
// <copyright file="ProductPricePointSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Product Price Point search.</summary>
    public partial class ProductPricePointSearchModel
        : AmARelationshipTableBaseSearchModel
        , IProductPricePointSearchModel
    {
        #region IAmARelationshipTableBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(MasterName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Name of the Master Record [Optional]")]
        public string? MasterName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SlaveName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Name of the Slave Record [Optional]")]
        public string? SlaveName { get; set; }
        #endregion
        #region IAmFilterableByBrandSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
        public int? BrandID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Key for objects")]
        public string? BrandKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Name for objects")]
        public string? BrandName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a brand which uses this category")]
        public int? BrandCategoryID { get; set; }
        #endregion
        #region IAmFilterableByProductSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ProductID { get => MasterID; set => MasterID = value; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Key for objects")]
        public string? ProductKey { get => MasterKey; set => MasterKey = value; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Name for objects")]
        public string? ProductName { get => MasterName; set => MasterName = value; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product SEO URL for objects")]
        public string? ProductSeoUrl { get; set; }
        #endregion
        #region IAmFilterableByFranchiseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
        public int? FranchiseID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Franchise Key for objects")]
        public string? FranchiseKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Franchise Name for objects")]
        public string? FranchiseName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a Franchise which uses this category")]
        public int? FranchiseCategoryID { get; set; }
        #endregion
        #region IAmFilterableByStoreSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
        public int? StoreID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? StoreIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Key for objects")]
        public string? StoreKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Name for objects")]
        public string? StoreName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store SEO URL for objects")]
        public string? StoreSeoUrl { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this country")]
        public int? StoreCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this region")]
        public int? StoreRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this city")]
        public string? StoreCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this country")]
        public int? StoreAnyCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this region")]
        public int? StoreAnyRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this city")]
        public string? StoreAnyCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyDistrictID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any district")]
        public int? StoreAnyDistrictID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyZipCode), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any zip code")]
        public string? StoreAnyZipCode { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLatitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any latitude")]
        public double? StoreAnyLatitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLongitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any longitude")]
        public double? StoreAnyLongitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRadius), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any radius")]
        public int? StoreAnyRadius { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyUnits), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any units")]
        public Enums.LocatorUnits? StoreAnyUnits { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(CurrencyID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? CurrencyID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CurrencyIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CurrencyIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinFrom), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinFrom { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxFrom), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxFrom { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchFrom), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchFrom { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchFromIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchFromIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinMaxQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinMaxQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxMaxQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxMaxQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMaxQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchMaxQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMaxQuantityIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchMaxQuantityIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinMinQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinMinQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxMinQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxMinQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMinQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchMinQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMinQuantityIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchMinQuantityIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinPercentDiscount), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinPercentDiscount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxPercentDiscount), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxPercentDiscount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPercentDiscount), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchPercentDiscount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPercentDiscountIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchPercentDiscountIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinPrice), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinPrice { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxPrice), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxPrice { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPrice), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchPrice { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPriceIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchPriceIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PriceRoundingID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? PriceRoundingID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PriceRoundingIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? PriceRoundingIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinTo), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinTo { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxTo), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxTo { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchTo), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchTo { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchToIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchToIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UnitOfMeasure), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? UnitOfMeasure { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UnitOfMeasureStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? UnitOfMeasureStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UnitOfMeasureIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? UnitOfMeasureIncludeNull { get; set; }
    }
}
