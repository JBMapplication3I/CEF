// <autogenerated>
// <copyright file="ProductInventoryLocationSectionSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Product Inventory Location Section search.</summary>
    public partial class ProductInventoryLocationSectionSearchModel
        : AmARelationshipTableBaseSearchModel
        , IProductInventoryLocationSectionSearchModel
    {
        #region IAmARelationshipTableBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(MasterName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Name of the Master Record [Optional]")]
        public string? MasterName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SlaveName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Name of the Slave Record [Optional]")]
        public string? SlaveName { get; set; }
        #endregion
        #region IAmFilterableByProductSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ProductID { get => MasterID; set => MasterID = value; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Key for objects")]
        public string? ProductKey { get => MasterKey; set => MasterKey = value; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Name for objects")]
        public string? ProductName { get => MasterName; set => MasterName = value; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product SEO URL for objects")]
        public string? ProductSeoUrl { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantity), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchQuantity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchQuantityIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinQuantityAllocated), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinQuantityAllocated { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxQuantityAllocated), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxQuantityAllocated { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityAllocated), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchQuantityAllocated { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityAllocatedIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchQuantityAllocatedIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinQuantityBroken), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinQuantityBroken { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxQuantityBroken), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxQuantityBroken { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityBroken), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchQuantityBroken { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityBrokenIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchQuantityBrokenIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinQuantityPreSold), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinQuantityPreSold { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxQuantityPreSold), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxQuantityPreSold { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityPreSold), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchQuantityPreSold { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchQuantityPreSoldIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchQuantityPreSoldIncludeNull { get; set; }
    }
}
