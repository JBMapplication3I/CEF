// <autogenerated>
// <copyright file="FavoriteCategoryModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for Favorite Category.</summary>
    public partial class FavoriteCategoryModel
        : AmARelationshipTableBaseModel
            , IFavoriteCategoryModel
    {
        #region IAmARelationshipTable<IUserModel,ICategoryModel>

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(SlaveName), DataType = "string?", ParameterType = "body", IsRequired = false,
                Description = "The Name of the Slave record.")]
        public string? SlaveName { get; set; }

        /// <inheritdoc/>
        public UserModel? Master { get; set; }

        /// <inheritdoc cref="IAmARelationshipTableBaseModel{ICategoryModel}.Slave"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Slave), DataType = "CategoryModel?", ParameterType = "body", IsRequired = false,
                Description = "The Slave record (may only be partially mapped out).")]
        public CategoryModel? Slave { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ICategoryModel? IAmARelationshipTableBaseModel<ICategoryModel>.Slave { get => Slave; set => Slave = (CategoryModel?)value; }
        #endregion
        #region IAmAFavoriteRelationshipTable
        /// <inheritdoc/>
        [JsonIgnore]
        public int FavoriteID { get => SlaveID; set => SlaveID = value; }

        /// <inheritdoc/>
        [JsonIgnore]
        public string? FavoriteKey { get => SlaveKey; set => SlaveKey = value; }

        /// <inheritdoc/>
        [JsonIgnore]
        public string? FavoriteName { get => SlaveName; set => SlaveName = value; }

        /// <inheritdoc cref="IFavoriteCategoryModel.Favorite"/>
        [JsonIgnore]
        public CategoryModel? Favorite { get => Slave; set => Slave = (CategoryModel?)value; }

        /// <inheritdoc/>
        [JsonIgnore]
        ICategoryModel? IFavoriteCategoryModel.Favorite { get => Slave; set => Slave = (CategoryModel?)value; }
        #endregion
    }
}
