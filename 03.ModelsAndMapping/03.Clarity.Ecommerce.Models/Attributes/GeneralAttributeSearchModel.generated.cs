// <autogenerated>
// <copyright file="GeneralAttributeSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the General Attribute search.</summary>
    public partial class GeneralAttributeSearchModel
        : TypableBaseSearchModel
        , IGeneralAttributeSearchModel
    {
        #region IHaveATypeBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects")]
        public int? TypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically include")]
        public int?[]? TypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects to specifically exclude")]
        public int? ExcludedTypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically exclude")]
        public int?[]? ExcludedTypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects")]
        public string? TypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically include")]
        public string?[]? TypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects to specifically exclude")]
        public string? ExcludedTypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically exclude")]
        public string?[]? ExcludedTypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects")]
        public string? TypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically include")]
        public string?[]? TypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects to specifically exclude")]
        public string? ExcludedTypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects")]
        public string? TypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically include")]
        public string?[]? TypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects to specifically exclude")]
        public string? ExcludedTypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeTranslationKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Translation Key for objects")]
        public string? TypeTranslationKey { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(HideFromCatalogViews), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? HideFromCatalogViews { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(HideFromProductDetailView), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? HideFromProductDetailView { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(HideFromStorefront), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? HideFromStorefront { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(HideFromSuppliers), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? HideFromSuppliers { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsComparable), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsComparable { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsFilter), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsFilter { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsMarkup), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsMarkup { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsPredefined), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsPredefined { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsTab), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsTab { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AttributeGroupID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? AttributeGroupID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AttributeGroupIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? AttributeGroupIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AttributeTabID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? AttributeTabID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AttributeTabIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? AttributeTabIDIncludeNull { get; set; }
    }
}
