// <autogenerated>
// <copyright file="ReviewSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Review search.</summary>
    public partial class ReviewSearchModel
        : NameableBaseSearchModel
        , IReviewSearchModel
    {
        #region IHaveATypeBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects")]
        public int? TypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically include")]
        public int?[]? TypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects to specifically exclude")]
        public int? ExcludedTypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically exclude")]
        public int?[]? ExcludedTypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects")]
        public string? TypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically include")]
        public string?[]? TypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects to specifically exclude")]
        public string? ExcludedTypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically exclude")]
        public string?[]? ExcludedTypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects")]
        public string? TypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically include")]
        public string?[]? TypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects to specifically exclude")]
        public string? ExcludedTypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects")]
        public string? TypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically include")]
        public string?[]? TypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects to specifically exclude")]
        public string? ExcludedTypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeTranslationKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Translation Key for objects")]
        public string? TypeTranslationKey { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(Approved), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? Approved { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(SubmittedByUserID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? SubmittedByUserID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ApprovedByUserID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? ApprovedByUserID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ApprovedByUserIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ApprovedByUserIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinApprovedDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinApprovedDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxApprovedDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxApprovedDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchApprovedDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchApprovedDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchApprovedDateIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchApprovedDateIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CategoryID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? CategoryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CategoryIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CategoryIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ManufacturerID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? ManufacturerID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ManufacturerIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ManufacturerIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? ProductID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ProductIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinSortOrder), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinSortOrder { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxSortOrder), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxSortOrder { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchSortOrder), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchSortOrder { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchSortOrderIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchSortOrderIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? StoreID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? StoreIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? UserID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? UserIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? VendorID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? VendorIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Comment), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Comment { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CommentStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CommentStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CommentIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CommentIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Location), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Location { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(LocationStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? LocationStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(LocationIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? LocationIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Title), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Title { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TitleStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? TitleStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TitleIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? TitleIncludeNull { get; set; }
    }
}
