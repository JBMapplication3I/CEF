// <autogenerated>
// <copyright file="VendorModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for Vendor.</summary>
    public partial class VendorModel
        : NameableBaseModel
            , IVendorModel
    {
        #region IHaveATypeBaseModel<ITypeModel>
        /// <inheritdoc/>
        [DefaultValue(0),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeID), DataType = "int", ParameterType = "body", IsRequired = true,
                Description = "Identifier for the Type of this Account, required if no TypeModel present")]
        public int TypeID { get; set; }

        /// <inheritdoc cref="IHaveATypeBaseModel{ITypeModel}.Type"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Type), IsRequired = true, DataType = "TypeModel", ParameterType = "body",
                Description = "Model for Type of this Account, required if no TypeID present")]
        public TypeModel? Type { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ITypeModel? IHaveATypeBaseModel<ITypeModel>.Type { get => Type; set => Type = (TypeModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeKey), DataType = "string", ParameterType = "body", IsRequired = true,
                Description = "Key for the Type of this Account, read-only")]
        public string? TypeKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeName), DataType = "string", ParameterType = "body", IsRequired = true,
                Description = "Name for the Type of this Account, read-only")]
        public string? TypeName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeDisplayName), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "Display Name for the Type of this object, read-only")]
        public string? TypeDisplayName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeTranslationKey), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "Translation Key for the Type of this object, read-only")]
        public string? TypeTranslationKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TypeSortOrder), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "Sort Order for the Type of this object, read-only")]
        public int? TypeSortOrder { get; set; }
        #endregion
        #region IAmFilterableByAccountModel<IVendorAccountModel> Properties
        /// <inheritdoc cref="IAmFilterableByAccountModel{IVendorAccountModel}.Accounts"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Accounts), DataType = "List<VendorAccountModel>", ParameterType = "body", IsRequired = false,
                Description = "Accounts this object is associated with")]
        public List<VendorAccountModel>? Accounts { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IVendorAccountModel>? IAmFilterableByAccountModel<IVendorAccountModel>.Accounts { get => Accounts?.ToList<IVendorAccountModel>(); set => Accounts = value?.Cast<VendorAccountModel>().ToList(); }
        #endregion
        #region IAmFilterableByBrandModel<> Properties
        /// <inheritdoc cref="IAmFilterableByBrandModel{IBrandVendorModel}.Brands"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Brands), DataType = "List<BrandVendorModel>", ParameterType = "body", IsRequired = false,
                Description = "Brands this object is associated with")]
        public List<BrandVendorModel>? Brands { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IBrandVendorModel>? IAmFilterableByBrandModel<IBrandVendorModel>.Brands { get => Brands?.ToList<IBrandVendorModel>(); set => Brands = value?.Cast<BrandVendorModel>().ToList(); }
        #endregion
        #region IAmFilterableByFranchiseModel<> Properties
        /// <inheritdoc cref="IAmFilterableByFranchiseModel{IFranchiseVendorModel}.Franchises"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Franchises), DataType = "List<FranchiseVendorModel>", ParameterType = "body", IsRequired = false,
                Description = "Franchises this object is associated with")]
        public List<FranchiseVendorModel>? Franchises { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IFranchiseVendorModel>? IAmFilterableByFranchiseModel<IFranchiseVendorModel>.Franchises { get => Franchises?.ToList<IFranchiseVendorModel>(); set => Franchises = value?.Cast<FranchiseVendorModel>().ToList(); }
        #endregion
        #region IAmFilterableByManufacturerModel<> Properties
        /// <inheritdoc cref="IAmFilterableByManufacturerModel{IVendorManufacturerModel}.Manufacturers"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Manufacturers), DataType = "List<VendorManufacturerModel>", ParameterType = "body", IsRequired = false,
                Description = "Manufacturers this object is associated with")]
        public List<VendorManufacturerModel>? Manufacturers { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IVendorManufacturerModel>? IAmFilterableByManufacturerModel<IVendorManufacturerModel>.Manufacturers { get => Manufacturers?.ToList<IVendorManufacturerModel>(); set => Manufacturers = value?.Cast<VendorManufacturerModel>().ToList(); }
        #endregion
        #region IAmFilterableByProductModel<> Properties
        /// <inheritdoc cref="IAmFilterableByProductModel{IVendorProductModel}.Products"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Products), DataType = "List<VendorProductModel>", ParameterType = "body", IsRequired = false,
                Description = "Products this object is associated with")]
        public List<VendorProductModel>? Products { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IVendorProductModel>? IAmFilterableByProductModel<IVendorProductModel>.Products { get => Products?.ToList<IVendorProductModel>(); set => Products = value?.Cast<VendorProductModel>().ToList(); }
        #endregion
        #region IAmFilterableByStoreModel<> Properties
        /// <inheritdoc cref="IAmFilterableByStoreModel{IStoreVendorModel}.Stores"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Stores), DataType = "List<StoreVendorModel>", ParameterType = "body", IsRequired = false,
                Description = "Stores this object is associated with")]
        public List<StoreVendorModel>? Stores { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IStoreVendorModel>? IAmFilterableByStoreModel<IStoreVendorModel>.Stores { get => Stores?.ToList<IStoreVendorModel>(); set => Stores = value?.Cast<StoreVendorModel>().ToList(); }
        #endregion
        #region IHaveANullableContactBaseModel
        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? ContactID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactPhone { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactFax { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactEmail { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactFirstName { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? ContactLastName { get; set; }

        /// <inheritdoc cref="IHaveANullableContactBaseModel.Contact"/>
        public ContactModel? Contact { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IContactModel? IHaveANullableContactBaseModel.Contact { get => Contact; set => Contact = (ContactModel?)value; }
        #endregion
        #region IHaveNotesBaseModel
        /// <inheritdoc cref="IHaveNotesBaseModel.Notes"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Notes), DataType = "List<NoteModel>", ParameterType = "body", IsRequired = false,
                Description = "Notes for the object, optional")]
        public List<NoteModel>? Notes { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<INoteModel>? IHaveNotesBaseModel.Notes { get => Notes?.ToList<INoteModel>(); set => Notes = value?.Cast<NoteModel>().ToList(); }
        #endregion
        #region IHaveImagesBaseModel
        /// <inheritdoc cref="IHaveImagesBaseModel{IVendorImageModel, ITypeModel}.Images"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Images), DataType = "List<VendorImageModel>", ParameterType = "body", IsRequired = false,
                Description = "Images for the object, optional")]
        public List<VendorImageModel>? Images { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IVendorImageModel>? IHaveImagesBaseModel<IVendorImageModel, ITypeModel>.Images { get => Images?.ToList<IVendorImageModel>(); set => Images = value?.Cast<VendorImageModel>().ToList(); }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(PrimaryImageFileName), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
        public string? PrimaryImageFileName { get; set; }
        #endregion
        #region IHaveOrderMinimumsBaseModel
        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderDollarAmount), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumOrderDollarAmount { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderDollarAmountAfter), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumOrderDollarAmountAfter { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderDollarAmountWarningMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
        public string? MinimumOrderDollarAmountWarningMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderDollarAmountOverrideFee), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumOrderDollarAmountOverrideFee { get; set; }

        /// <inheritdoc/>
        [DefaultValue(false),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderDollarAmountOverrideFeeIsPercent), DataType = "bool", ParameterType = "body", IsRequired = false,
                Description = "")]
        public bool MinimumOrderDollarAmountOverrideFeeIsPercent { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderDollarAmountOverrideFeeWarningMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The warning message for not reaching the minimum order requirement by Dollar Amount")]
        public string? MinimumOrderDollarAmountOverrideFeeWarningMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderDollarAmountOverrideFeeAcceptedMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The accepted override fee message for not reaching the minimum order requirement by Dollar Amount")]
        public string? MinimumOrderDollarAmountOverrideFeeAcceptedMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderQuantityAmount), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumOrderQuantityAmount { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderQuantityAmountAfter), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumOrderQuantityAmountAfter { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderQuantityAmountWarningMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
        public string? MinimumOrderQuantityAmountWarningMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderQuantityAmountOverrideFee), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumOrderQuantityAmountOverrideFee { get; set; }

        /// <inheritdoc/>
        [DefaultValue(false),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderQuantityAmountOverrideFeeIsPercent), DataType = "bool", ParameterType = "body", IsRequired = false,
                Description = "")]
        public bool MinimumOrderQuantityAmountOverrideFeeIsPercent { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderQuantityAmountOverrideFeeWarningMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The warning message for not reaching the minimum order requirement by Unit Quantity")]
        public string? MinimumOrderQuantityAmountOverrideFeeWarningMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumOrderQuantityAmountOverrideFeeAcceptedMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The accepted override fee message for not reaching the minimum order requirement by Unit Quantity")]
        public string? MinimumOrderQuantityAmountOverrideFeeAcceptedMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? MinimumOrderDollarAmountBufferProductID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumOrderDollarAmountBufferProductKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumOrderDollarAmountBufferProductName { get; set; }

        /// <inheritdoc cref="IHaveOrderMinimumsBaseModel.MinimumOrderDollarAmountBufferProduct" />
        public ProductModel? MinimumOrderDollarAmountBufferProduct { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IProductModel? IHaveOrderMinimumsBaseModel.MinimumOrderDollarAmountBufferProduct { get => MinimumOrderDollarAmountBufferProduct; set => MinimumOrderDollarAmountBufferProduct = (ProductModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? MinimumOrderQuantityAmountBufferProductID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumOrderQuantityAmountBufferProductKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumOrderQuantityAmountBufferProductName { get; set; }

        /// <inheritdoc cref="IHaveOrderMinimumsBaseModel.MinimumOrderQuantityAmountBufferProduct" />
        public ProductModel? MinimumOrderQuantityAmountBufferProduct { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IProductModel? IHaveOrderMinimumsBaseModel.MinimumOrderQuantityAmountBufferProduct { get => MinimumOrderQuantityAmountBufferProduct; set => MinimumOrderQuantityAmountBufferProduct = (ProductModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? MinimumOrderDollarAmountBufferCategoryID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumOrderDollarAmountBufferCategoryKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumOrderDollarAmountBufferCategoryName { get; set; }

        /// <inheritdoc cref="IHaveOrderMinimumsBaseModel.MinimumOrderDollarAmountBufferCategory" />
        public CategoryModel? MinimumOrderDollarAmountBufferCategory { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ICategoryModel? IHaveOrderMinimumsBaseModel.MinimumOrderDollarAmountBufferCategory { get => MinimumOrderDollarAmountBufferCategory; set => MinimumOrderDollarAmountBufferCategory = (CategoryModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? MinimumOrderQuantityAmountBufferCategoryID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumOrderQuantityAmountBufferCategoryKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumOrderQuantityAmountBufferCategoryName { get; set; }

        /// <inheritdoc cref="IHaveOrderMinimumsBaseModel.MinimumOrderQuantityAmountBufferCategory" />
        public CategoryModel? MinimumOrderQuantityAmountBufferCategory { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ICategoryModel? IHaveOrderMinimumsBaseModel.MinimumOrderQuantityAmountBufferCategory { get => MinimumOrderQuantityAmountBufferCategory; set => MinimumOrderQuantityAmountBufferCategory = (CategoryModel?)value; }
        #endregion
        #region IHaveFreeShippingMinimumsBaseModel
        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumForFreeShippingDollarAmount), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumForFreeShippingDollarAmount { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumForFreeShippingDollarAmountAfter), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumForFreeShippingDollarAmountAfter { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumForFreeShippingDollarAmountWarningMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The warning message for not reaching the minimum free shipping requirement by Dollar Amount")]
        public string? MinimumForFreeShippingDollarAmountWarningMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "")]
        public string? MinimumForFreeShippingDollarAmountIgnoredAcceptedMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumForFreeShippingQuantityAmount), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumForFreeShippingQuantityAmount { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumForFreeShippingQuantityAmountAfter), DataType = "decimal?", ParameterType = "body", IsRequired = false,
                Description = "")]
        public decimal? MinimumForFreeShippingQuantityAmountAfter { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumForFreeShippingQuantityAmountWarningMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The warning message for not reaching the minimum free shipping requirement by Unit Quantity")]
        public string? MinimumForFreeShippingQuantityAmountWarningMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "")]
        public string? MinimumForFreeShippingQuantityAmountIgnoredAcceptedMessage { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? MinimumForFreeShippingDollarAmountBufferProductID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumForFreeShippingDollarAmountBufferProductKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumForFreeShippingDollarAmountBufferProductName { get; set; }

        /// <inheritdoc cref="IHaveFreeShippingMinimumsBaseModel.MinimumForFreeShippingDollarAmountBufferProduct" />
        public ProductModel? MinimumForFreeShippingDollarAmountBufferProduct { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IProductModel? IHaveFreeShippingMinimumsBaseModel.MinimumForFreeShippingDollarAmountBufferProduct { get => MinimumForFreeShippingDollarAmountBufferProduct; set => MinimumForFreeShippingDollarAmountBufferProduct = (ProductModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? MinimumForFreeShippingQuantityAmountBufferProductID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumForFreeShippingQuantityAmountBufferProductKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumForFreeShippingQuantityAmountBufferProductName { get; set; }

        /// <inheritdoc cref="IHaveFreeShippingMinimumsBaseModel.MinimumForFreeShippingQuantityAmountBufferProduct" />
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public ProductModel? MinimumForFreeShippingQuantityAmountBufferProduct { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IProductModel? IHaveFreeShippingMinimumsBaseModel.MinimumForFreeShippingQuantityAmountBufferProduct { get => MinimumForFreeShippingQuantityAmountBufferProduct; set => MinimumForFreeShippingQuantityAmountBufferProduct = (ProductModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? MinimumForFreeShippingDollarAmountBufferCategoryID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumForFreeShippingDollarAmountBufferCategoryKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumForFreeShippingDollarAmountBufferCategoryName { get; set; }

        /// <inheritdoc cref="IHaveFreeShippingMinimumsBaseModel.MinimumForFreeShippingDollarAmountBufferCategory" />
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public CategoryModel? MinimumForFreeShippingDollarAmountBufferCategory { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ICategoryModel? IHaveFreeShippingMinimumsBaseModel.MinimumForFreeShippingDollarAmountBufferCategory { get => MinimumForFreeShippingDollarAmountBufferCategory; set => MinimumForFreeShippingDollarAmountBufferCategory = (CategoryModel?)value; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public int? MinimumForFreeShippingQuantityAmountBufferCategoryID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumForFreeShippingQuantityAmountBufferCategoryKey { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public string? MinimumForFreeShippingQuantityAmountBufferCategoryName { get; set; }

        /// <inheritdoc cref="IHaveFreeShippingMinimumsBaseModel.MinimumForFreeShippingQuantityAmountBufferCategory" />
        [DefaultValue(null), DataMember(EmitDefaultValue = false)]
        public CategoryModel? MinimumForFreeShippingQuantityAmountBufferCategory { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        ICategoryModel? IHaveFreeShippingMinimumsBaseModel.MinimumForFreeShippingQuantityAmountBufferCategory { get => MinimumForFreeShippingQuantityAmountBufferCategory; set => MinimumForFreeShippingQuantityAmountBufferCategory = (CategoryModel?)value; }
        #endregion
        #region IHaveReviewsBaseModel
        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Reviews), DataType = "List<ReviewModel>", ParameterType = "body", IsRequired = false,
                Description = "Vendor Reviews")]
        public List<ReviewModel>? Reviews { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IReviewModel>? IHaveReviewsBaseModel.Reviews { get => Reviews?.ToList<IReviewModel>(); set => Reviews = value?.Cast<ReviewModel>().ToList(); }
        #endregion
    }
}
