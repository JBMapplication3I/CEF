// <autogenerated>
// <copyright file="SubscriptionHistorySearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Subscription History search.</summary>
    public partial class SubscriptionHistorySearchModel
        : AmARelationshipTableBaseSearchModel
        , ISubscriptionHistorySearchModel
    {
        #region IAmARelationshipTableBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(MasterName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Name of the Master Record [Optional]")]
        public string? MasterName { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(PaymentSuccess), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? PaymentSuccess { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinPaymentDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinPaymentDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxPaymentDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxPaymentDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPaymentDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchPaymentDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinBillingPeriodsPaid), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinBillingPeriodsPaid { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxBillingPeriodsPaid), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxBillingPeriodsPaid { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchBillingPeriodsPaid), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchBillingPeriodsPaid { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Memo), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Memo { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MemoStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MemoStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MemoIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MemoIncludeNull { get; set; }
    }
}
