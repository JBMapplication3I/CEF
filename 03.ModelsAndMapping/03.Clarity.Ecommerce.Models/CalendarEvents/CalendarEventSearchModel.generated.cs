// <autogenerated>
// <copyright file="CalendarEventSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Calendar Event search.</summary>
    public partial class CalendarEventSearchModel
        : NameableBaseSearchModel
        , ICalendarEventSearchModel
    {
        #region IHaveATypeBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects")]
        public int? TypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically include")]
        public int?[]? TypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Type ID for objects to specifically exclude")]
        public int? ExcludedTypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeIDs), DataType = "int?[]", ParameterType = "query", IsRequired = false,
            Description = "The Type IDs for objects to specifically exclude")]
        public int?[]? ExcludedTypeIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects")]
        public string? TypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically include")]
        public string?[]? TypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Key for objects to specifically exclude")]
        public string? ExcludedTypeKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeKeys), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Keys for objects to specifically exclude")]
        public string?[]? ExcludedTypeKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects")]
        public string? TypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically include")]
        public string?[]? TypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Name for objects to specifically exclude")]
        public string? ExcludedTypeName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects")]
        public string? TypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically include")]
        public string?[]? TypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Name for objects to specifically exclude")]
        public string? ExcludedTypeDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedTypeDisplayNames), DataType = "string[]", ParameterType = "query", IsRequired = false,
            Description = "The Type Display Names for objects to specifically exclude")]
        public string?[]? ExcludedTypeDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(TypeTranslationKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Type Translation Key for objects")]
        public string? TypeTranslationKey { get; set; }
        #endregion
        #region IHaveAStatusBaseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status ID for objects")]
        public int? StatusID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusIDs), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status IDs for objects to specifically include")]
        public int?[]? StatusIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status ID for objects to specifically exclude")]
        public int? ExcludedStatusID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusIDs), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "The Status IDs for objects to specifically exclude")]
        public int?[]? ExcludedStatusIDs { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Key for objects")]
        public string? StatusKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusKeys), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Keys for objects to specifically include")]
        public string?[]? StatusKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Key for objects to specifically exclude")]
        public string? ExcludedStatusKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusKeys), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Keys for objects to specifically exclude")]
        public string?[]? ExcludedStatusKeys { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Name for objects")]
        public string? StatusName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Names for objects to specifically include")]
        public string?[]? StatusNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Name for objects to specifically exclude")]
        public string? ExcludedStatusName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Names for objects to specifically exclude")]
        public string?[]? ExcludedStatusNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Name for objects")]
        public string? StatusDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusDisplayNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Names for objects to specifically include")]
        public string?[]? StatusDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusDisplayName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Name for objects to specifically exclude")]
        public string? ExcludedStatusDisplayName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ExcludedStatusDisplayNames), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Display Names for objects to specifically exclude")]
        public string?[]? ExcludedStatusDisplayNames { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StatusTranslationKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Status Translation Key for objects")]
        public string? StatusTranslationKey { get; set; }
        #endregion
        #region IAmFilterableByProductSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ProductID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Key for objects")]
        public string? ProductKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Name for objects")]
        public string? ProductName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product SEO URL for objects")]
        public string? ProductSeoUrl { get; set; }
        #endregion
        #region IHaveAContactBase
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Contact ID for search")]
        public int? ContactID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Contact Key for search")]
        public string? ContactKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactKeyStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactKeyStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactKeyIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactKeyIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactFirstName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Contact First Name for search")]
        public string? ContactFirstName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactFirstNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactFirstNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactFirstNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactFirstNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactLastName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Contact Last Name for search")]
        public string? ContactLastName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactLastNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactLastNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactLastNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactLastNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactPhone), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Contact Phone for search")]
        public string? ContactPhone { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactPhoneStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactPhoneStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactPhoneIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactPhoneIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactFax), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Contact Fax for search")]
        public string? ContactFax { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactFaxStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactFaxStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactFaxIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactFaxIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactEmail), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Contact Email for search")]
        public string? ContactEmail { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactEmailStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactEmailStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ContactEmailIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ContactEmailIncludeNull { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinEventDuration), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinEventDuration { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxEventDuration), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxEventDuration { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchEventDuration), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchEventDuration { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinMaxAttendees), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinMaxAttendees { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxMaxAttendees), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxMaxAttendees { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchMaxAttendees), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchMaxAttendees { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(GroupID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? GroupID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(GroupIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? GroupIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(EventDurationUnitOfMeasure), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? EventDurationUnitOfMeasure { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(EventDurationUnitOfMeasureStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? EventDurationUnitOfMeasureStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(EventDurationUnitOfMeasureIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? EventDurationUnitOfMeasureIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(RecurrenceString), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? RecurrenceString { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(RecurrenceStringStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? RecurrenceStringStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(RecurrenceStringIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? RecurrenceStringIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ShortDescription), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? ShortDescription { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ShortDescriptionStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ShortDescriptionStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ShortDescriptionIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? ShortDescriptionIncludeNull { get; set; }
    }
}
