// <autogenerated>
// <copyright file="DiscountSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Discount search.</summary>
    public partial class DiscountSearchModel
        : NameableBaseSearchModel
        , IDiscountSearchModel
    {
        #region IAmFilterableByAccountSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Account ID For Search, Note: This will be overridden on data calls automatically")]
        public int? AccountID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false,
            Description = "When true, allow matches to null for AccountID field")]
        public bool? AccountIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Account Key for objects")]
        public string? AccountKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Account Name for objects")]
        public string? AccountName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false,
            Description = "When true, the value of the AccountName field must match exactly, otherwise, a case-insentive contains check is run.")]
        public bool? AccountNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false,
            Description = "When true, allow matches to null for AccountName field")]
        public bool? AccountNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(AccountIDOrCustomKeyOrNameOrDescription), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? AccountIDOrCustomKeyOrNameOrDescription { get; set; }
        #endregion
        #region IAmFilterableByBrandSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Brand ID For Search, Note: This will be overridden on data calls automatically")]
        public int? BrandID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Key for objects")]
        public string? BrandKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Brand Name for objects")]
        public string? BrandName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? BrandNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(BrandCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a brand which uses this category")]
        public int? BrandCategoryID { get; set; }
        #endregion
        #region IAmFilterableByProductSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Product ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ProductID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Key for objects")]
        public string? ProductKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product Name for objects")]
        public string? ProductName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ProductSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Product SEO URL for objects")]
        public string? ProductSeoUrl { get; set; }
        #endregion
        #region IAmFilterableByFranchiseSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Franchise ID For Search, Note: This will be overridden on data calls automatically")]
        public int? FranchiseID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Franchise Key for objects")]
        public string? FranchiseKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Franchise Name for objects")]
        public string? FranchiseName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseNameStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseNameStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseNameIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? FranchiseNameIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(FranchiseCategoryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a Franchise which uses this category")]
        public int? FranchiseCategoryID { get; set; }
        #endregion
        #region IAmFilterableByManufacturerSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(ManufacturerID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Manufacturer ID For Search, Note: This will be overridden on data calls automatically")]
        public int? ManufacturerID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ManufacturerKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Manufacturer Key for objects")]
        public string? ManufacturerKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(ManufacturerName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Manufacturer Name for objects")]
        public string? ManufacturerName { get; set; }
        #endregion
        #region IAmFilterableByStoreSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Store ID For Search, Note: This will be overridden on data calls automatically")]
        public int? StoreID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? StoreIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Key for objects")]
        public string? StoreKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store Name for objects")]
        public string? StoreName { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreSeoUrl), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Store SEO URL for objects")]
        public string? StoreSeoUrl { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this country")]
        public int? StoreCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this region")]
        public int? StoreRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store within this city")]
        public string? StoreCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCountryID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this country")]
        public int? StoreAnyCountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRegionID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this region")]
        public int? StoreAnyRegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyCity), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any contact within this city")]
        public string? StoreAnyCity { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyDistrictID), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any district")]
        public int? StoreAnyDistrictID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyZipCode), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any zip code")]
        public string? StoreAnyZipCode { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLatitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any latitude")]
        public double? StoreAnyLatitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyLongitude), DataType = "double?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any longitude")]
        public double? StoreAnyLongitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyRadius), DataType = "int?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any radius")]
        public int? StoreAnyRadius { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(StoreAnyUnits), DataType = "string?", ParameterType = "query", IsRequired = false,
            Description = "Match a store with any units")]
        public Enums.LocatorUnits? StoreAnyUnits { get; set; }
        #endregion
        #region IAmFilterableByUserSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "User ID For Search, Note: This will be overridden on data calls automatically")]
        public int? UserID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false,
            Description = "When true, allow matches to null for UserID field")]
        public bool? UserIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The User Key for objects")]
        public string? UserKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserUsername), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The User Name for objects")]
        public string? UserUsername { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(UserIDOrCustomKeyOrUserName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "General search against User assigned to the object (includes UserName even though the name of the property doesn't say it)")]
        public string? UserIDOrCustomKeyOrUserName { get; set; }
        #endregion
        #region IAmFilterableByVendorSearchModel
        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorID), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "Vendor ID For Search, Note: This will be overridden on data calls automatically")]
        public int? VendorID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorKey), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Vendor Key for objects")]
        public string? VendorKey { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(VendorName), DataType = "string", ParameterType = "query", IsRequired = false,
            Description = "The Vendor Name for objects")]
        public string? VendorName { get; set; }
        #endregion
        /// <inheritdoc/>
        [ApiMember(Name = nameof(CanCombine), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CanCombine { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(IsAutoApplied), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? IsAutoApplied { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinThresholdAmount), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinThresholdAmount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxThresholdAmount), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxThresholdAmount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchThresholdAmount), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchThresholdAmount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(DiscountTypeID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? DiscountTypeID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinRoundingOperation), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinRoundingOperation { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxRoundingOperation), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxRoundingOperation { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchRoundingOperation), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchRoundingOperation { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinValueType), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinValueType { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxValueType), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxValueType { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchValueType), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchValueType { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinBuyXValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinBuyXValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxBuyXValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxBuyXValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchBuyXValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchBuyXValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchBuyXValueIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchBuyXValueIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinDiscountCompareOperator), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinDiscountCompareOperator { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxDiscountCompareOperator), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxDiscountCompareOperator { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchDiscountCompareOperator), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchDiscountCompareOperator { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchDiscountCompareOperatorIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchDiscountCompareOperatorIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchEndDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchEndDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchEndDateIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchEndDateIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinGetYValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinGetYValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxGetYValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxGetYValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchGetYValue), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchGetYValue { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchGetYValueIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchGetYValueIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinPriority), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinPriority { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxPriority), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxPriority { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPriority), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchPriority { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchPriorityIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchPriorityIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinRoundingType), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinRoundingType { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxRoundingType), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxRoundingType { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchRoundingType), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchRoundingType { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchRoundingTypeIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchRoundingTypeIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MinStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MaxStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchStartDate), DataType = "DateTime?", ParameterType = "query", IsRequired = false)]
        public DateTime? MatchStartDate { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchStartDateIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchStartDateIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinUsageLimitGlobally), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinUsageLimitGlobally { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxUsageLimitGlobally), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxUsageLimitGlobally { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchUsageLimitGlobally), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchUsageLimitGlobally { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchUsageLimitGloballyIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchUsageLimitGloballyIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinUsageLimitPerAccount), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinUsageLimitPerAccount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxUsageLimitPerAccount), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxUsageLimitPerAccount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchUsageLimitPerAccount), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchUsageLimitPerAccount { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchUsageLimitPerAccountIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchUsageLimitPerAccountIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinUsageLimitPerCart), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinUsageLimitPerCart { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxUsageLimitPerCart), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxUsageLimitPerCart { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchUsageLimitPerCart), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchUsageLimitPerCart { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchUsageLimitPerCartIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchUsageLimitPerCartIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinUsageLimitPerUser), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MinUsageLimitPerUser { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxUsageLimitPerUser), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MaxUsageLimitPerUser { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchUsageLimitPerUser), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? MatchUsageLimitPerUser { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchUsageLimitPerUserIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchUsageLimitPerUserIncludeNull { get; set; }
    }
}
