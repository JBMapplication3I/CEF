// <autogenerated>
// <copyright file="AppliedSalesReturnDiscountModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for Applied Sales Return Discount.</summary>
    public partial class AppliedSalesReturnDiscountModel
        : AmARelationshipTableBaseModel
            , IAppliedSalesReturnDiscountModel
    {
        #region IAmARelationshipTable<ISalesReturnModel,IDiscountModel>

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(SlaveName), DataType = "string?", ParameterType = "body", IsRequired = false,
                Description = "The Name of the Slave record.")]
        public string? SlaveName { get; set; }

        /// <inheritdoc/>
        public SalesReturnModel? Master { get; set; }

        /// <inheritdoc cref="IAmARelationshipTableBaseModel{IDiscountModel}.Slave"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Slave), DataType = "DiscountModel?", ParameterType = "body", IsRequired = false,
                Description = "The Slave record (may only be partially mapped out).")]
        public DiscountModel? Slave { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        IDiscountModel? IAmARelationshipTableBaseModel<IDiscountModel>.Slave { get => Slave; set => Slave = (DiscountModel?)value; }
        #endregion
        #region IAppliedDiscountBase
        /// <inheritdoc/>
        [JsonIgnore]
        IDiscountModel? IAppliedDiscountBaseModel.Discount { get => Slave; set => Slave = (DiscountModel?)value; }

        /// <inheritdoc/>
        [JsonIgnore]
        int IAppliedDiscountBaseModel.DiscountID { get => SlaveID; set => SlaveID = value; }

        /// <inheritdoc/>
        [JsonIgnore]
        string? IAppliedDiscountBaseModel.DiscountKey { get => SlaveKey; set => SlaveKey = value; }

        /// <inheritdoc/>
        [JsonIgnore]
        string? IAppliedDiscountBaseModel.DiscountName { get => SlaveName; set => SlaveName = value; }

        /// <inheritdoc/>
        [DefaultValue(0),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(DiscountTypeID), DataType = "int", ParameterType = "body", IsRequired = false,
                Description = "The kind of Discount to apply (what it applies to).")]
        public int DiscountTypeID { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(DiscountPriority), DataType = "int?", ParameterType = "body", IsRequired = false,
                Description = "The Priority of this discount (when determining applicable exclusive discounts, the highest priority wins).")]
        public int? DiscountPriority { get; set; }

        /// <inheritdoc/>
        [DefaultValue(0),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(DiscountValueType), DataType = "int", ParameterType = "body", IsRequired = false,
                Description = "The kind of value (0=Percentage, 1=Dollars).")]
        public int DiscountValueType { get; set; }

        /// <inheritdoc/>
        [DefaultValue(0),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(DiscountValue), DataType = "decimal", ParameterType = "body", IsRequired = false,
                Description = "The amount the Discount is allowed to apply.")]
        public decimal DiscountValue { get; set; }

        /// <inheritdoc/>
        [DefaultValue(false),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(DiscountCanCombine), DataType = "bool", ParameterType = "body", IsRequired = true,
                Description = "Whether the discount is combinable.")]
        public bool DiscountCanCombine { get; set; }

        /// <inheritdoc/>
        [DefaultValue(false),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(DiscountIsAutoApplied), DataType = "bool", ParameterType = "body", IsRequired = true,
                Description = "Whether the discount is automatically applied.")]
        public bool DiscountIsAutoApplied { get; set; }

        /// <inheritdoc/>
        [DefaultValue(0),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(DiscountTotal), DataType = "decimal", ParameterType = "body", IsRequired = true,
                Description = "The total amount of the discount applied.")]
        public decimal DiscountTotal { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(ApplicationsUsed), DataType = "decimal", ParameterType = "body", IsRequired = true,
                Description = "The number of applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
        public int? ApplicationsUsed { get; set; }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(TargetApplicationsUsed), DataType = "decimal", ParameterType = "body", IsRequired = true,
                Description = "The number of target applications used by this discount (in case it is applied to the same master more than once). If this value is null or less than one, it is assumed to have a value of 1")]
        public int? TargetApplicationsUsed { get; set; }
        #endregion
    }
}
