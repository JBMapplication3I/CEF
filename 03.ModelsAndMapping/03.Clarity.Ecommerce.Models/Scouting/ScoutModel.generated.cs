// <autogenerated>
// <copyright file="ScoutModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for Scout.</summary>
    public partial class ScoutModel
        : BaseModel
            , IScoutModel
    {
        #region IAmFilterableByCategoryModel<> Properties
        /// <inheritdoc cref="IAmFilterableByCategoryModel{IScoutCategoryModel}.Categories"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Categories), DataType = "List<ScoutCategoryModel>", ParameterType = "body", IsRequired = false,
                Description = "Categories this object is associated with")]
        public List<ScoutCategoryModel>? Categories { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IScoutCategoryModel>? IAmFilterableByCategoryModel<IScoutCategoryModel>.Categories { get => Categories?.ToList<IScoutCategoryModel>(); set => Categories = value?.Cast<ScoutCategoryModel>().ToList(); }
        #endregion
    }
}
