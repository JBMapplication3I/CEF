// <autogenerated>
// <copyright file="DistrictModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Model Interfaces generated to provide base setups</summary>
// <remarks>This file was auto-generated by Models.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#pragma warning disable 618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using Interfaces.Models;
    using Newtonsoft.Json;
    using ServiceStack;

    /// <summary>A data transfer model for District.</summary>
    public partial class DistrictModel
        : NameableBaseModel
            , IDistrictModel
    {
        #region IHaveImagesBaseModel
        /// <inheritdoc cref="IHaveImagesBaseModel{IDistrictImageModel, ITypeModel}.Images"/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Images), DataType = "List<DistrictImageModel>", ParameterType = "body", IsRequired = false,
                Description = "Images for the object, optional")]
        public List<DistrictImageModel>? Images { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IDistrictImageModel>? IHaveImagesBaseModel<IDistrictImageModel, ITypeModel>.Images { get => Images?.ToList<IDistrictImageModel>(); set => Images = value?.Cast<DistrictImageModel>().ToList(); }

        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(PrimaryImageFileName), DataType = "string", ParameterType = "body", IsRequired = false,
                Description = "The primary image from the list of images, or the first image if no primary is set (read-only)")]
        public string? PrimaryImageFileName { get; set; }
        #endregion
        #region IHaveCurrenciesBase<IDistrictCurrency>
        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Currencies), IsRequired = false, DataType = "List<DistrictCurrency>", ParameterType = "body",
                Description = "A List of currencies tied to this object")]
        public List<DistrictCurrencyModel>? Currencies { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IDistrictCurrencyModel>? IHaveCurrenciesBaseModel<IDistrictCurrencyModel>.Currencies
        {
            get => Currencies?.ToList<IDistrictCurrencyModel>();
            set => Currencies = value?.Cast<DistrictCurrencyModel>().ToList();
        }
        #endregion
        #region IHaveLanguagesBase<IDistrictLanguage>
        /// <inheritdoc/>
        [DefaultValue(null),
            DataMember(EmitDefaultValue = false),
            ApiMember(Name = nameof(Languages), IsRequired = false, DataType = "List<DistrictLanguage>", ParameterType = "body",
                Description = "A List of languages tied to this object")]
        public List<DistrictLanguageModel>? Languages { get; set; }

        /// <inheritdoc/>
        [JsonIgnore]
        List<IDistrictLanguageModel>? IHaveLanguagesBaseModel<IDistrictLanguageModel>.Languages
        {
            get => Languages?.ToList<IDistrictLanguageModel>();
            set => Languages = value?.Cast<DistrictLanguageModel>().ToList();
        }
        #endregion
    }
}
