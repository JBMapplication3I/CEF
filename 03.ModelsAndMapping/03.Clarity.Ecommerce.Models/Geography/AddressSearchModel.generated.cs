// <autogenerated>
// <copyright file="AddressSearchModel.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the SearchModel Classes generated to provide base setups.</summary>
// <remarks>This file was auto-generated by SearchModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable MissingXmlDoc, PartialTypeWithSinglePart, RedundantExtendsListEntry, RedundantUsingDirective, UnusedMember.Global
#nullable enable
namespace Clarity.Ecommerce.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;
    using ServiceStack;

    /// <summary>A data model for the Address search.</summary>
    public partial class AddressSearchModel
        : BaseSearchModel
        , IAddressSearchModel
    {
        /// <inheritdoc/>
        [ApiMember(Name = nameof(CountryID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? CountryID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CountryIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CountryIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinLatitude), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinLatitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxLatitude), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxLatitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchLatitude), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchLatitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchLatitudeIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchLatitudeIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MinLongitude), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MinLongitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MaxLongitude), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MaxLongitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchLongitude), DataType = "decimal?", ParameterType = "query", IsRequired = false)]
        public decimal? MatchLongitude { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(MatchLongitudeIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? MatchLongitudeIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(RegionID), DataType = "int?", ParameterType = "query", IsRequired = false)]
        public int? RegionID { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(RegionIDIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? RegionIDIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(City), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? City { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CityStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CityStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CityIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CityIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Company), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Company { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CompanyStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CompanyStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CompanyIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CompanyIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CountryCustom), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? CountryCustom { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CountryCustomStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CountryCustomStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(CountryCustomIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? CountryCustomIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PostalCode), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? PostalCode { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PostalCodeStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? PostalCodeStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(PostalCodeIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? PostalCodeIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(RegionCustom), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? RegionCustom { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(RegionCustomStrict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? RegionCustomStrict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(RegionCustomIncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? RegionCustomIncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street1), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Street1 { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street1Strict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? Street1Strict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street1IncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? Street1IncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street2), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Street2 { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street2Strict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? Street2Strict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street2IncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? Street2IncludeNull { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street3), DataType = "string", ParameterType = "query", IsRequired = false)]
        public string? Street3 { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street3Strict), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? Street3Strict { get; set; }

        /// <inheritdoc/>
        [ApiMember(Name = nameof(Street3IncludeNull), DataType = "bool?", ParameterType = "query", IsRequired = false)]
        public bool? Street3IncludeNull { get; set; }
    }
}
