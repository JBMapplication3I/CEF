// <autogenerated>
// <copyright file="Mapping.Attributes.GeneralAttributePredefinedOption.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Attributes section of the Mapping class</summary>
// <remarks>This file was auto-generated by Mapping.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
// ReSharper disable CyclomaticComplexity, FunctionComplexityOverflow, InvokeAsExtensionMethod, MergeCastWithTypeCheck
// ReSharper disable MissingLinebreak, RedundantDelegateInvoke, RedundantUsingDirective
#pragma warning disable CS0618 // Ignore Obsolete warnings
#nullable enable
namespace Clarity.Ecommerce.Mapper
{
    using System;
    using System.Collections.Generic;
    using System.Data.Entity;
    using System.Linq;
    using System.Linq.Expressions;
    using DataModel;
    using Interfaces.DataModel;
    using Interfaces.Models;
    using LinqKit;
    using MoreLinq;
    using Utilities;

    public static partial class ModelMapperForGeneralAttributePredefinedOption
    {
        public sealed class AnonGeneralAttributePredefinedOption : GeneralAttributePredefinedOption
        {
        }

        public static readonly Func<GeneralAttributePredefinedOption?, string?, IGeneralAttributePredefinedOptionModel?> MapGeneralAttributePredefinedOptionModelFromEntityFull = CreateGeneralAttributePredefinedOptionModelFromEntityFull;

        public static readonly Func<GeneralAttributePredefinedOption?, string?, IGeneralAttributePredefinedOptionModel?> MapGeneralAttributePredefinedOptionModelFromEntityLite = CreateGeneralAttributePredefinedOptionModelFromEntityLite;

        public static readonly Func<GeneralAttributePredefinedOption?, string?, IGeneralAttributePredefinedOptionModel?> MapGeneralAttributePredefinedOptionModelFromEntityList = CreateGeneralAttributePredefinedOptionModelFromEntityList;

        public static Func<IGeneralAttributePredefinedOption, IGeneralAttributePredefinedOptionModel, string?, IGeneralAttributePredefinedOptionModel>? CreateGeneralAttributePredefinedOptionModelFromEntityHooksFull { get; set; }

        public static Func<IGeneralAttributePredefinedOption, IGeneralAttributePredefinedOptionModel, string?, IGeneralAttributePredefinedOptionModel>? CreateGeneralAttributePredefinedOptionModelFromEntityHooksLite { get; set; }

        public static Func<IGeneralAttributePredefinedOption, IGeneralAttributePredefinedOptionModel, string?, IGeneralAttributePredefinedOptionModel>? CreateGeneralAttributePredefinedOptionModelFromEntityHooksList { get; set; }

        public static Expression<Func<GeneralAttributePredefinedOption, AnonGeneralAttributePredefinedOption>>? PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull { get; set; }

        public static Expression<Func<GeneralAttributePredefinedOption, AnonGeneralAttributePredefinedOption>>? PreBuiltGeneralAttributePredefinedOptionSQLSelectorLite { get; set; }

        public static Expression<Func<GeneralAttributePredefinedOption, AnonGeneralAttributePredefinedOption>>? PreBuiltGeneralAttributePredefinedOptionSQLSelectorList { get; set; }

        /// <summary>An <see cref="IGeneralAttributePredefinedOptionModel"/> extension method that creates a(n) <see cref="GeneralAttributePredefinedOption"/> entity.</summary>
        /// <param name="model">            The model to act on.</param>
        /// <param name="timestamp">        The timestamp Date/Time.</param>
        /// <param name="contextProfileName">Name of the context profile.</param>
        /// <returns>The new <see cref="GeneralAttributePredefinedOption"/> entity.</returns>
        public static IGeneralAttributePredefinedOption CreateGeneralAttributePredefinedOptionEntity(
            this IGeneralAttributePredefinedOptionModel model,
            DateTime timestamp,
            string? contextProfileName)
        {
            // Create the object and Map the Inherited Properties
            return Contract.RequiresNotNull(model)
                .CreateEntityFromModelBase<IGeneralAttributePredefinedOptionModel, GeneralAttributePredefinedOption>(timestamp, contextProfileName)
                // Use the Update method to map non-inherited properties
                .UpdateGeneralAttributePredefinedOptionFromModel(model, timestamp, null);
        }

        /// <summary>An <see cref="IGeneralAttributePredefinedOptionModel"/> extension method that updates a(n) <see cref="GeneralAttributePredefinedOption"/> entity.</summary>
        /// <param name="entity">         The entity to act on.</param>
        /// <param name="model">          The model to read from.</param>
        /// <param name="timestamp">      The timestamp Date/Time.</param>
        /// <param name="updateTimestamp">The update timestamp Date/Time.</param>
        /// <returns>The updated <see cref="GeneralAttributePredefinedOption"/> entity.</returns>
        public static IGeneralAttributePredefinedOption UpdateGeneralAttributePredefinedOptionFromModel(
            this IGeneralAttributePredefinedOption entity,
            IGeneralAttributePredefinedOptionModel model,
            DateTime timestamp,
            DateTime? updateTimestamp)
        {
            // Map the Inherited Properties
            entity = Contract.RequiresNotNull(entity)
                .MapBaseModelPropertiesToEntity(Contract.RequiresNotNull(model));
            // GeneralAttributePredefinedOption Properties
            entity.SortOrder = model.SortOrder;
            entity.UofM = model.UofM;
            entity.Value = model.Value;
            // GeneralAttributePredefinedOption's Related Objects
            // Finally, update the timestamp
            entity.UpdatedDate = updateTimestamp == null || updateTimestamp == DateTime.MinValue ? null : updateTimestamp;
            // Return
            return entity;
        }

        public static void GenGeneralAttributePredefinedOptionSQLSelectorFull()
        {
            PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull = x => x == null ? null! : new AnonGeneralAttributePredefinedOption
            {
                Value = x.Value,
                UofM = x.UofM,
                SortOrder = x.SortOrder,
                AttributeID = x.AttributeID,
                Attribute = ModelMapperForGeneralAttribute.PreBuiltGeneralAttributeSQLSelectorList.Expand().Compile().Invoke(x.Attribute!),
                ID = x.ID,
                CustomKey = x.CustomKey,
                CreatedDate = x.CreatedDate,
                UpdatedDate = x.UpdatedDate,
                Active = x.Active,
                Hash = x.Hash,
                JsonAttributes = x.JsonAttributes,
            };
        }

        public static void GenGeneralAttributePredefinedOptionSQLSelectorLite()
        {
            PreBuiltGeneralAttributePredefinedOptionSQLSelectorLite = x => x == null ? null! : new AnonGeneralAttributePredefinedOption
            {
                Value = x.Value,
                UofM = x.UofM,
                SortOrder = x.SortOrder,
                AttributeID = x.AttributeID,
                Attribute = ModelMapperForGeneralAttribute.PreBuiltGeneralAttributeSQLSelectorList.Expand().Compile().Invoke(x.Attribute!),
                ID = x.ID,
                CustomKey = x.CustomKey,
                CreatedDate = x.CreatedDate,
                UpdatedDate = x.UpdatedDate,
                Active = x.Active,
                Hash = x.Hash,
                JsonAttributes = x.JsonAttributes,
            };
        }

        public static void GenGeneralAttributePredefinedOptionSQLSelectorList()
        {
            PreBuiltGeneralAttributePredefinedOptionSQLSelectorList = x => x == null ? null! : new AnonGeneralAttributePredefinedOption
            {
                Value = x.Value,
                UofM = x.UofM,
                SortOrder = x.SortOrder,
                AttributeID = x.AttributeID,
                Attribute = ModelMapperForGeneralAttribute.PreBuiltGeneralAttributeSQLSelectorList.Expand().Compile().Invoke(x.Attribute!), // For Flattening Properties (List)
                ID = x.ID,
                CustomKey = x.CustomKey,
                CreatedDate = x.CreatedDate,
                Active = x.Active,
                Hash = x.Hash,
                JsonAttributes = x.JsonAttributes,
            };
        }

        public static IEnumerable<IGeneralAttributePredefinedOptionModel> SelectFullGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull == null);
            return dbSetWithFilters
                .AsExpandable()
                .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull!.Compile())
                .ToList()
                .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityFull(x, contextProfileName))!;
        }

        public static IEnumerable<IGeneralAttributePredefinedOptionModel> SelectLiteGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorLite == null);
            return dbSetWithFilters
                .AsExpandable()
                .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorLite!.Compile())
                .ToList()
                .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityLite(x, contextProfileName))!;
        }

        public static IEnumerable<IGeneralAttributePredefinedOptionModel> SelectListGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorList == null);
            return dbSetWithFilters
                .AsExpandable()
                .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorList!.Compile())
                .ToList()
                .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityList(x, contextProfileName))!;
        }

        public static IGeneralAttributePredefinedOptionModel? SelectFirstFullGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull == null);
            return dbSetWithFilters
                .AsExpandable()
                .OrderBy(x => x.ID)
                .Take(1)
                .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull!.Compile())
                .ToList()
                .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityFull(x, contextProfileName))
                .FirstOrDefault();
        }

        public static IGeneralAttributePredefinedOptionModel? SelectFirstListGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorList == null);
            return dbSetWithFilters
                .AsExpandable()
                .OrderBy(x => x.ID)
                .Take(1)
                .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorList!.Compile())
                .ToList()
                .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityList(x, contextProfileName))
                .FirstOrDefault();
        }

        public static IGeneralAttributePredefinedOptionModel? SelectSingleFullGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull == null);
            return dbSetWithFilters
                .AsExpandable()
                .OrderBy(x => x.ID)
                .Take(1)
                .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull!.Compile())
                .ToList()
                .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityFull(x, contextProfileName))
                .SingleOrDefault();
        }

        public static IGeneralAttributePredefinedOptionModel? SelectSingleLiteGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorLite == null);
            return dbSetWithFilters
                .AsExpandable()
                .OrderBy(x => x.ID)
                .Take(1)
                .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorLite!.Compile())
                .ToList()
                .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityLite(x, contextProfileName))
                .SingleOrDefault();
        }

        public static IGeneralAttributePredefinedOptionModel? SelectSingleListGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorList == null);
            return dbSetWithFilters
                .AsExpandable()
                .OrderBy(x => x.ID)
                .Take(1)
                .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorList!.Compile())
                .ToList()
                .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityList(x, contextProfileName))
                .SingleOrDefault();
        }

        public static (IEnumerable<IGeneralAttributePredefinedOptionModel> results, int totalPages, int totalCount) SelectFullGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            Paging? paging,
            Sort[]? sorts,
            Grouping[]? groupings,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull == null);
            return (dbSetWithFilters
                    .AsExpandable()
                    .ApplySorting(sorts, groupings, contextProfileName)
                    .FilterByPaging(paging, out var totalPages, out var totalCount)
                    .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorFull!.Compile())
                    .ToList()
                    .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityFull(x, contextProfileName)),
                totalPages,
                totalCount)!;
        }

        public static (IEnumerable<IGeneralAttributePredefinedOptionModel> results, int totalPages, int totalCount) SelectLiteGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            Paging? paging,
            Sort[]? sorts,
            Grouping[]? groupings,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorLite == null);
            return (dbSetWithFilters
                    .AsExpandable()
                    .ApplySorting(sorts, groupings, contextProfileName)
                    .FilterByPaging(paging, out var totalPages, out var totalCount)
                    .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorLite!.Compile())
                    .ToList()
                    .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityLite(x, contextProfileName)),
                totalPages,
                totalCount)!;
        }

        public static (IEnumerable<IGeneralAttributePredefinedOptionModel> results, int totalPages, int totalCount) SelectListGeneralAttributePredefinedOptionAndMapToGeneralAttributePredefinedOptionModel(
            this IQueryable<GeneralAttributePredefinedOption> dbSetWithFilters,
            Paging? paging,
            Sort[]? sorts,
            Grouping[]? groupings,
            string? contextProfileName)
        {
            BaseModelMapper.Initialize(PreBuiltGeneralAttributePredefinedOptionSQLSelectorList == null);
            return (dbSetWithFilters
                    .AsExpandable()
                    .ApplySorting(sorts, groupings, contextProfileName)
                    .FilterByPaging(paging, out var totalPages, out var totalCount)
                    .Select(PreBuiltGeneralAttributePredefinedOptionSQLSelectorList!.Compile())
                    .ToList()
                    .Select(x => CreateGeneralAttributePredefinedOptionModelFromEntityList(x, contextProfileName)),
                totalPages,
                totalCount)!;
        }

        public static IGeneralAttributePredefinedOptionModel? CreateGeneralAttributePredefinedOptionModelFromEntityFull(this IGeneralAttributePredefinedOption? entity, string? contextProfileName)
        {
            return CreateGeneralAttributePredefinedOptionModelFromEntity(entity, MappingMode.Full, contextProfileName);
        }

        public static IGeneralAttributePredefinedOptionModel? CreateGeneralAttributePredefinedOptionModelFromEntityLite(this IGeneralAttributePredefinedOption? entity, string? contextProfileName)
        {
            return CreateGeneralAttributePredefinedOptionModelFromEntity(entity, MappingMode.Lite, contextProfileName);
        }

        public static IGeneralAttributePredefinedOptionModel? CreateGeneralAttributePredefinedOptionModelFromEntityList(this IGeneralAttributePredefinedOption? entity, string? contextProfileName)
        {
            return CreateGeneralAttributePredefinedOptionModelFromEntity(entity, MappingMode.List, contextProfileName);
        }

        public static IGeneralAttributePredefinedOptionModel? CreateGeneralAttributePredefinedOptionModelFromEntity(
            this IGeneralAttributePredefinedOption? entity,
            MappingMode mode,
            string? contextProfileName)
        {
            if (entity == null) { return null; }
            // Map the Inherited Properties
            // ReSharper disable once InvokeAsExtensionMethod
            var model = BaseModelMapper.MapBaseEntityPropertiesToModel(
                RegistryLoaderWrapper.GetInstance<IGeneralAttributePredefinedOptionModel>(contextProfileName),
                Contract.RequiresNotNull(entity),
                mode,
                contextProfileName);
            // Map this level's Properties
            switch (mode)
            {
                case MappingMode.Full: //////////////////////////////////////////////////////////////////////////////////////////////////////////////
                {
                    // GeneralAttributePredefinedOption's Properties
                    // GeneralAttributePredefinedOption's Related Objects
                    // GeneralAttributePredefinedOption's Associated Objects
                    // Additional Mappings
                    if (CreateGeneralAttributePredefinedOptionModelFromEntityHooksFull != null) { model = CreateGeneralAttributePredefinedOptionModelFromEntityHooksFull(entity, model, contextProfileName); }
                    goto case MappingMode.Lite;
                }
                case MappingMode.Lite: //////////////////////////////////////////////////////////////////////////////////////////////////////////////
                {
                    // GeneralAttributePredefinedOption's Properties
                    // GeneralAttributePredefinedOption's Related Objects (Not Mapped unless Forced, or a flattening property)
                    // GeneralAttributePredefinedOption's Associated Objects (Not Mapped unless Forced)
                    // Additional Mappings
                    if (CreateGeneralAttributePredefinedOptionModelFromEntityHooksLite != null) { model = CreateGeneralAttributePredefinedOptionModelFromEntityHooksLite(entity, model, contextProfileName); }
                    goto case MappingMode.List;
                }
                case MappingMode.List: //////////////////////////////////////////////////////////////////////////////////////////////////////////////
                default:
                {
                    // IHaveJsonAttributesBase Properties (Forced)
                    model.SerializableAttributes = entity.JsonAttributes.DeserializeAttributesDictionary();
                    // GeneralAttributePredefinedOption's Properties
                    model.SortOrder = entity.SortOrder;
                    model.UofM = entity.UofM;
                    model.Value = entity.Value;
                    // GeneralAttributePredefinedOption's Related Objects (Not Mapped unless Forced, or a flattening property)
                    // TODO: Multiple Additional Properties, create an UpdateModelFromGeneralAttributeEntity method // Attribute // Normal
                    // GeneralAttributePredefinedOption's Associated Objects (Not Mapped unless Forced)
                    // Additional Mappings
                    if (CreateGeneralAttributePredefinedOptionModelFromEntityHooksList != null) { model = CreateGeneralAttributePredefinedOptionModelFromEntityHooksList(entity, model, contextProfileName); }
                    break;
                }
            } ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            // Finished!
            return model;
        }
    }
}
