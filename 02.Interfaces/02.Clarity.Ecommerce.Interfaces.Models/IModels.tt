<#@ template hostSpecific="true" language="C#"
#><#@ output extension=".cstxt"
#><#@ assembly name="System"
#><#@ assembly name="System.Core"
#><#@ assembly name="System.ComponentModel.DataAnnotations"
#><#@ assembly name="$(UserProfile)\.nuget\packages\entityframework\6.4.4\lib\net45\EntityFramework.dll"
#><#@ assembly name="$(SolutionDir)01.DataAccessLayer\01.Clarity.Ecommerce.DataModel\bin\Debug\net472\Clarity.Ecommerce.DataModel.dll"
#><#@ assembly name="$(SolutionDir)11.T4\11.T4.CodeGenerator\bin\Debug\net472\CodeGenerator.dll"
#><#@ import namespace="System.Collections.Generic"
#><#@ import namespace="System.ComponentModel.DataAnnotations"
#><#@ import namespace="System.ComponentModel.DataAnnotations.Schema"
#><#@ import namespace="System.Data.Entity"
#><#@ import namespace="System.Linq"
#><#@ import namespace="System.Reflection"
#><#@ import namespace="System.Runtime.InteropServices"
#><#@ import namespace="System.Text"
#><#@ import namespace="CodeGenerator"
#><#@ import namespace="Clarity.Ecommerce.Interfaces.DataModel"
#><#@ import namespace="Clarity.Ecommerce.DataModel"
#><#@ include file="$(SolutionDir)11.T4\11.T4.CodeGenerator\MultiOutput.old.ttinclude"
#><#
var tableClasses = AppDomain.CurrentDomain.GetAssemblies()
    .Where(x => x.FullName.StartsWith("Clarity.Ecommerce.DataModel"))
    .SelectMany(x => x.GetTypes().Where(t => t.CustomAttributes.Any(at => at.AttributeType == typeof(SqlSchemaAttribute))))
    .OrderBy(x => ((SqlSchemaAttribute)Attribute.GetCustomAttribute(x, typeof(SqlSchemaAttribute))).Both)
    .GroupBy(x => ((SqlSchemaAttribute)Attribute.GetCustomAttribute(x, typeof(SqlSchemaAttribute))).Schema);
var processedNames = new List<string> { "State", "Status", "Type", "Contact", "SalesItemShipmentBase", "SalesItemTargetBase" };
foreach (var @group in tableClasses)
{
    foreach (var theType in @group)
    {
        var name = HelpFunctions.SwapToModelType(theType.Name);
        if (processedNames.Contains(name))
        { #>
// <#= theType.Name #>-><#= name #> skipped (Already Processed)
<#          SaveOutput(@group.Key.Replace("System", "Structure") + "\\I" + theType.Name + "Model", "generated.cstxt", true);
            continue;
        }
        processedNames.Add(name);
        var td = new TypeDeterminer(theType);
        if (td.IsExcludedFromT4)
        { #>
// <#= theType.Name #>-><#= name #> skipped (IsExcludedFromT4)
<#          SaveOutput(@group.Key.Replace("System", "Structure") + "\\I" + theType.Name + "Model", "generated.cstxt", true);
            continue;
        }
#>// <autogenerated>
// <copyright file="I<#= theType.Name #>Model.generated.cs" company="clarity-ventures.com">
// Copyright (c) 2016-<#= DateTime.Today.Year #> clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the IModel Interfaces generated to provide base setups.</summary>
// <remarks>This file was auto-generated by IModels.tt, changes to this
// file will be overwritten automatically when the T4 template is run again.</remarks>
// </autogenerated>
// ReSharper disable BadEmptyBracesLineBreaks
#nullable enable
namespace Clarity.Ecommerce.Interfaces.Models
{
    /// <summary>Interface for <#= HelpFunctions.SplitCamelCase(theType.Name).ToLower() #> model.</summary>
<#      if (td.IsISalesCollectionBase) { #>
    /// <seealso cref="ISalesCollectionBaseModel{I<#= HelpFunctions.SwapToModelType(td.RelatedTypeType.Name) #>Model, I<#= theType.Name #>FileModel, I<#= theType.Name #>ContactModel, I<#= theType.Name #>EventModel, IApplied<#= theType.Name #>DiscountModel, IApplied<#= theType.Name #>ItemDiscountModel}"/>
<#      } else if (td.IsISalesEventBase) { #>
    /// <seealso cref="ISalesEventBaseModel"/>
<#      } else { #>
    /// <seealso cref="I<#= td.IsIStatusableBase ? "Statusable" : string.Empty
        #><#= td.IsIStateableBase ? "Stateable" : string.Empty
        #><#= td.IsITypableBase ? "Typable" : string.Empty
        #><#= td.IsIAmARelationshipTable ? "AmARelationshipTable" : string.Empty
        #><#= !td.IsIStatusableBase && !td.IsITypableBase && td.IsINameableBase ? "Nameable" : string.Empty #>BaseModel"/>
<#      } #>
<#      if (td.IsIAmAContactRelationshipTable) { #>
    /// <seealso cref="IAmAContactRelationshipTableModel"/>
<#      } else if (td.IsIAmAStoredFileRelationshipTable) { #>
    /// <seealso cref="IAmAStoredFileRelationshipTableModel"/>
<#      } else if (td.IsIAmADiscountFilterRelationshipTable) { #>
    /// <seealso cref="IAmADiscountFilterRelationshipTableModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } else if (td.IsIAmARelationshipTable && !td.IsIAmACategoryRelationshipMasterTable && !td.IsIAmACategoryRelationshipSlaveTable && !td.IsIAmABrandRelationshipMasterTable && !td.IsIAmABrandRelationshipSlaveTable && !td.IsIAmAFranchiseRelationshipMasterTable && !td.IsIAmAFranchiseRelationshipSlaveTable && !td.IsIAmAStoreRelationshipMasterTable && !td.IsIAmAStoreRelationshipSlaveTable && !td.IsIAmAProductRelationshipMasterTable && !td.IsIAmAProductRelationshipSlaveTable && !td.IsIAmAManufacturerRelationshipMasterTable && !td.IsIAmAManufacturerRelationshipSlaveTable && !td.IsIAmAVendorRelationshipMasterTable && !td.IsIAmAVendorRelationshipSlaveTable) { #>
    /// <seealso cref="IAmARelationshipTableBaseModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmACategoryRelationshipMasterTable) { #>
    /// <seealso cref="IAmACategoryRelationshipTableWhereCategoryIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmACategoryRelationshipSlaveTable) { #>
    /// <seealso cref="IAmACategoryRelationshipTableWhereCategoryIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAmABrandRelationshipMasterTable) { #>
    /// <seealso cref="IAmABrandRelationshipTableWhereBrandIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmABrandRelationshipSlaveTable) { #>
    /// <seealso cref="IAmABrandRelationshipTableWhereBrandIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAmAFranchiseRelationshipMasterTable) { #>
    /// <seealso cref="IAmAFranchiseRelationshipTableWhereFranchiseIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmAFranchiseRelationshipSlaveTable) { #>
    /// <seealso cref="IAmAFranchiseRelationshipTableWhereFranchiseIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAmAStoreRelationshipMasterTable) { #>
    /// <seealso cref="IAmAStoreRelationshipTableWhereStoreIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmAStoreRelationshipSlaveTable) { #>
    /// <seealso cref="IAmAStoreRelationshipTableWhereStoreIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAmAnAccountRelationshipMasterTable) { #>
    /// <seealso cref="IAmAnAccountRelationshipTableWhereAccountIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmAnAccountRelationshipSlaveTable) { #>
    /// <seealso cref="IAmAnAccountRelationshipTableWhereAccountIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAmAUserRelationshipMasterTable) { #>
    /// <seealso cref="IAmAUserRelationshipTableWhereUserIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmAUserRelationshipSlaveTable) { #>
    /// <seealso cref="IAmAUserRelationshipTableWhereUserIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAmAProductRelationshipMasterTable) { #>
    /// <seealso cref="IAmAProductRelationshipTableWhereProductIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmAProductRelationshipSlaveTable) { #>
    /// <seealso cref="IAmAProductRelationshipTableWhereProductIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAmAManufacturerRelationshipMasterTable) { #>
    /// <seealso cref="IAmAManufacturerRelationshipTableWhereManufacturerIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmAManufacturerRelationshipSlaveTable) { #>
    /// <seealso cref="IAmAManufacturerRelationshipTableWhereManufacturerIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAmAVendorRelationshipMasterTable) { #>
    /// <seealso cref="IAmAVendorRelationshipTableWhereVendorIsTheMasterModel{I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIAmAVendorRelationshipSlaveTable) { #>
    /// <seealso cref="IAmAVendorRelationshipTableWhereVendorIsTheSlaveModel"/>
<#      } #>
<#      if (td.IsIAppliedDiscountBase) { #>
    /// <seealso cref="IAppliedDiscountBaseModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByAccountT) { #>
    /// <seealso cref="IAmFilterableByAccountModel{I<#= new[] { "Ad", "Brand", "Franchise", "Discount", "PriceRule", "Store", "Vendor" }.Contains(name) ? name + "Account" :  "Account" + name #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByAccount) { #>
    /// <seealso cref="IAmFilterableByAccountModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableAccount) { #>
    /// <seealso cref="IAmFilterableByNullableAccountModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByBrandT) { #>
    /// <seealso cref="IAmFilterableByBrandModel{I<#= new[] { "CategoryType", "UserType" }.Contains(name) ? "Type" : new[] { "Account", "Auction", "Category", "Franchise", "InventoryLocation", "Manufacturer", "Product", "SiteDomain", "Store", "User", "Vendor" }.Contains(name) ? "Brand" + name : name + "Brand" #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByBrand) { #>
    /// <seealso cref="IAmFilterableByBrandModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableBrand) { #>
    /// <seealso cref="IAmFilterableByNullableBrandModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByCategoryT) { #>
    /// <seealso cref="IAmFilterableByCategoryModel{I<#= new[] { "Ad", "Auction", "Brand", "Discount", "Franchise", "Lot", "PriceRule", "Product", "Scout", "Store" }.Contains(name) ? name + "Category" : "Category" + name #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByCategory) { #>
    /// <seealso cref="IAmFilterableByCategoryModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableCategory) { #>
    /// <seealso cref="IAmFilterableByNullableCategoryModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByFranchiseT) { #>
    /// <seealso cref="IAmFilterableByFranchiseModel{I<#= new[] { "CategoryType", "UserType" }.Contains(name) ? "Type" : new[] { "Account", "Auction", "Category", "InventoryLocation", "Manufacturer", "Product", "SiteDomain", "Store", "User", "Vendor" }.Contains(name) ? "Franchise" + name : name + "Franchise" #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByFranchise) { #>
    /// <seealso cref="IAmFilterableByFranchiseModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableFranchise) { #>
    /// <seealso cref="IAmFilterableByNullableFranchiseModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByManufacturerT) { #>
    /// <seealso cref="IAmFilterableByManufacturerModel{I<#= new[] { "Brand", "Discount", "Franchise", "PriceRule", "Store", "Vendor" }.Contains(name) ? name + "Manufacturer" : "Manufacturer" + name #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByManufacturer) { #>
    /// <seealso cref="IAmFilterableByManufacturerModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableManufacturer) { #>
    /// <seealso cref="IAmFilterableByNullableManufacturerModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByProductT) { #>
    /// <seealso cref="IAmFilterableByProductModel{I<#= new[] { "Account", "Brand", "Franchise", "CalendarEvent", "Discount", "Manufacturer", "PriceRule", "Store", "Vendor" }.Contains(name) ? name + "Product" : "Product" + name #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByProduct) { #>
    /// <seealso cref="IAmFilterableByProductModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableProduct) { #>
    /// <seealso cref="IAmFilterableByNullableProductModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByStoreT) { #>
    /// <seealso cref="IAmFilterableByStoreModel{I<#= new[] { "Ad", "Brand", "Franchise", "Discount", "PriceRule" }.Contains(name) ? name + "Store" : "Store" + name #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByStore) { #>
    /// <seealso cref="IAmFilterableByStoreModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableStore) { #>
    /// <seealso cref="IAmFilterableByNullableStoreModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByUserT) { #>
    /// <seealso cref="IAmFilterableByUserModel{I<#= new [] { "Account" }.Contains(name) ? "User" : new[] { "Brand", "Franchise", "Conversation", "Discount", "Group", "Store" }.Contains(name) ? name + "User" : "User" + name #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByUser) { #>
    /// <seealso cref="IAmFilterableByUserModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableUser) { #>
    /// <seealso cref="IAmFilterableByNullableUserModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByVendorT) { #>
    /// <seealso cref="IAmFilterableByVendorModel{I<#= new[] { "Brand", "Discount", "Franchise", "PriceRule", "Store" }.Contains(name) ? name + "Vendor" : "Vendor" + name #>Model}"/>
<#      } #>
<#      if (td.IsIAmFilterableByVendor) { #>
    /// <seealso cref="IAmFilterableByVendorModel"/>
<#      } #>
<#      if (td.IsIAmFilterableByNullableVendor) { #>
    /// <seealso cref="IAmFilterableByNullableVendorModel"/>
<#      } #>
<#      if (td.IsIHaveATypeBase && !td.IsIImageBase) { #>
    /// <seealso cref="IHaveATypeBaseModel{I<#= HelpFunctions.SwapToModelType(td.RelatedTypeType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIHaveAStatusBase) { #>
    /// <seealso cref="IHaveAStatusBaseModel{I<#= HelpFunctions.SwapToModelType(td.RelatedStatusType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIHaveAStateBase) { #>
    /// <seealso cref="IHaveAStateBaseModel{I<#= HelpFunctions.SwapToModelType(td.RelatedStateType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIHaveANullableContactBase) { #>
    /// <seealso cref="IHaveANullableContactBaseModel"/>
<#      } #>
<#      if (td.IsIHaveAContactBase && !td.IsIAmAContactRelationshipTable) { #>
    /// <seealso cref="IHaveAContactBaseModel"/>
<#      } #>
<#      if (td.IsIHaveAParentBase) { #>
    /// <seealso cref="IHaveAParentBaseModel{I<#= HelpFunctions.SwapToModelType(theType.Name) #>Model}"/>
<#      } #>
<#      if (td.IsIImageBase) { #>
    /// <seealso cref="IImageBaseModel{I<#= HelpFunctions.SwapToModelType(theType.Name + "Type") #>Model}"/>
<#      } #>
<#      if (td.IsIHaveAdCounters) { #>
    /// <seealso cref="IHaveAdCountersModel"/>
<#      } #>
<#      if (td.IsIHaveRequiresRolesBase) { #>
    /// <seealso cref="IHaveRequiresRolesBaseModel"/>
<#      } #>
<#      if (td.IsIHaveReviewsBase) { #>
    /// <seealso cref="IHaveReviewsBaseModel"/>
<#      } #>
<#      if (td.IsIHaveSeoBase) { #>
    /// <seealso cref="IHaveSeoBaseModel"/>
<#      } #>
<#      if (td.IsIHaveOrderMinimumsBase) { #>
    /// <seealso cref="IHaveOrderMinimumsBaseModel"/>
<#      } #>
<#      if (td.IsIHaveFreeShippingMinimumsBase) { #>
    /// <seealso cref="IHaveFreeShippingMinimumsBaseModel"/>
<#      } #>
<#      if (td.IsIHaveImagesBase) { #>
    /// <seealso cref="IHaveImagesBaseModel{I<#= theType.Name #>ImageModel,ITypeModel}"/>
<#      } #>
<#      if (td.IsIHaveStoredFilesBase) { #>
    /// <seealso cref="IHaveStoredFilesBaseModel{I<#= theType.Name #>FileModel}"/>
<#      } #>
<#      if (td.IsIHaveNotesBase) { #>
    /// <seealso cref="IHaveNotesBaseModel"/>
<#      } #>
<#      if (td.IsISalesItemTargetBase) { #>
    /// <seealso cref="ISalesItemTargetBaseModel"/>
<#      } #>
<#      if (td.IsDeprecated) { #>
    /// <obsolete><#= td.DeprecatedMessage #></obsolete>
    [Obsolete("<#= td.DeprecatedMessage #>", false)]
<#      } #>
    public partial interface I<#= HelpFunctions.SwapToModelType(theType.Name) #>Model
<#      if (td.IsISalesCollectionBase) { #>
        : ISalesCollectionBaseModel<I<#= HelpFunctions.SwapToModelType(td.RelatedTypeType.Name) #>Model, I<#= theType.Name #>FileModel, I<#= theType.Name #>ContactModel, I<#= theType.Name #>EventModel, IApplied<#= theType.Name #>DiscountModel, IApplied<#= theType.Name #>ItemDiscountModel>
<#      } else if (td.IsISalesEventBase) { #>
        : ISalesEventBaseModel
<#      } else { #>
        : I<#= td.IsIStatusableBase ? "Statusable" : string.Empty
            #><#= td.IsIStateableBase ? "Stateable" : string.Empty
            #><#= td.IsITypableBase ? "Typable" : string.Empty
            #><#= td.IsIAmARelationshipTable ? "AmARelationshipTable" : string.Empty
            #><#= !td.IsIStatusableBase && !td.IsITypableBase && td.IsINameableBase ? "Nameable" : string.Empty #>BaseModel
<#      } #>
<#      if (td.IsIAmAContactRelationshipTable) { #>
            , IAmAContactRelationshipTableModel
<#      } else if (td.IsIAmAStoredFileRelationshipTable) { #>
            , IAmAStoredFileRelationshipTableModel
<#      } else if (td.IsIAmADiscountFilterRelationshipTable) { #>
            , IAmADiscountFilterRelationshipTableModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } else if (td.IsIAmARelationshipTable
            && !td.IsIAmACategoryRelationshipMasterTable
            && !td.IsIAmACategoryRelationshipSlaveTable
            && !td.IsIAmABrandRelationshipMasterTable
            && !td.IsIAmABrandRelationshipSlaveTable
            && !td.IsIAmAFranchiseRelationshipMasterTable
            && !td.IsIAmAFranchiseRelationshipSlaveTable
            && !td.IsIAmAStoreRelationshipMasterTable
            && !td.IsIAmAStoreRelationshipSlaveTable
            && !td.IsIAmAnAccountRelationshipMasterTable
            && !td.IsIAmAnAccountRelationshipSlaveTable
            && !td.IsIAmAUserRelationshipMasterTable
            && !td.IsIAmAUserRelationshipSlaveTable
            && !td.IsIAmAProductRelationshipMasterTable
            && !td.IsIAmAProductRelationshipSlaveTable
            && !td.IsIAmAManufacturerRelationshipMasterTable
            && !td.IsIAmAManufacturerRelationshipSlaveTable
            && !td.IsIAmAVendorRelationshipMasterTable
            && !td.IsIAmAVendorRelationshipSlaveTable) { #>
            , IAmARelationshipTableBaseModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmACategoryRelationshipMasterTable) { #>
            , IAmACategoryRelationshipTableWhereCategoryIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmACategoryRelationshipSlaveTable) { #>
            , IAmACategoryRelationshipTableWhereCategoryIsTheSlaveModel
<#      } #>
<#      if (td.IsIAmABrandRelationshipMasterTable) { #>
            , IAmABrandRelationshipTableWhereBrandIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmABrandRelationshipSlaveTable) { #>
            , IAmABrandRelationshipTableWhereBrandIsTheSlaveModel
<#      } #>
<#      if (td.IsIAmAFranchiseRelationshipMasterTable) { #>
            , IAmAFranchiseRelationshipTableWhereFranchiseIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmAFranchiseRelationshipSlaveTable) { #>
            , IAmAFranchiseRelationshipTableWhereFranchiseIsTheSlaveModel
<#      } #>
<#      if (td.IsIAmAStoreRelationshipMasterTable) { #>
            , IAmAStoreRelationshipTableWhereStoreIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmAStoreRelationshipSlaveTable) { #>
            , IAmAStoreRelationshipTableWhereStoreIsTheSlaveModel
<#      } #>
<#      if (td.IsIAmAnAccountRelationshipMasterTable) { #>
            , IAmAnAccountRelationshipTableWhereAccountIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmAnAccountRelationshipSlaveTable) { #>
            , IAmAnAccountRelationshipTableWhereAccountIsTheSlaveModel
<#      } #>
<#      if (td.IsIAmAUserRelationshipMasterTable) { #>
            , IAmAUserRelationshipTableWhereUserIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmAUserRelationshipSlaveTable) { #>
            , IAmAUserRelationshipTableWhereUserIsTheSlaveModel
<#      } #>
<#      if (td.IsIAmAProductRelationshipMasterTable) { #>
            , IAmAProductRelationshipTableWhereProductIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmAProductRelationshipSlaveTable) { #>
            , IAmAProductRelationshipTableWhereProductIsTheSlaveModel
<#      } #>
<#      if (td.IsIAmAManufacturerRelationshipMasterTable) { #>
            , IAmAManufacturerRelationshipTableWhereManufacturerIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmAManufacturerRelationshipSlaveTable) { #>
            , IAmAManufacturerRelationshipTableWhereManufacturerIsTheSlaveModel
<#      } #>
<#      if (td.IsIAmAVendorRelationshipMasterTable) { #>
            , IAmAVendorRelationshipTableWhereVendorIsTheMasterModel<I<#= HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name) #>Model>
<#      } #>
<#      if (td.IsIAmAVendorRelationshipSlaveTable) { #>
            , IAmAVendorRelationshipTableWhereVendorIsTheSlaveModel
<#      } #>
<#      if (td.IsIImageBase) { #>
            , IImageBaseModel<I<#= HelpFunctions.SwapToModelType(theType.Name + "Type") #>Model>
<#      } #>
<#      if (td.IsIAppliedDiscountBase) { #>
            , IAppliedDiscountBaseModel
<#      } #>
<#      if (td.IsIAmFilterableByAccountT) { #>
            , IAmFilterableByAccountModel<I<#= new[] { "Ad", "Brand", "Franchise", "Discount", "PriceRule", "Store", "Vendor" }.Contains(name) ? name + "Account" :  "Account" + name #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByAccount && !td.IsIAmAnAccountRelationshipMasterTable && !td.IsIAmAnAccountRelationshipSlaveTable) { #>
            , IAmFilterableByAccountModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableAccount) { #>
            , IAmFilterableByNullableAccountModel
<#      } #>
<#      if (td.IsIAmFilterableByBrandT) { #>
            , IAmFilterableByBrandModel<I<#= new[] { "CategoryType", "UserType" }.Contains(name) ? "Type" : new[] { "Account", "Auction", "Category", "Franchise", "InventoryLocation", "Manufacturer", "Product", "SiteDomain", "Store", "User", "Vendor" }.Contains(name) ? "Brand" + name : name + "Brand" #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByBrand && !td.IsIAmABrandRelationshipMasterTable && !td.IsIAmABrandRelationshipSlaveTable) { #>
            , IAmFilterableByBrandModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableBrand) { #>
            , IAmFilterableByNullableBrandModel
<#      } #>
<#      if (td.IsIAmFilterableByFranchiseT) { #>
            , IAmFilterableByFranchiseModel<I<#= new[] { "CategoryType", "UserType" }.Contains(name) ? "Type" : new[] { "Account", "Auction", "Category", "InventoryLocation", "Manufacturer", "Product", "SiteDomain", "Store", "User", "Vendor" }.Contains(name) ? "Franchise" + name : name + "Franchise" #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByFranchise && !td.IsIAmAFranchiseRelationshipMasterTable && !td.IsIAmAFranchiseRelationshipSlaveTable) { #>
            , IAmFilterableByFranchiseModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableFranchise) { #>
            , IAmFilterableByNullableFranchiseModel
<#      } #>
<#      if (td.IsIAmFilterableByCategoryT) { #>
            , IAmFilterableByCategoryModel<I<#= new[] { "Ad", "Auction", "Brand", "Discount", "Lot", "Franchise", "PriceRule", "Product", "Scout", "Store" }.Contains(name) ? name + "Category" :  "Category" + name #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByCategory && !td.IsIAmACategoryRelationshipMasterTable && !td.IsIAmACategoryRelationshipSlaveTable) { #>
            , IAmFilterableByCategoryModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableCategory) { #>
            , IAmFilterableByNullableCategoryModel
<#      } #>
<#      if (td.IsIAmFilterableByManufacturerT) { #>
            , IAmFilterableByManufacturerModel<I<#= new[] { "Brand", "Discount", "Franchise", "PriceRule", "Store", "Vendor" }.Contains(name) ? name + "Manufacturer" :  "Manufacturer" + name #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByManufacturer && !td.IsIAmAManufacturerRelationshipMasterTable && !td.IsIAmAManufacturerRelationshipSlaveTable) { #>
            , IAmFilterableByManufacturerModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableManufacturer) { #>
            , IAmFilterableByNullableManufacturerModel
<#      } #>
<#      if (td.IsIAmFilterableByProductT) { #>
            , IAmFilterableByProductModel<I<#= new[] { "Account", "Brand", "Franchise", "CalendarEvent", "Discount", "Manufacturer", "PriceRule", "Store", "Vendor" }.Contains(name) ? name + "Product" :  "Product" + name #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByProduct && !td.IsIAmAProductRelationshipMasterTable && !td.IsIAmAProductRelationshipSlaveTable) { #>
            , IAmFilterableByProductModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableProduct) { #>
            , IAmFilterableByNullableProductModel
<#      } #>
<#      if (td.IsIAmFilterableByStoreT) { #>
            , IAmFilterableByStoreModel<I<#= new[] { "Ad", "Brand", "Franchise", "Discount", "PriceRule" }.Contains(name) ? name + "Store" :  "Store" + name #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByStore && !td.IsIAmAStoreRelationshipMasterTable && !td.IsIAmAStoreRelationshipSlaveTable) { #>
            , IAmFilterableByStoreModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableStore) { #>
            , IAmFilterableByNullableStoreModel
<#      } #>
<#      if (td.IsIAmFilterableByUserT) { #>
            , IAmFilterableByUserModel<I<#= new[] { "Account" }.Contains(name) ? "User" : new[] { "Brand", "Franchise", "Conversation", "Discount", "Group", "Store" }.Contains(name) ? name + "User" :  "User" + name #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByUser && !td.IsIAmAUserRelationshipMasterTable && !td.IsIAmAUserRelationshipSlaveTable) { #>
            , IAmFilterableByUserModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableUser) { #>
            , IAmFilterableByNullableUserModel
<#      } #>
<#      if (td.IsIAmFilterableByVendorT) { #>
            , IAmFilterableByVendorModel<I<#= new[] { "Brand", "Discount", "Franchise", "PriceRule", "Store" }.Contains(name) ? name + "Vendor" :  "Vendor" + name #>Model>
<#      } #>
<#      if (td.IsIAmFilterableByVendor && !td.IsIAmAVendorRelationshipMasterTable && !td.IsIAmAVendorRelationshipSlaveTable) { #>
            , IAmFilterableByVendorModel
<#      } #>
<#      if (td.IsIAmFilterableByNullableVendor) { #>
            , IAmFilterableByNullableVendorModel
<#      } #>
<#      if (td.IsIHaveATypeBase && !td.IsIImageBase) { #>
            , IHaveATypeBaseModel<I<#= HelpFunctions.SwapToModelType(td.RelatedTypeType.Name) #>Model>
<#      } #>
<#      if (td.IsIHaveAStatusBase && !td.IsIAmATrackedEventBaseT) { #>
            , IHaveAStatusBaseModel<I<#= HelpFunctions.SwapToModelType(td.RelatedStatusType.Name) #>Model>
<#      } #>
<#      if (td.IsIHaveAStateBase) { #>
            , IHaveAStateBaseModel<I<#= HelpFunctions.SwapToModelType(td.RelatedStateType.Name) #>Model>
<#      } #>
<#      if (td.IsIHaveANullableContactBase) { #>
            , IHaveANullableContactBaseModel
<#      } #>
<#      if (td.IsIHaveAContactBase && !td.IsIAmAContactRelationshipTable) { #>
            , IHaveAContactBaseModel
<#      } #>
<#      if (td.IsIHaveAParentBase) { #>
            , IHaveAParentBaseModel<I<#= HelpFunctions.SwapToModelType(theType.Name) #>Model>
<#      } #>
<#      if (td.IsIHaveCurrenciesBase) { #>
            , IHaveCurrenciesBaseModel<I<#= HelpFunctions.SwapToModelType(td.IHaveCurrenciesTType.Name) #>Model>
<#      } #>
<#      if (td.IsIHaveLanguagesBase) { #>
            , IHaveLanguagesBaseModel<I<#= HelpFunctions.SwapToModelType(td.IHaveLanguagesTType.Name) #>Model>
<#      } #>
<#      if (td.IsIHaveAdCounters) { #>
            , IHaveAdCountersModel
<#      } #>
<#      if (td.IsIHaveRequiresRolesBase) { #>
            , IHaveRequiresRolesBaseModel
<#      } #>
<#      if (td.IsIHaveReviewsBase) { #>
            , IHaveReviewsBaseModel
<#      } #>
<#      if (td.IsIHaveSeoBase) { #>
            , IHaveSeoBaseModel
<#      } #>
<#      if (td.IsIHaveOrderMinimumsBase) { #>
            , IHaveOrderMinimumsBaseModel
<#      } #>
<#      if (td.IsIHaveFreeShippingMinimumsBase) { #>
            , IHaveFreeShippingMinimumsBaseModel
<#      } #>
<#      if (td.IsIHaveImagesBase) { #>
            , IHaveImagesBaseModel<I<#= theType.Name #>ImageModel, I<#= HelpFunctions.SwapToModelType(theType.Name + "Image" + "Type") #>Model>
<#      } #>
<#      if (td.IsIHaveStoredFilesBase) { #>
            , IHaveStoredFilesBaseModel<I<#= theType.Name #>FileModel>
<#      } #>
<#      if (td.IsIHaveNotesBase) { #>
            , IHaveNotesBaseModel
<#      } #>
<#      if (td.IsISalesItemTargetBase) { #>
            , ISalesItemTargetBaseModel
<#      } #>
<#      if (td.IsIAmATrackedEventBaseT) { #>
            , IAmATrackedEventBaseModel<I<#= HelpFunctions.SwapToModelType(td.RelatedStatusType.Name) #>Model>
<#      } else if (td.IsIAmATrackedEventBase) { #>
            , IAmATrackedEventBaseModel
<#      } else if (td.IsIAmALitelyTrackedEventBase) { #>
            , IAmALitelyTrackedEventBaseModel
<#      } #>
    {
<#      if (td.IsIAmARelationshipTable)
        {
            var typesAreTheSame = td.RelationshipPrimaryType == td.RelationshipSecondaryType;
            var primaryName = (typesAreTheSame ? "Primary" : string.Empty) + td.RelationshipPrimaryType.Name;
            var secondaryName = (typesAreTheSame ? "Associated" : string.Empty) + td.RelationshipSecondaryType.Name;
            var primaryTypeModelName = HelpFunctions.SwapToModelType(td.RelationshipPrimaryType.Name);
            var secondaryTypeModelName = HelpFunctions.SwapToModelType(td.RelationshipSecondaryType.Name);
            var primaryModelSuffix = primaryTypeModelName == "SalesItemBase" ? "<IApplied" + td.RelationshipPrimaryType.Name + "DiscountModel>" : string.Empty;
#>
        #region IAmARelationshipTable
<#          if (td.RelationshipPrimaryType == typeof(Account)
                || td.RelationshipPrimaryType == typeof(Brand)
                || td.RelationshipPrimaryType == typeof(Category)
                || td.RelationshipPrimaryType == typeof(Discount)
                || td.RelationshipPrimaryType == typeof(Franchise)
                || td.RelationshipPrimaryType == typeof(Manufacturer)
                || td.RelationshipPrimaryType == typeof(Product)
                || td.RelationshipPrimaryType == typeof(Store)
                || td.RelationshipPrimaryType == typeof(Vendor)) { #>
        /// <summary>Gets or sets the name of the master.</summary>
        /// <value>The name of the master.</value>
        string? MasterName { get; set; }
<#          } #>
<#          if (td.RelationshipPrimaryType != typeof(Account)
                && td.RelationshipPrimaryType != typeof(Brand)
                && td.RelationshipPrimaryType != typeof(Category)
                && td.RelationshipPrimaryType != typeof(Discount)
                && td.RelationshipPrimaryType != typeof(Franchise)
                && td.RelationshipPrimaryType != typeof(Manufacturer)
                && td.RelationshipPrimaryType != typeof(Product)
                && td.RelationshipPrimaryType != typeof(Store)
                && td.RelationshipPrimaryType != typeof(User)
                && td.RelationshipPrimaryType != typeof(Vendor)) { #>
<#              if (td.RelationshipPrimaryTypeTD.IsINameableBase) { #>

        /// <summary>Gets or sets the name of the master.</summary>
        /// <value>The name of the master.</value>
        string? MasterName { get; set; }
<#              } #>
<#          } #>
<#          if (theType.Name.Contains("Favorite")) { #>
        /// <summary>Gets or sets the identifier of the favorite.</summary>
        /// <value>The identifier of the favorite.</value>
        int FavoriteID { get; set; }

        /// <summary>Gets or sets the favorite key.</summary>
        /// <value>The favorite key.</value>
        string? FavoriteKey { get; set; }
<#              if (td.RelationshipSecondaryTypeTD.IsINameableBase) { #>

        /// <summary>Gets or sets the favorite name.</summary>
        /// <value>The favorite name.</value>
        string? FavoriteName { get; set; }

        /// <summary>Gets or sets the name of the slave.</summary>
        /// <value>The name of the slave.</value>
        string? SlaveName { get; set; }

        /// <summary>Gets or sets the favorite.</summary>
        /// <value>The favorite.</value>
        I<#= secondaryTypeModelName #>Model? Favorite { get; set; }
<#              } #>
<#          } else if (td.RelationshipSecondaryType != typeof(Account)
                && td.RelationshipSecondaryType != typeof(Brand)
                && td.RelationshipSecondaryType != typeof(Category)
                && td.RelationshipSecondaryType != typeof(Contact)
                && td.RelationshipSecondaryType != typeof(Discount)
                && td.RelationshipSecondaryType != typeof(Franchise)
                && td.RelationshipSecondaryType != typeof(Manufacturer)
                && td.RelationshipSecondaryType != typeof(Product)
                && td.RelationshipSecondaryType != typeof(Store)
                && td.RelationshipSecondaryType != typeof(User)
                && td.RelationshipSecondaryType != typeof(Vendor)) {
                if (td.RelationshipSecondaryTypeTD.IsINameableBase) { #>

        /// <summary>Gets or sets the name of the slave.</summary>
        /// <value>The name of the slave.</value>
        string? SlaveName { get; set; }
<#              }
            } else if (td.RelationshipSecondaryType == typeof(Account)
                || td.RelationshipSecondaryType == typeof(Brand)
                || td.RelationshipSecondaryType == typeof(Category)
                || td.RelationshipSecondaryType == typeof(Franchise)
                || td.RelationshipSecondaryType == typeof(Manufacturer)
                || td.RelationshipSecondaryType == typeof(Product)
                || td.RelationshipSecondaryType == typeof(Store)
                || td.RelationshipSecondaryType == typeof(Vendor)) { #>

        /// <summary>Gets or sets the name of the slave.</summary>
        /// <value>The name of the slave.</value>
        string? SlaveName { get; set; }
<#          } #>
        #endregion
<#      } #>
    }
}
<#      SaveOutput(@group.Key.Replace("System", "Structure") + "\\I" + theType.Name + "Model", "generated.cs", true);
    }
}
DeleteOldOutputs();
#>
