// <autogenerated>
// <copyright file="IWorkflows.cs" company="clarity-ventures.com">
// Copyright (c) 2016-2023 clarity-ventures.com. All rights reserved.
// </copyright>
// <summary>Implements the Workflow Interfaces</summary>
// <remarks>This file was auto-generated by IWorkflows.tt, changes to this
// file will be overwritten automatically when the T4 template is run again</remarks>
// </autogenerated>
#nullable enable
// ReSharper disable InvalidXmlDocComment
#pragma warning disable CS0618
namespace Clarity.Ecommerce.Interfaces.Workflow
{
    using DataModel;
    using Ecommerce.DataModel;
    using Models;

    #region Accounts
    /// <summary>Interface for Account workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAccountModel,IAccountSearchModel,IAccount,Account}"/>
    public partial interface IAccountWorkflow
        : INameableWorkflowBase<IAccountModel, IAccountSearchModel, IAccount, Account>
    {
    }

    /// <summary>Interface for Account Association workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAccountAssociationModel,IAccountAssociationSearchModel,IAccountAssociation,AccountAssociation}"/>
    public partial interface IAccountAssociationWorkflow
        : IWorkflowBase<IAccountAssociationModel, IAccountAssociationSearchModel, IAccountAssociation, AccountAssociation>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IAccountAssociationType,AccountAssociationType}"/>
    public partial interface IAccountAssociationTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IAccountAssociationType, AccountAssociationType>
    {
    }

    /// <summary>Interface for Account Contact workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAccountContactModel,IAccountContactSearchModel,IAccountContact,AccountContact}"/>
    public partial interface IAccountContactWorkflow
        : INameableWorkflowBase<IAccountContactModel, IAccountContactSearchModel, IAccountContact, AccountContact>
    {
    }

    /// <summary>Interface for Account Currency workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAccountCurrencyModel,IAccountCurrencySearchModel,IAccountCurrency,AccountCurrency}"/>
    public partial interface IAccountCurrencyWorkflow
        : IWorkflowBase<IAccountCurrencyModel, IAccountCurrencySearchModel, IAccountCurrency, AccountCurrency>
    {
    }

    /// <summary>Interface for Account File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAccountFileModel,IAccountFileSearchModel,IAccountFile,AccountFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{IAccountFileModel}"/>
    public partial interface IAccountFileWorkflow
        : INameableWorkflowBase<IAccountFileModel, IAccountFileSearchModel, IAccountFile, AccountFile>
        , IWorkflowBaseHasGetBySeoUrl<IAccountFileModel>
    {
    }

    /// <summary>Interface for Account Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAccountImageModel,IAccountImageSearchModel,IAccountImage,AccountImage}"/>
    public partial interface IAccountImageWorkflow
        : INameableWorkflowBase<IAccountImageModel, IAccountImageSearchModel, IAccountImage, AccountImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IAccountImageType,AccountImageType}"/>
    public partial interface IAccountImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IAccountImageType, AccountImageType>
    {
    }

    /// <summary>Interface for Account Price Point workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAccountPricePointModel,IAccountPricePointSearchModel,IAccountPricePoint,AccountPricePoint}"/>
    public partial interface IAccountPricePointWorkflow
        : IWorkflowBase<IAccountPricePointModel, IAccountPricePointSearchModel, IAccountPricePoint, AccountPricePoint>
    {
    }

    /// <summary>Interface for Account Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAccountProductModel,IAccountProductSearchModel,IAccountProduct,AccountProduct}"/>
    public partial interface IAccountProductWorkflow
        : IWorkflowBase<IAccountProductModel, IAccountProductSearchModel, IAccountProduct, AccountProduct>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IAccountProductType,AccountProductType}"/>
    public partial interface IAccountProductTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IAccountProductType, AccountProductType>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IAccountStatus,AccountStatus}"/>
    public partial interface IAccountStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IAccountStatus, AccountStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IAccountType,AccountType}"/>
    public partial interface IAccountTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IAccountType, AccountType>
    {
    }

    /// <summary>Interface for Account Usage Balance workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAccountUsageBalanceModel,IAccountUsageBalanceSearchModel,IAccountUsageBalance,AccountUsageBalance}"/>
    public partial interface IAccountUsageBalanceWorkflow
        : IWorkflowBase<IAccountUsageBalanceModel, IAccountUsageBalanceSearchModel, IAccountUsageBalance, AccountUsageBalance>
    {
    }

    /// <summary>Interface for Contractor workflow.</summary>
    /// <seealso cref="IWorkflowBase{IContractorModel,IContractorSearchModel,IContractor,Contractor}"/>
    public partial interface IContractorWorkflow
        : IWorkflowBase<IContractorModel, IContractorSearchModel, IContractor, Contractor>
    {
    }

    /// <summary>Interface for Service Area workflow.</summary>
    /// <seealso cref="IWorkflowBase{IServiceAreaModel,IServiceAreaSearchModel,IServiceArea,ServiceArea}"/>
    public partial interface IServiceAreaWorkflow
        : IWorkflowBase<IServiceAreaModel, IServiceAreaSearchModel, IServiceArea, ServiceArea>
    {
    }
    #endregion
    #region Advertising
    /// <summary>Interface for Ad workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAdModel,IAdSearchModel,IAd,Ad}"/>
    public partial interface IAdWorkflow
        : INameableWorkflowBase<IAdModel, IAdSearchModel, IAd, Ad>
    {
    }

    /// <summary>Interface for Ad Account workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAdAccountModel,IAdAccountSearchModel,IAdAccount,AdAccount}"/>
    public partial interface IAdAccountWorkflow
        : IWorkflowBase<IAdAccountModel, IAdAccountSearchModel, IAdAccount, AdAccount>
    {
    }

    /// <summary>Interface for Ad Brand workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAdBrandModel,IAdBrandSearchModel,IAdBrand,AdBrand}"/>
    public partial interface IAdBrandWorkflow
        : IWorkflowBase<IAdBrandModel, IAdBrandSearchModel, IAdBrand, AdBrand>
    {
    }

    /// <summary>Interface for Ad Franchise workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAdFranchiseModel,IAdFranchiseSearchModel,IAdFranchise,AdFranchise}"/>
    public partial interface IAdFranchiseWorkflow
        : IWorkflowBase<IAdFranchiseModel, IAdFranchiseSearchModel, IAdFranchise, AdFranchise>
    {
    }

    /// <summary>Interface for Ad Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAdImageModel,IAdImageSearchModel,IAdImage,AdImage}"/>
    public partial interface IAdImageWorkflow
        : INameableWorkflowBase<IAdImageModel, IAdImageSearchModel, IAdImage, AdImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IAdImageType,AdImageType}"/>
    public partial interface IAdImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IAdImageType, AdImageType>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IAdStatus,AdStatus}"/>
    public partial interface IAdStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IAdStatus, AdStatus>
    {
    }

    /// <summary>Interface for Ad Store workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAdStoreModel,IAdStoreSearchModel,IAdStore,AdStore}"/>
    public partial interface IAdStoreWorkflow
        : IWorkflowBase<IAdStoreModel, IAdStoreSearchModel, IAdStore, AdStore>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IAdType,AdType}"/>
    public partial interface IAdTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IAdType, AdType>
    {
    }

    /// <summary>Interface for Ad Zone workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAdZoneModel,IAdZoneSearchModel,IAdZone,AdZone}"/>
    public partial interface IAdZoneWorkflow
        : IWorkflowBase<IAdZoneModel, IAdZoneSearchModel, IAdZone, AdZone>
    {
    }

    /// <summary>Interface for Ad Zone Access workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAdZoneAccessModel,IAdZoneAccessSearchModel,IAdZoneAccess,AdZoneAccess}"/>
    public partial interface IAdZoneAccessWorkflow
        : INameableWorkflowBase<IAdZoneAccessModel, IAdZoneAccessSearchModel, IAdZoneAccess, AdZoneAccess>
    {
    }

    /// <summary>Interface for Zone workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IZoneModel,IZoneSearchModel,IZone,Zone}"/>
    public partial interface IZoneWorkflow
        : INameableWorkflowBase<IZoneModel, IZoneSearchModel, IZone, Zone>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IZoneStatus,ZoneStatus}"/>
    public partial interface IZoneStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IZoneStatus, ZoneStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IZoneType,ZoneType}"/>
    public partial interface IZoneTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IZoneType, ZoneType>
    {
    }
    #endregion
    #region Attributes
    /// <summary>Interface for Attribute Group workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IAttributeGroupModel,IAttributeGroupSearchModel,IAttributeGroup,AttributeGroup}"/>
    public partial interface IAttributeGroupWorkflow
        : ITypableWorkflowBase<IAttributeGroupModel, IAttributeGroupSearchModel, IAttributeGroup, AttributeGroup>
    {
    }

    /// <summary>Interface for Attribute Tab workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IAttributeTabModel,IAttributeTabSearchModel,IAttributeTab,AttributeTab}"/>
    public partial interface IAttributeTabWorkflow
        : ITypableWorkflowBase<IAttributeTabModel, IAttributeTabSearchModel, IAttributeTab, AttributeTab>
    {
    }

    /// <summary>Interface for Attribute Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IAttributeTypeModel,IAttributeTypeSearchModel,IAttributeType,AttributeType}"/>
    public partial interface IAttributeTypeWorkflow
        : ITypableWorkflowBase<IAttributeTypeModel, IAttributeTypeSearchModel, IAttributeType, AttributeType>
    {
    }

    /// <summary>Interface for General Attribute workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IGeneralAttributeModel,IGeneralAttributeSearchModel,IGeneralAttribute,GeneralAttribute}"/>
    public partial interface IGeneralAttributeWorkflow
        : ITypableWorkflowBase<IGeneralAttributeModel, IGeneralAttributeSearchModel, IGeneralAttribute, GeneralAttribute>
    {
    }

    /// <summary>Interface for General Attribute Predefined Option workflow.</summary>
    /// <seealso cref="IWorkflowBase{IGeneralAttributePredefinedOptionModel,IGeneralAttributePredefinedOptionSearchModel,IGeneralAttributePredefinedOption,GeneralAttributePredefinedOption}"/>
    public partial interface IGeneralAttributePredefinedOptionWorkflow
        : IWorkflowBase<IGeneralAttributePredefinedOptionModel, IGeneralAttributePredefinedOptionSearchModel, IGeneralAttributePredefinedOption, GeneralAttributePredefinedOption>
    {
    }
    #endregion
    #region Auctions
    /// <summary>Interface for Auction workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAuctionModel,IAuctionSearchModel,IAuction,Auction}"/>
    public partial interface IAuctionWorkflow
        : INameableWorkflowBase<IAuctionModel, IAuctionSearchModel, IAuction, Auction>
    {
    }

    /// <summary>Interface for Auction Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAuctionCategoryModel,IAuctionCategorySearchModel,IAuctionCategory,AuctionCategory}"/>
    public partial interface IAuctionCategoryWorkflow
        : IWorkflowBase<IAuctionCategoryModel, IAuctionCategorySearchModel, IAuctionCategory, AuctionCategory>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IAuctionStatus,AuctionStatus}"/>
    public partial interface IAuctionStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IAuctionStatus, AuctionStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IAuctionType,AuctionType}"/>
    public partial interface IAuctionTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IAuctionType, AuctionType>
    {
    }

    /// <summary>Interface for Bid workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBidModel,IBidSearchModel,IBid,Bid}"/>
    public partial interface IBidWorkflow
        : IWorkflowBase<IBidModel, IBidSearchModel, IBid, Bid>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IBidStatus,BidStatus}"/>
    public partial interface IBidStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IBidStatus, BidStatus>
    {
    }

    /// <summary>Interface for Brand Auction workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandAuctionModel,IBrandAuctionSearchModel,IBrandAuction,BrandAuction}"/>
    public partial interface IBrandAuctionWorkflow
        : IWorkflowBase<IBrandAuctionModel, IBrandAuctionSearchModel, IBrandAuction, BrandAuction>
    {
    }

    /// <summary>Interface for Franchise Auction workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseAuctionModel,IFranchiseAuctionSearchModel,IFranchiseAuction,FranchiseAuction}"/>
    public partial interface IFranchiseAuctionWorkflow
        : IWorkflowBase<IFranchiseAuctionModel, IFranchiseAuctionSearchModel, IFranchiseAuction, FranchiseAuction>
    {
    }

    /// <summary>Interface for Lot workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ILotModel,ILotSearchModel,ILot,Lot}"/>
    public partial interface ILotWorkflow
        : INameableWorkflowBase<ILotModel, ILotSearchModel, ILot, Lot>
    {
    }

    /// <summary>Interface for Lot Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{ILotCategoryModel,ILotCategorySearchModel,ILotCategory,LotCategory}"/>
    public partial interface ILotCategoryWorkflow
        : IWorkflowBase<ILotCategoryModel, ILotCategorySearchModel, ILotCategory, LotCategory>
    {
    }

    /// <summary>Interface for Lot Group workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ILotGroupModel,ILotGroupSearchModel,ILotGroup,LotGroup}"/>
    public partial interface ILotGroupWorkflow
        : ITypableWorkflowBase<ILotGroupModel, ILotGroupSearchModel, ILotGroup, LotGroup>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ILotStatus,LotStatus}"/>
    public partial interface ILotStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ILotStatus, LotStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ILotType,LotType}"/>
    public partial interface ILotTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ILotType, LotType>
    {
    }

    /// <summary>Interface for Store Auction workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreAuctionModel,IStoreAuctionSearchModel,IStoreAuction,StoreAuction}"/>
    public partial interface IStoreAuctionWorkflow
        : IWorkflowBase<IStoreAuctionModel, IStoreAuctionSearchModel, IStoreAuction, StoreAuction>
    {
    }
    #endregion
    #region Badges
    /// <summary>Interface for Badge workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IBadgeModel,IBadgeSearchModel,IBadge,Badge}"/>
    public partial interface IBadgeWorkflow
        : INameableWorkflowBase<IBadgeModel, IBadgeSearchModel, IBadge, Badge>
    {
    }

    /// <summary>Interface for Badge Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IBadgeImageModel,IBadgeImageSearchModel,IBadgeImage,BadgeImage}"/>
    public partial interface IBadgeImageWorkflow
        : INameableWorkflowBase<IBadgeImageModel, IBadgeImageSearchModel, IBadgeImage, BadgeImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IBadgeImageType,BadgeImageType}"/>
    public partial interface IBadgeImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IBadgeImageType, BadgeImageType>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IBadgeType,BadgeType}"/>
    public partial interface IBadgeTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IBadgeType, BadgeType>
    {
    }
    #endregion
    #region Brands
    /// <summary>Interface for Brand workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IBrandModel,IBrandSearchModel,IBrand,Brand}"/>
    public partial interface IBrandWorkflow
        : INameableWorkflowBase<IBrandModel, IBrandSearchModel, IBrand, Brand>
    {
    }

    /// <summary>Interface for Brand Account workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandAccountModel,IBrandAccountSearchModel,IBrandAccount,BrandAccount}"/>
    public partial interface IBrandAccountWorkflow
        : IWorkflowBase<IBrandAccountModel, IBrandAccountSearchModel, IBrandAccount, BrandAccount>
    {
    }

    /// <summary>Interface for Brand Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandCategoryModel,IBrandCategorySearchModel,IBrandCategory,BrandCategory}"/>
    public partial interface IBrandCategoryWorkflow
        : IWorkflowBase<IBrandCategoryModel, IBrandCategorySearchModel, IBrandCategory, BrandCategory>
    {
    }

    /// <summary>Interface for Brand Currency workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandCurrencyModel,IBrandCurrencySearchModel,IBrandCurrency,BrandCurrency}"/>
    public partial interface IBrandCurrencyWorkflow
        : IWorkflowBase<IBrandCurrencyModel, IBrandCurrencySearchModel, IBrandCurrency, BrandCurrency>
    {
    }

    /// <summary>Interface for Brand Franchise workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandFranchiseModel,IBrandFranchiseSearchModel,IBrandFranchise,BrandFranchise}"/>
    public partial interface IBrandFranchiseWorkflow
        : IWorkflowBase<IBrandFranchiseModel, IBrandFranchiseSearchModel, IBrandFranchise, BrandFranchise>
    {
    }

    /// <summary>Interface for Brand Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IBrandImageModel,IBrandImageSearchModel,IBrandImage,BrandImage}"/>
    public partial interface IBrandImageWorkflow
        : INameableWorkflowBase<IBrandImageModel, IBrandImageSearchModel, IBrandImage, BrandImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IBrandImageType,BrandImageType}"/>
    public partial interface IBrandImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IBrandImageType, BrandImageType>
    {
    }

    /// <summary>Interface for Brand Inventory Location workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandInventoryLocationModel,IBrandInventoryLocationSearchModel,IBrandInventoryLocation,BrandInventoryLocation}"/>
    public partial interface IBrandInventoryLocationWorkflow
        : IWorkflowBase<IBrandInventoryLocationModel, IBrandInventoryLocationSearchModel, IBrandInventoryLocation, BrandInventoryLocation>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IBrandInventoryLocationType,BrandInventoryLocationType}"/>
    public partial interface IBrandInventoryLocationTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IBrandInventoryLocationType, BrandInventoryLocationType>
    {
    }

    /// <summary>Interface for Brand Language workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandLanguageModel,IBrandLanguageSearchModel,IBrandLanguage,BrandLanguage}"/>
    public partial interface IBrandLanguageWorkflow
        : IWorkflowBase<IBrandLanguageModel, IBrandLanguageSearchModel, IBrandLanguage, BrandLanguage>
    {
    }

    /// <summary>Interface for Brand Manufacturer workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandManufacturerModel,IBrandManufacturerSearchModel,IBrandManufacturer,BrandManufacturer}"/>
    public partial interface IBrandManufacturerWorkflow
        : IWorkflowBase<IBrandManufacturerModel, IBrandManufacturerSearchModel, IBrandManufacturer, BrandManufacturer>
    {
    }

    /// <summary>Interface for Brand Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandProductModel,IBrandProductSearchModel,IBrandProduct,BrandProduct}"/>
    public partial interface IBrandProductWorkflow
        : IWorkflowBase<IBrandProductModel, IBrandProductSearchModel, IBrandProduct, BrandProduct>
    {
    }

    /// <summary>Interface for Brand Site Domain workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandSiteDomainModel,IBrandSiteDomainSearchModel,IBrandSiteDomain,BrandSiteDomain}"/>
    public partial interface IBrandSiteDomainWorkflow
        : IWorkflowBase<IBrandSiteDomainModel, IBrandSiteDomainSearchModel, IBrandSiteDomain, BrandSiteDomain>
    {
    }

    /// <summary>Interface for Brand Store workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandStoreModel,IBrandStoreSearchModel,IBrandStore,BrandStore}"/>
    public partial interface IBrandStoreWorkflow
        : IWorkflowBase<IBrandStoreModel, IBrandStoreSearchModel, IBrandStore, BrandStore>
    {
    }

    /// <summary>Interface for Brand User workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandUserModel,IBrandUserSearchModel,IBrandUser,BrandUser}"/>
    public partial interface IBrandUserWorkflow
        : IWorkflowBase<IBrandUserModel, IBrandUserSearchModel, IBrandUser, BrandUser>
    {
    }

    /// <summary>Interface for Brand Vendor workflow.</summary>
    /// <seealso cref="IWorkflowBase{IBrandVendorModel,IBrandVendorSearchModel,IBrandVendor,BrandVendor}"/>
    public partial interface IBrandVendorWorkflow
        : IWorkflowBase<IBrandVendorModel, IBrandVendorSearchModel, IBrandVendor, BrandVendor>
    {
    }
    #endregion
    #region CalendarEvents
    /// <summary>Interface for Calendar Event workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICalendarEventModel,ICalendarEventSearchModel,ICalendarEvent,CalendarEvent}"/>
    public partial interface ICalendarEventWorkflow
        : INameableWorkflowBase<ICalendarEventModel, ICalendarEventSearchModel, ICalendarEvent, CalendarEvent>
    {
    }

    /// <summary>Interface for Calendar Event Detail workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICalendarEventDetailModel,ICalendarEventDetailSearchModel,ICalendarEventDetail,CalendarEventDetail}"/>
    public partial interface ICalendarEventDetailWorkflow
        : INameableWorkflowBase<ICalendarEventDetailModel, ICalendarEventDetailSearchModel, ICalendarEventDetail, CalendarEventDetail>
    {
    }

    /// <summary>Interface for Calendar Event File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICalendarEventFileModel,ICalendarEventFileSearchModel,ICalendarEventFile,CalendarEventFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ICalendarEventFileModel}"/>
    public partial interface ICalendarEventFileWorkflow
        : INameableWorkflowBase<ICalendarEventFileModel, ICalendarEventFileSearchModel, ICalendarEventFile, CalendarEventFile>
        , IWorkflowBaseHasGetBySeoUrl<ICalendarEventFileModel>
    {
    }

    /// <summary>Interface for Calendar Event Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICalendarEventImageModel,ICalendarEventImageSearchModel,ICalendarEventImage,CalendarEventImage}"/>
    public partial interface ICalendarEventImageWorkflow
        : INameableWorkflowBase<ICalendarEventImageModel, ICalendarEventImageSearchModel, ICalendarEventImage, CalendarEventImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICalendarEventImageType,CalendarEventImageType}"/>
    public partial interface ICalendarEventImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICalendarEventImageType, CalendarEventImageType>
    {
    }

    /// <summary>Interface for Calendar Event Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICalendarEventProductModel,ICalendarEventProductSearchModel,ICalendarEventProduct,CalendarEventProduct}"/>
    public partial interface ICalendarEventProductWorkflow
        : IWorkflowBase<ICalendarEventProductModel, ICalendarEventProductSearchModel, ICalendarEventProduct, CalendarEventProduct>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ICalendarEventStatus,CalendarEventStatus}"/>
    public partial interface ICalendarEventStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ICalendarEventStatus, CalendarEventStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICalendarEventType,CalendarEventType}"/>
    public partial interface ICalendarEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICalendarEventType, CalendarEventType>
    {
    }

    /// <summary>Interface for User Event Attendance workflow.</summary>
    /// <seealso cref="IWorkflowBase{IUserEventAttendanceModel,IUserEventAttendanceSearchModel,IUserEventAttendance,UserEventAttendance}"/>
    public partial interface IUserEventAttendanceWorkflow
        : IWorkflowBase<IUserEventAttendanceModel, IUserEventAttendanceSearchModel, IUserEventAttendance, UserEventAttendance>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IUserEventAttendanceType,UserEventAttendanceType}"/>
    public partial interface IUserEventAttendanceTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IUserEventAttendanceType, UserEventAttendanceType>
    {
    }
    #endregion
    #region Categories
    /// <summary>Interface for Category workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICategoryModel,ICategorySearchModel,ICategory,Category}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ICategoryModel}"/>
    public partial interface ICategoryWorkflow
        : INameableWorkflowBase<ICategoryModel, ICategorySearchModel, ICategory, Category>
        , IWorkflowBaseHasGetBySeoUrl<ICategoryModel>
    {
    }

    /// <summary>Interface for Category File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICategoryFileModel,ICategoryFileSearchModel,ICategoryFile,CategoryFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ICategoryFileModel}"/>
    public partial interface ICategoryFileWorkflow
        : INameableWorkflowBase<ICategoryFileModel, ICategoryFileSearchModel, ICategoryFile, CategoryFile>
        , IWorkflowBaseHasGetBySeoUrl<ICategoryFileModel>
    {
    }

    /// <summary>Interface for Category Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICategoryImageModel,ICategoryImageSearchModel,ICategoryImage,CategoryImage}"/>
    public partial interface ICategoryImageWorkflow
        : INameableWorkflowBase<ICategoryImageModel, ICategoryImageSearchModel, ICategoryImage, CategoryImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICategoryImageType,CategoryImageType}"/>
    public partial interface ICategoryImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICategoryImageType, CategoryImageType>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICategoryType,CategoryType}"/>
    public partial interface ICategoryTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICategoryType, CategoryType>
    {
    }
    #endregion
    #region Contacts
    /// <summary>Interface for Contact workflow.</summary>
    /// <seealso cref="IWorkflowBase{IContactModel,IContactSearchModel,IContact,Contact}"/>
    public partial interface IContactWorkflow
        : IWorkflowBase<IContactModel, IContactSearchModel, IContact, Contact>
    {
    }

    /// <summary>Interface for Contact Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IContactImageModel,IContactImageSearchModel,IContactImage,ContactImage}"/>
    public partial interface IContactImageWorkflow
        : INameableWorkflowBase<IContactImageModel, IContactImageSearchModel, IContactImage, ContactImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IContactImageType,ContactImageType}"/>
    public partial interface IContactImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IContactImageType, ContactImageType>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IContactType,ContactType}"/>
    public partial interface IContactTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IContactType, ContactType>
    {
    }

    /// <summary>Interface for Profanity Filter workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProfanityFilterModel,IProfanityFilterSearchModel,IProfanityFilter,ProfanityFilter}"/>
    public partial interface IProfanityFilterWorkflow
        : IWorkflowBase<IProfanityFilterModel, IProfanityFilterSearchModel, IProfanityFilter, ProfanityFilter>
    {
    }

    /// <summary>Interface for Referral Code workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IReferralCodeModel,IReferralCodeSearchModel,IReferralCode,ReferralCode}"/>
    public partial interface IReferralCodeWorkflow
        : INameableWorkflowBase<IReferralCodeModel, IReferralCodeSearchModel, IReferralCode, ReferralCode>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IReferralCodeStatus,ReferralCodeStatus}"/>
    public partial interface IReferralCodeStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IReferralCodeStatus, ReferralCodeStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IReferralCodeType,ReferralCodeType}"/>
    public partial interface IReferralCodeTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IReferralCodeType, ReferralCodeType>
    {
    }

    /// <summary>Interface for User workflow.</summary>
    /// <seealso cref="IWorkflowBase{IUserModel,IUserSearchModel,IUser,User}"/>
    public partial interface IUserWorkflow
        : IWorkflowBase<IUserModel, IUserSearchModel, IUser, User>
    {
    }

    /// <summary>Interface for User File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IUserFileModel,IUserFileSearchModel,IUserFile,UserFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{IUserFileModel}"/>
    public partial interface IUserFileWorkflow
        : INameableWorkflowBase<IUserFileModel, IUserFileSearchModel, IUserFile, UserFile>
        , IWorkflowBaseHasGetBySeoUrl<IUserFileModel>
    {
    }

    /// <summary>Interface for User Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IUserImageModel,IUserImageSearchModel,IUserImage,UserImage}"/>
    public partial interface IUserImageWorkflow
        : INameableWorkflowBase<IUserImageModel, IUserImageSearchModel, IUserImage, UserImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IUserImageType,UserImageType}"/>
    public partial interface IUserImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IUserImageType, UserImageType>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IUserOnlineStatus,UserOnlineStatus}"/>
    public partial interface IUserOnlineStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IUserOnlineStatus, UserOnlineStatus>
    {
    }

    /// <summary>Interface for User Product Type workflow.</summary>
    /// <seealso cref="IWorkflowBase{IUserProductTypeModel,IUserProductTypeSearchModel,IUserProductType,UserProductType}"/>
    public partial interface IUserProductTypeWorkflow
        : IWorkflowBase<IUserProductTypeModel, IUserProductTypeSearchModel, IUserProductType, UserProductType>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IUserStatus,UserStatus}"/>
    public partial interface IUserStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IUserStatus, UserStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IUserType,UserType}"/>
    public partial interface IUserTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IUserType, UserType>
    {
    }
    #endregion
    #region Counters
    /// <summary>Interface for Counter workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICounterModel,ICounterSearchModel,ICounter,Counter}"/>
    public partial interface ICounterWorkflow
        : IWorkflowBase<ICounterModel, ICounterSearchModel, ICounter, Counter>
    {
    }

    /// <summary>Interface for Counter Log workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICounterLogModel,ICounterLogSearchModel,ICounterLog,CounterLog}"/>
    public partial interface ICounterLogWorkflow
        : IWorkflowBase<ICounterLogModel, ICounterLogSearchModel, ICounterLog, CounterLog>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICounterLogType,CounterLogType}"/>
    public partial interface ICounterLogTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICounterLogType, CounterLogType>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICounterType,CounterType}"/>
    public partial interface ICounterTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICounterType, CounterType>
    {
    }
    #endregion
    #region Currencies
    /// <summary>Interface for Currency workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICurrencyModel,ICurrencySearchModel,ICurrency,Currency}"/>
    public partial interface ICurrencyWorkflow
        : INameableWorkflowBase<ICurrencyModel, ICurrencySearchModel, ICurrency, Currency>
    {
    }

    /// <summary>Interface for Currency Conversion workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICurrencyConversionModel,ICurrencyConversionSearchModel,ICurrencyConversion,CurrencyConversion}"/>
    public partial interface ICurrencyConversionWorkflow
        : IWorkflowBase<ICurrencyConversionModel, ICurrencyConversionSearchModel, ICurrencyConversion, CurrencyConversion>
    {
    }

    /// <summary>Interface for Currency Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICurrencyImageModel,ICurrencyImageSearchModel,ICurrencyImage,CurrencyImage}"/>
    public partial interface ICurrencyImageWorkflow
        : INameableWorkflowBase<ICurrencyImageModel, ICurrencyImageSearchModel, ICurrencyImage, CurrencyImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICurrencyImageType,CurrencyImageType}"/>
    public partial interface ICurrencyImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICurrencyImageType, CurrencyImageType>
    {
    }

    /// <summary>Interface for Historical Currency Rate workflow.</summary>
    /// <seealso cref="IWorkflowBase{IHistoricalCurrencyRateModel,IHistoricalCurrencyRateSearchModel,IHistoricalCurrencyRate,HistoricalCurrencyRate}"/>
    public partial interface IHistoricalCurrencyRateWorkflow
        : IWorkflowBase<IHistoricalCurrencyRateModel, IHistoricalCurrencyRateSearchModel, IHistoricalCurrencyRate, HistoricalCurrencyRate>
    {
    }
    #endregion
    #region Discounts
    /// <summary>Interface for Applied Cart Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedCartDiscountModel,IAppliedCartDiscountSearchModel,IAppliedCartDiscount,AppliedCartDiscount}"/>
    public partial interface IAppliedCartDiscountWorkflow
        : IWorkflowBase<IAppliedCartDiscountModel, IAppliedCartDiscountSearchModel, IAppliedCartDiscount, AppliedCartDiscount>
    {
    }

    /// <summary>Interface for Applied Cart Item Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedCartItemDiscountModel,IAppliedCartItemDiscountSearchModel,IAppliedCartItemDiscount,AppliedCartItemDiscount}"/>
    public partial interface IAppliedCartItemDiscountWorkflow
        : IWorkflowBase<IAppliedCartItemDiscountModel, IAppliedCartItemDiscountSearchModel, IAppliedCartItemDiscount, AppliedCartItemDiscount>
    {
    }

    /// <summary>Interface for Discount workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IDiscountModel,IDiscountSearchModel,IDiscount,Discount}"/>
    public partial interface IDiscountWorkflow
        : INameableWorkflowBase<IDiscountModel, IDiscountSearchModel, IDiscount, Discount>
    {
    }

    /// <summary>Interface for Discount Account workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountAccountModel,IDiscountAccountSearchModel,IDiscountAccount,DiscountAccount}"/>
    public partial interface IDiscountAccountWorkflow
        : IWorkflowBase<IDiscountAccountModel, IDiscountAccountSearchModel, IDiscountAccount, DiscountAccount>
    {
    }

    /// <summary>Interface for Discount Account Type workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountAccountTypeModel,IDiscountAccountTypeSearchModel,IDiscountAccountType,DiscountAccountType}"/>
    public partial interface IDiscountAccountTypeWorkflow
        : IWorkflowBase<IDiscountAccountTypeModel, IDiscountAccountTypeSearchModel, IDiscountAccountType, DiscountAccountType>
    {
    }

    /// <summary>Interface for Discount Brand workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountBrandModel,IDiscountBrandSearchModel,IDiscountBrand,DiscountBrand}"/>
    public partial interface IDiscountBrandWorkflow
        : IWorkflowBase<IDiscountBrandModel, IDiscountBrandSearchModel, IDiscountBrand, DiscountBrand>
    {
    }

    /// <summary>Interface for Discount Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountCategoryModel,IDiscountCategorySearchModel,IDiscountCategory,DiscountCategory}"/>
    public partial interface IDiscountCategoryWorkflow
        : IWorkflowBase<IDiscountCategoryModel, IDiscountCategorySearchModel, IDiscountCategory, DiscountCategory>
    {
    }

    /// <summary>Interface for Discount Code workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountCodeModel,IDiscountCodeSearchModel,IDiscountCode,DiscountCode}"/>
    public partial interface IDiscountCodeWorkflow
        : IWorkflowBase<IDiscountCodeModel, IDiscountCodeSearchModel, IDiscountCode, DiscountCode>
    {
    }

    /// <summary>Interface for Discount Country workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountCountryModel,IDiscountCountrySearchModel,IDiscountCountry,DiscountCountry}"/>
    public partial interface IDiscountCountryWorkflow
        : IWorkflowBase<IDiscountCountryModel, IDiscountCountrySearchModel, IDiscountCountry, DiscountCountry>
    {
    }

    /// <summary>Interface for Discount Franchise workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountFranchiseModel,IDiscountFranchiseSearchModel,IDiscountFranchise,DiscountFranchise}"/>
    public partial interface IDiscountFranchiseWorkflow
        : IWorkflowBase<IDiscountFranchiseModel, IDiscountFranchiseSearchModel, IDiscountFranchise, DiscountFranchise>
    {
    }

    /// <summary>Interface for Discount Manufacturer workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountManufacturerModel,IDiscountManufacturerSearchModel,IDiscountManufacturer,DiscountManufacturer}"/>
    public partial interface IDiscountManufacturerWorkflow
        : IWorkflowBase<IDiscountManufacturerModel, IDiscountManufacturerSearchModel, IDiscountManufacturer, DiscountManufacturer>
    {
    }

    /// <summary>Interface for Discount Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountProductModel,IDiscountProductSearchModel,IDiscountProduct,DiscountProduct}"/>
    public partial interface IDiscountProductWorkflow
        : IWorkflowBase<IDiscountProductModel, IDiscountProductSearchModel, IDiscountProduct, DiscountProduct>
    {
    }

    /// <summary>Interface for Discount Product Type workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountProductTypeModel,IDiscountProductTypeSearchModel,IDiscountProductType,DiscountProductType}"/>
    public partial interface IDiscountProductTypeWorkflow
        : IWorkflowBase<IDiscountProductTypeModel, IDiscountProductTypeSearchModel, IDiscountProductType, DiscountProductType>
    {
    }

    /// <summary>Interface for Discount Ship Carrier Method workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountShipCarrierMethodModel,IDiscountShipCarrierMethodSearchModel,IDiscountShipCarrierMethod,DiscountShipCarrierMethod}"/>
    public partial interface IDiscountShipCarrierMethodWorkflow
        : IWorkflowBase<IDiscountShipCarrierMethodModel, IDiscountShipCarrierMethodSearchModel, IDiscountShipCarrierMethod, DiscountShipCarrierMethod>
    {
    }

    /// <summary>Interface for Discount Store workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountStoreModel,IDiscountStoreSearchModel,IDiscountStore,DiscountStore}"/>
    public partial interface IDiscountStoreWorkflow
        : IWorkflowBase<IDiscountStoreModel, IDiscountStoreSearchModel, IDiscountStore, DiscountStore>
    {
    }

    /// <summary>Interface for Discount User workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountUserModel,IDiscountUserSearchModel,IDiscountUser,DiscountUser}"/>
    public partial interface IDiscountUserWorkflow
        : IWorkflowBase<IDiscountUserModel, IDiscountUserSearchModel, IDiscountUser, DiscountUser>
    {
    }

    /// <summary>Interface for Discount User Role workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountUserRoleModel,IDiscountUserRoleSearchModel,IDiscountUserRole,DiscountUserRole}"/>
    public partial interface IDiscountUserRoleWorkflow
        : IWorkflowBase<IDiscountUserRoleModel, IDiscountUserRoleSearchModel, IDiscountUserRole, DiscountUserRole>
    {
    }

    /// <summary>Interface for Discount Vendor workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDiscountVendorModel,IDiscountVendorSearchModel,IDiscountVendor,DiscountVendor}"/>
    public partial interface IDiscountVendorWorkflow
        : IWorkflowBase<IDiscountVendorModel, IDiscountVendorSearchModel, IDiscountVendor, DiscountVendor>
    {
    }

    /// <summary>Interface for Applied Purchase Order Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedPurchaseOrderDiscountModel,IAppliedPurchaseOrderDiscountSearchModel,IAppliedPurchaseOrderDiscount,AppliedPurchaseOrderDiscount}"/>
    public partial interface IAppliedPurchaseOrderDiscountWorkflow
        : IWorkflowBase<IAppliedPurchaseOrderDiscountModel, IAppliedPurchaseOrderDiscountSearchModel, IAppliedPurchaseOrderDiscount, AppliedPurchaseOrderDiscount>
    {
    }

    /// <summary>Interface for Applied Purchase Order Item Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedPurchaseOrderItemDiscountModel,IAppliedPurchaseOrderItemDiscountSearchModel,IAppliedPurchaseOrderItemDiscount,AppliedPurchaseOrderItemDiscount}"/>
    public partial interface IAppliedPurchaseOrderItemDiscountWorkflow
        : IWorkflowBase<IAppliedPurchaseOrderItemDiscountModel, IAppliedPurchaseOrderItemDiscountSearchModel, IAppliedPurchaseOrderItemDiscount, AppliedPurchaseOrderItemDiscount>
    {
    }

    /// <summary>Interface for Applied Sales Invoice Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSalesInvoiceDiscountModel,IAppliedSalesInvoiceDiscountSearchModel,IAppliedSalesInvoiceDiscount,AppliedSalesInvoiceDiscount}"/>
    public partial interface IAppliedSalesInvoiceDiscountWorkflow
        : IWorkflowBase<IAppliedSalesInvoiceDiscountModel, IAppliedSalesInvoiceDiscountSearchModel, IAppliedSalesInvoiceDiscount, AppliedSalesInvoiceDiscount>
    {
    }

    /// <summary>Interface for Applied Sales Invoice Item Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSalesInvoiceItemDiscountModel,IAppliedSalesInvoiceItemDiscountSearchModel,IAppliedSalesInvoiceItemDiscount,AppliedSalesInvoiceItemDiscount}"/>
    public partial interface IAppliedSalesInvoiceItemDiscountWorkflow
        : IWorkflowBase<IAppliedSalesInvoiceItemDiscountModel, IAppliedSalesInvoiceItemDiscountSearchModel, IAppliedSalesInvoiceItemDiscount, AppliedSalesInvoiceItemDiscount>
    {
    }

    /// <summary>Interface for Applied Sales Order Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSalesOrderDiscountModel,IAppliedSalesOrderDiscountSearchModel,IAppliedSalesOrderDiscount,AppliedSalesOrderDiscount}"/>
    public partial interface IAppliedSalesOrderDiscountWorkflow
        : IWorkflowBase<IAppliedSalesOrderDiscountModel, IAppliedSalesOrderDiscountSearchModel, IAppliedSalesOrderDiscount, AppliedSalesOrderDiscount>
    {
    }

    /// <summary>Interface for Applied Sales Order Item Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSalesOrderItemDiscountModel,IAppliedSalesOrderItemDiscountSearchModel,IAppliedSalesOrderItemDiscount,AppliedSalesOrderItemDiscount}"/>
    public partial interface IAppliedSalesOrderItemDiscountWorkflow
        : IWorkflowBase<IAppliedSalesOrderItemDiscountModel, IAppliedSalesOrderItemDiscountSearchModel, IAppliedSalesOrderItemDiscount, AppliedSalesOrderItemDiscount>
    {
    }

    /// <summary>Interface for Applied Sales Quote Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSalesQuoteDiscountModel,IAppliedSalesQuoteDiscountSearchModel,IAppliedSalesQuoteDiscount,AppliedSalesQuoteDiscount}"/>
    public partial interface IAppliedSalesQuoteDiscountWorkflow
        : IWorkflowBase<IAppliedSalesQuoteDiscountModel, IAppliedSalesQuoteDiscountSearchModel, IAppliedSalesQuoteDiscount, AppliedSalesQuoteDiscount>
    {
    }

    /// <summary>Interface for Applied Sales Quote Item Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSalesQuoteItemDiscountModel,IAppliedSalesQuoteItemDiscountSearchModel,IAppliedSalesQuoteItemDiscount,AppliedSalesQuoteItemDiscount}"/>
    public partial interface IAppliedSalesQuoteItemDiscountWorkflow
        : IWorkflowBase<IAppliedSalesQuoteItemDiscountModel, IAppliedSalesQuoteItemDiscountSearchModel, IAppliedSalesQuoteItemDiscount, AppliedSalesQuoteItemDiscount>
    {
    }

    /// <summary>Interface for Applied Sales Return Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSalesReturnDiscountModel,IAppliedSalesReturnDiscountSearchModel,IAppliedSalesReturnDiscount,AppliedSalesReturnDiscount}"/>
    public partial interface IAppliedSalesReturnDiscountWorkflow
        : IWorkflowBase<IAppliedSalesReturnDiscountModel, IAppliedSalesReturnDiscountSearchModel, IAppliedSalesReturnDiscount, AppliedSalesReturnDiscount>
    {
    }

    /// <summary>Interface for Applied Sales Return Item Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSalesReturnItemDiscountModel,IAppliedSalesReturnItemDiscountSearchModel,IAppliedSalesReturnItemDiscount,AppliedSalesReturnItemDiscount}"/>
    public partial interface IAppliedSalesReturnItemDiscountWorkflow
        : IWorkflowBase<IAppliedSalesReturnItemDiscountModel, IAppliedSalesReturnItemDiscountSearchModel, IAppliedSalesReturnItemDiscount, AppliedSalesReturnItemDiscount>
    {
    }

    /// <summary>Interface for Applied Sample Request Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSampleRequestDiscountModel,IAppliedSampleRequestDiscountSearchModel,IAppliedSampleRequestDiscount,AppliedSampleRequestDiscount}"/>
    public partial interface IAppliedSampleRequestDiscountWorkflow
        : IWorkflowBase<IAppliedSampleRequestDiscountModel, IAppliedSampleRequestDiscountSearchModel, IAppliedSampleRequestDiscount, AppliedSampleRequestDiscount>
    {
    }

    /// <summary>Interface for Applied Sample Request Item Discount workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAppliedSampleRequestItemDiscountModel,IAppliedSampleRequestItemDiscountSearchModel,IAppliedSampleRequestItemDiscount,AppliedSampleRequestItemDiscount}"/>
    public partial interface IAppliedSampleRequestItemDiscountWorkflow
        : IWorkflowBase<IAppliedSampleRequestItemDiscountModel, IAppliedSampleRequestItemDiscountSearchModel, IAppliedSampleRequestItemDiscount, AppliedSampleRequestItemDiscount>
    {
    }
    #endregion
    #region Favorites
    /// <summary>Interface for Favorite Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFavoriteCategoryModel,IFavoriteCategorySearchModel,IFavoriteCategory,FavoriteCategory}"/>
    public partial interface IFavoriteCategoryWorkflow
        : IWorkflowBase<IFavoriteCategoryModel, IFavoriteCategorySearchModel, IFavoriteCategory, FavoriteCategory>
    {
    }

    /// <summary>Interface for Favorite Manufacturer workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFavoriteManufacturerModel,IFavoriteManufacturerSearchModel,IFavoriteManufacturer,FavoriteManufacturer}"/>
    public partial interface IFavoriteManufacturerWorkflow
        : IWorkflowBase<IFavoriteManufacturerModel, IFavoriteManufacturerSearchModel, IFavoriteManufacturer, FavoriteManufacturer>
    {
    }

    /// <summary>Interface for Favorite Ship Carrier workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFavoriteShipCarrierModel,IFavoriteShipCarrierSearchModel,IFavoriteShipCarrier,FavoriteShipCarrier}"/>
    public partial interface IFavoriteShipCarrierWorkflow
        : IWorkflowBase<IFavoriteShipCarrierModel, IFavoriteShipCarrierSearchModel, IFavoriteShipCarrier, FavoriteShipCarrier>
    {
    }

    /// <summary>Interface for Favorite Store workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFavoriteStoreModel,IFavoriteStoreSearchModel,IFavoriteStore,FavoriteStore}"/>
    public partial interface IFavoriteStoreWorkflow
        : IWorkflowBase<IFavoriteStoreModel, IFavoriteStoreSearchModel, IFavoriteStore, FavoriteStore>
    {
    }

    /// <summary>Interface for Favorite Vendor workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFavoriteVendorModel,IFavoriteVendorSearchModel,IFavoriteVendor,FavoriteVendor}"/>
    public partial interface IFavoriteVendorWorkflow
        : IWorkflowBase<IFavoriteVendorModel, IFavoriteVendorSearchModel, IFavoriteVendor, FavoriteVendor>
    {
    }
    #endregion
    #region Franchises
    /// <summary>Interface for Franchise workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IFranchiseModel,IFranchiseSearchModel,IFranchise,Franchise}"/>
    public partial interface IFranchiseWorkflow
        : INameableWorkflowBase<IFranchiseModel, IFranchiseSearchModel, IFranchise, Franchise>
    {
    }

    /// <summary>Interface for Franchise Account workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseAccountModel,IFranchiseAccountSearchModel,IFranchiseAccount,FranchiseAccount}"/>
    public partial interface IFranchiseAccountWorkflow
        : IWorkflowBase<IFranchiseAccountModel, IFranchiseAccountSearchModel, IFranchiseAccount, FranchiseAccount>
    {
    }

    /// <summary>Interface for Franchise Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseCategoryModel,IFranchiseCategorySearchModel,IFranchiseCategory,FranchiseCategory}"/>
    public partial interface IFranchiseCategoryWorkflow
        : IWorkflowBase<IFranchiseCategoryModel, IFranchiseCategorySearchModel, IFranchiseCategory, FranchiseCategory>
    {
    }

    /// <summary>Interface for Franchise Country workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseCountryModel,IFranchiseCountrySearchModel,IFranchiseCountry,FranchiseCountry}"/>
    public partial interface IFranchiseCountryWorkflow
        : IWorkflowBase<IFranchiseCountryModel, IFranchiseCountrySearchModel, IFranchiseCountry, FranchiseCountry>
    {
    }

    /// <summary>Interface for Franchise Currency workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseCurrencyModel,IFranchiseCurrencySearchModel,IFranchiseCurrency,FranchiseCurrency}"/>
    public partial interface IFranchiseCurrencyWorkflow
        : IWorkflowBase<IFranchiseCurrencyModel, IFranchiseCurrencySearchModel, IFranchiseCurrency, FranchiseCurrency>
    {
    }

    /// <summary>Interface for Franchise District workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseDistrictModel,IFranchiseDistrictSearchModel,IFranchiseDistrict,FranchiseDistrict}"/>
    public partial interface IFranchiseDistrictWorkflow
        : IWorkflowBase<IFranchiseDistrictModel, IFranchiseDistrictSearchModel, IFranchiseDistrict, FranchiseDistrict>
    {
    }

    /// <summary>Interface for Franchise Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IFranchiseImageModel,IFranchiseImageSearchModel,IFranchiseImage,FranchiseImage}"/>
    public partial interface IFranchiseImageWorkflow
        : INameableWorkflowBase<IFranchiseImageModel, IFranchiseImageSearchModel, IFranchiseImage, FranchiseImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IFranchiseImageType,FranchiseImageType}"/>
    public partial interface IFranchiseImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IFranchiseImageType, FranchiseImageType>
    {
    }

    /// <summary>Interface for Franchise Inventory Location workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseInventoryLocationModel,IFranchiseInventoryLocationSearchModel,IFranchiseInventoryLocation,FranchiseInventoryLocation}"/>
    public partial interface IFranchiseInventoryLocationWorkflow
        : IWorkflowBase<IFranchiseInventoryLocationModel, IFranchiseInventoryLocationSearchModel, IFranchiseInventoryLocation, FranchiseInventoryLocation>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IFranchiseInventoryLocationType,FranchiseInventoryLocationType}"/>
    public partial interface IFranchiseInventoryLocationTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IFranchiseInventoryLocationType, FranchiseInventoryLocationType>
    {
    }

    /// <summary>Interface for Franchise Language workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseLanguageModel,IFranchiseLanguageSearchModel,IFranchiseLanguage,FranchiseLanguage}"/>
    public partial interface IFranchiseLanguageWorkflow
        : IWorkflowBase<IFranchiseLanguageModel, IFranchiseLanguageSearchModel, IFranchiseLanguage, FranchiseLanguage>
    {
    }

    /// <summary>Interface for Franchise Manufacturer workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseManufacturerModel,IFranchiseManufacturerSearchModel,IFranchiseManufacturer,FranchiseManufacturer}"/>
    public partial interface IFranchiseManufacturerWorkflow
        : IWorkflowBase<IFranchiseManufacturerModel, IFranchiseManufacturerSearchModel, IFranchiseManufacturer, FranchiseManufacturer>
    {
    }

    /// <summary>Interface for Franchise Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseProductModel,IFranchiseProductSearchModel,IFranchiseProduct,FranchiseProduct}"/>
    public partial interface IFranchiseProductWorkflow
        : IWorkflowBase<IFranchiseProductModel, IFranchiseProductSearchModel, IFranchiseProduct, FranchiseProduct>
    {
    }

    /// <summary>Interface for Franchise Region workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseRegionModel,IFranchiseRegionSearchModel,IFranchiseRegion,FranchiseRegion}"/>
    public partial interface IFranchiseRegionWorkflow
        : IWorkflowBase<IFranchiseRegionModel, IFranchiseRegionSearchModel, IFranchiseRegion, FranchiseRegion>
    {
    }

    /// <summary>Interface for Franchise Site Domain workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseSiteDomainModel,IFranchiseSiteDomainSearchModel,IFranchiseSiteDomain,FranchiseSiteDomain}"/>
    public partial interface IFranchiseSiteDomainWorkflow
        : IWorkflowBase<IFranchiseSiteDomainModel, IFranchiseSiteDomainSearchModel, IFranchiseSiteDomain, FranchiseSiteDomain>
    {
    }

    /// <summary>Interface for Franchise Store workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseStoreModel,IFranchiseStoreSearchModel,IFranchiseStore,FranchiseStore}"/>
    public partial interface IFranchiseStoreWorkflow
        : IWorkflowBase<IFranchiseStoreModel, IFranchiseStoreSearchModel, IFranchiseStore, FranchiseStore>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IFranchiseType,FranchiseType}"/>
    public partial interface IFranchiseTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IFranchiseType, FranchiseType>
    {
    }

    /// <summary>Interface for Franchise User workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseUserModel,IFranchiseUserSearchModel,IFranchiseUser,FranchiseUser}"/>
    public partial interface IFranchiseUserWorkflow
        : IWorkflowBase<IFranchiseUserModel, IFranchiseUserSearchModel, IFranchiseUser, FranchiseUser>
    {
    }

    /// <summary>Interface for Franchise Vendor workflow.</summary>
    /// <seealso cref="IWorkflowBase{IFranchiseVendorModel,IFranchiseVendorSearchModel,IFranchiseVendor,FranchiseVendor}"/>
    public partial interface IFranchiseVendorWorkflow
        : IWorkflowBase<IFranchiseVendorModel, IFranchiseVendorSearchModel, IFranchiseVendor, FranchiseVendor>
    {
    }
    #endregion
    #region Geography
    /// <summary>Interface for Address workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAddressModel,IAddressSearchModel,IAddress,Address}"/>
    public partial interface IAddressWorkflow
        : IWorkflowBase<IAddressModel, IAddressSearchModel, IAddress, Address>
    {
    }

    /// <summary>Interface for Country workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICountryModel,ICountrySearchModel,ICountry,Country}"/>
    public partial interface ICountryWorkflow
        : INameableWorkflowBase<ICountryModel, ICountrySearchModel, ICountry, Country>
    {
    }

    /// <summary>Interface for Country Currency workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICountryCurrencyModel,ICountryCurrencySearchModel,ICountryCurrency,CountryCurrency}"/>
    public partial interface ICountryCurrencyWorkflow
        : IWorkflowBase<ICountryCurrencyModel, ICountryCurrencySearchModel, ICountryCurrency, CountryCurrency>
    {
    }

    /// <summary>Interface for Country Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICountryImageModel,ICountryImageSearchModel,ICountryImage,CountryImage}"/>
    public partial interface ICountryImageWorkflow
        : INameableWorkflowBase<ICountryImageModel, ICountryImageSearchModel, ICountryImage, CountryImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICountryImageType,CountryImageType}"/>
    public partial interface ICountryImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICountryImageType, CountryImageType>
    {
    }

    /// <summary>Interface for Country Language workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICountryLanguageModel,ICountryLanguageSearchModel,ICountryLanguage,CountryLanguage}"/>
    public partial interface ICountryLanguageWorkflow
        : IWorkflowBase<ICountryLanguageModel, ICountryLanguageSearchModel, ICountryLanguage, CountryLanguage>
    {
    }

    /// <summary>Interface for District workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IDistrictModel,IDistrictSearchModel,IDistrict,District}"/>
    public partial interface IDistrictWorkflow
        : INameableWorkflowBase<IDistrictModel, IDistrictSearchModel, IDistrict, District>
    {
    }

    /// <summary>Interface for District Currency workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDistrictCurrencyModel,IDistrictCurrencySearchModel,IDistrictCurrency,DistrictCurrency}"/>
    public partial interface IDistrictCurrencyWorkflow
        : IWorkflowBase<IDistrictCurrencyModel, IDistrictCurrencySearchModel, IDistrictCurrency, DistrictCurrency>
    {
    }

    /// <summary>Interface for District Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IDistrictImageModel,IDistrictImageSearchModel,IDistrictImage,DistrictImage}"/>
    public partial interface IDistrictImageWorkflow
        : INameableWorkflowBase<IDistrictImageModel, IDistrictImageSearchModel, IDistrictImage, DistrictImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IDistrictImageType,DistrictImageType}"/>
    public partial interface IDistrictImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IDistrictImageType, DistrictImageType>
    {
    }

    /// <summary>Interface for District Language workflow.</summary>
    /// <seealso cref="IWorkflowBase{IDistrictLanguageModel,IDistrictLanguageSearchModel,IDistrictLanguage,DistrictLanguage}"/>
    public partial interface IDistrictLanguageWorkflow
        : IWorkflowBase<IDistrictLanguageModel, IDistrictLanguageSearchModel, IDistrictLanguage, DistrictLanguage>
    {
    }

    /// <summary>Interface for Historical Address Validation workflow.</summary>
    /// <seealso cref="IWorkflowBase{IHistoricalAddressValidationModel,IHistoricalAddressValidationSearchModel,IHistoricalAddressValidation,HistoricalAddressValidation}"/>
    public partial interface IHistoricalAddressValidationWorkflow
        : IWorkflowBase<IHistoricalAddressValidationModel, IHistoricalAddressValidationSearchModel, IHistoricalAddressValidation, HistoricalAddressValidation>
    {
    }

    /// <summary>Interface for Phone Prefix Lookup workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPhonePrefixLookupModel,IPhonePrefixLookupSearchModel,IPhonePrefixLookup,PhonePrefixLookup}"/>
    public partial interface IPhonePrefixLookupWorkflow
        : IWorkflowBase<IPhonePrefixLookupModel, IPhonePrefixLookupSearchModel, IPhonePrefixLookup, PhonePrefixLookup>
    {
    }

    /// <summary>Interface for Region workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IRegionModel,IRegionSearchModel,IRegion,Region}"/>
    public partial interface IRegionWorkflow
        : INameableWorkflowBase<IRegionModel, IRegionSearchModel, IRegion, Region>
    {
    }

    /// <summary>Interface for Region Currency workflow.</summary>
    /// <seealso cref="IWorkflowBase{IRegionCurrencyModel,IRegionCurrencySearchModel,IRegionCurrency,RegionCurrency}"/>
    public partial interface IRegionCurrencyWorkflow
        : IWorkflowBase<IRegionCurrencyModel, IRegionCurrencySearchModel, IRegionCurrency, RegionCurrency>
    {
    }

    /// <summary>Interface for Region Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IRegionImageModel,IRegionImageSearchModel,IRegionImage,RegionImage}"/>
    public partial interface IRegionImageWorkflow
        : INameableWorkflowBase<IRegionImageModel, IRegionImageSearchModel, IRegionImage, RegionImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IRegionImageType,RegionImageType}"/>
    public partial interface IRegionImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IRegionImageType, RegionImageType>
    {
    }

    /// <summary>Interface for Region Language workflow.</summary>
    /// <seealso cref="IWorkflowBase{IRegionLanguageModel,IRegionLanguageSearchModel,IRegionLanguage,RegionLanguage}"/>
    public partial interface IRegionLanguageWorkflow
        : IWorkflowBase<IRegionLanguageModel, IRegionLanguageSearchModel, IRegionLanguage, RegionLanguage>
    {
    }

    /// <summary>Interface for Zip Code workflow.</summary>
    /// <seealso cref="IWorkflowBase{IZipCodeModel,IZipCodeSearchModel,IZipCode,ZipCode}"/>
    public partial interface IZipCodeWorkflow
        : IWorkflowBase<IZipCodeModel, IZipCodeSearchModel, IZipCode, ZipCode>
    {
    }
    #endregion
    #region Globalization
    /// <summary>Interface for Language workflow.</summary>
    /// <seealso cref="IWorkflowBase{ILanguageModel,ILanguageSearchModel,ILanguage,Language}"/>
    public partial interface ILanguageWorkflow
        : IWorkflowBase<ILanguageModel, ILanguageSearchModel, ILanguage, Language>
    {
    }

    /// <summary>Interface for Language Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ILanguageImageModel,ILanguageImageSearchModel,ILanguageImage,LanguageImage}"/>
    public partial interface ILanguageImageWorkflow
        : INameableWorkflowBase<ILanguageImageModel, ILanguageImageSearchModel, ILanguageImage, LanguageImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ILanguageImageType,LanguageImageType}"/>
    public partial interface ILanguageImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ILanguageImageType, LanguageImageType>
    {
    }

    /// <summary>Interface for Ui Key workflow.</summary>
    /// <seealso cref="IWorkflowBase{IUiKeyModel,IUiKeySearchModel,IUiKey,UiKey}"/>
    public partial interface IUiKeyWorkflow
        : IWorkflowBase<IUiKeyModel, IUiKeySearchModel, IUiKey, UiKey>
    {
    }

    /// <summary>Interface for Ui Translation workflow.</summary>
    /// <seealso cref="IWorkflowBase{IUiTranslationModel,IUiTranslationSearchModel,IUiTranslation,UiTranslation}"/>
    public partial interface IUiTranslationWorkflow
        : IWorkflowBase<IUiTranslationModel, IUiTranslationSearchModel, IUiTranslation, UiTranslation>
    {
    }
    #endregion
    #region Groups
    /// <summary>Interface for Group workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IGroupModel,IGroupSearchModel,IGroup,Group}"/>
    public partial interface IGroupWorkflow
        : INameableWorkflowBase<IGroupModel, IGroupSearchModel, IGroup, Group>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IGroupStatus,GroupStatus}"/>
    public partial interface IGroupStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IGroupStatus, GroupStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IGroupType,GroupType}"/>
    public partial interface IGroupTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IGroupType, GroupType>
    {
    }

    /// <summary>Interface for Group User workflow.</summary>
    /// <seealso cref="IWorkflowBase{IGroupUserModel,IGroupUserSearchModel,IGroupUser,GroupUser}"/>
    public partial interface IGroupUserWorkflow
        : IWorkflowBase<IGroupUserModel, IGroupUserSearchModel, IGroupUser, GroupUser>
    {
    }
    #endregion
    #region Hangfire
    /// <summary>Interface for Scheduled Job Configuration workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IScheduledJobConfigurationModel,IScheduledJobConfigurationSearchModel,IScheduledJobConfiguration,ScheduledJobConfiguration}"/>
    public partial interface IScheduledJobConfigurationWorkflow
        : INameableWorkflowBase<IScheduledJobConfigurationModel, IScheduledJobConfigurationSearchModel, IScheduledJobConfiguration, ScheduledJobConfiguration>
    {
    }

    /// <summary>Interface for Scheduled Job Configuration Setting workflow.</summary>
    /// <seealso cref="IWorkflowBase{IScheduledJobConfigurationSettingModel,IScheduledJobConfigurationSettingSearchModel,IScheduledJobConfigurationSetting,ScheduledJobConfigurationSetting}"/>
    public partial interface IScheduledJobConfigurationSettingWorkflow
        : IWorkflowBase<IScheduledJobConfigurationSettingModel, IScheduledJobConfigurationSettingSearchModel, IScheduledJobConfigurationSetting, ScheduledJobConfigurationSetting>
    {
    }
    #endregion
    #region Inventory
    /// <summary>Interface for Inventory Location workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IInventoryLocationModel,IInventoryLocationSearchModel,IInventoryLocation,InventoryLocation}"/>
    public partial interface IInventoryLocationWorkflow
        : INameableWorkflowBase<IInventoryLocationModel, IInventoryLocationSearchModel, IInventoryLocation, InventoryLocation>
    {
    }

    /// <summary>Interface for Inventory Location Region workflow.</summary>
    /// <seealso cref="IWorkflowBase{IInventoryLocationRegionModel,IInventoryLocationRegionSearchModel,IInventoryLocationRegion,InventoryLocationRegion}"/>
    public partial interface IInventoryLocationRegionWorkflow
        : IWorkflowBase<IInventoryLocationRegionModel, IInventoryLocationRegionSearchModel, IInventoryLocationRegion, InventoryLocationRegion>
    {
    }

    /// <summary>Interface for Inventory Location Section workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IInventoryLocationSectionModel,IInventoryLocationSectionSearchModel,IInventoryLocationSection,InventoryLocationSection}"/>
    public partial interface IInventoryLocationSectionWorkflow
        : INameableWorkflowBase<IInventoryLocationSectionModel, IInventoryLocationSectionSearchModel, IInventoryLocationSection, InventoryLocationSection>
    {
    }

    /// <summary>Interface for Inventory Location User workflow.</summary>
    /// <seealso cref="IWorkflowBase{IInventoryLocationUserModel,IInventoryLocationUserSearchModel,IInventoryLocationUser,InventoryLocationUser}"/>
    public partial interface IInventoryLocationUserWorkflow
        : IWorkflowBase<IInventoryLocationUserModel, IInventoryLocationUserSearchModel, IInventoryLocationUser, InventoryLocationUser>
    {
    }
    #endregion
    #region Invoicing
    /// <summary>Interface for Sales Invoice workflow.</summary>
    /// <seealso cref="ISalesCollectionWorkflowBase{ISalesInvoiceModel,ISalesInvoiceSearchModel,ISalesInvoice,SalesInvoice,SalesInvoiceStatus,SalesInvoiceType,ISalesInvoiceItem,SalesInvoiceItem,AppliedSalesInvoiceDiscount,SalesInvoiceState,SalesInvoiceFile,SalesInvoiceContact,AppliedSalesInvoiceItemDiscount,SalesInvoiceItemTarget,SalesInvoiceEvent,SalesInvoiceEventType}"/>
    public partial interface ISalesInvoiceWorkflow
        : ISalesCollectionWorkflowBase<ISalesInvoiceModel,
            ISalesInvoiceSearchModel,
            ISalesInvoice,
            SalesInvoice,
            SalesInvoiceStatus,
            SalesInvoiceType,
            ISalesInvoiceItem,
            SalesInvoiceItem,
            AppliedSalesInvoiceDiscount,
            SalesInvoiceState,
            SalesInvoiceFile,
            SalesInvoiceContact,
            AppliedSalesInvoiceItemDiscount,
            SalesInvoiceItemTarget,
            SalesInvoiceEvent,
            SalesInvoiceEventType>
    {
    }

    /// <summary>Interface for Sales Invoice Contact workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesInvoiceContactModel,ISalesInvoiceContactSearchModel,ISalesInvoiceContact,SalesInvoiceContact}"/>
    public partial interface ISalesInvoiceContactWorkflow
        : IWorkflowBase<ISalesInvoiceContactModel, ISalesInvoiceContactSearchModel, ISalesInvoiceContact, SalesInvoiceContact>
    {
    }

    /// <summary>Interface for Sales Invoice Event workflow.</summary>
    /// <seealso cref="ISalesEventWorkflowBase{ISalesInvoiceEventModel, ISalesInvoiceEventSearchModel, ISalesInvoiceEvent, SalesInvoiceEvent, SalesInvoiceEventType, SalesInvoice}"/>
    public partial interface ISalesInvoiceEventWorkflow
        : ISalesEventWorkflowBase<ISalesInvoiceEventModel, ISalesInvoiceEventSearchModel, ISalesInvoiceEvent, SalesInvoiceEvent, SalesInvoiceEventType, SalesInvoice>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesInvoiceEventType,SalesInvoiceEventType}"/>
    public partial interface ISalesInvoiceEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesInvoiceEventType, SalesInvoiceEventType>
    {
    }

    /// <summary>Interface for Sales Invoice File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesInvoiceFileModel,ISalesInvoiceFileSearchModel,ISalesInvoiceFile,SalesInvoiceFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ISalesInvoiceFileModel}"/>
    public partial interface ISalesInvoiceFileWorkflow
        : INameableWorkflowBase<ISalesInvoiceFileModel, ISalesInvoiceFileSearchModel, ISalesInvoiceFile, SalesInvoiceFile>
        , IWorkflowBaseHasGetBySeoUrl<ISalesInvoiceFileModel>
    {
    }

    /// <summary>Interface for Sales Item Base workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesItemBaseModel,ISalesItemBaseSearchModel,ISalesInvoiceItem,SalesInvoiceItem}"/>
    public partial interface ISalesInvoiceItemWorkflow
        : INameableWorkflowBase<ISalesItemBaseModel<IAppliedSalesInvoiceItemDiscountModel>, ISalesItemBaseSearchModel, ISalesInvoiceItem, SalesInvoiceItem>
    {
    }

    /// <summary>Interface for Sales Item Target Base workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesItemTargetBaseModel,ISalesItemTargetBaseSearchModel,ISalesInvoiceItemTarget,SalesInvoiceItemTarget}"/>
    public partial interface ISalesInvoiceItemTargetWorkflow
        : IWorkflowBase<ISalesItemTargetBaseModel, ISalesItemTargetBaseSearchModel, ISalesInvoiceItemTarget, SalesInvoiceItemTarget>
    {
    }

    /// <summary>Interface for State workflow.</summary>
    /// <seealso cref="IStateableWorkflowBase{IStateModel,IStateSearchModel,ISalesInvoiceState,SalesInvoiceState}"/>
    public partial interface ISalesInvoiceStateWorkflow
        : IStateableWorkflowBase<IStateModel, IStateSearchModel, ISalesInvoiceState, SalesInvoiceState>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ISalesInvoiceStatus,SalesInvoiceStatus}"/>
    public partial interface ISalesInvoiceStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ISalesInvoiceStatus, SalesInvoiceStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesInvoiceType,SalesInvoiceType}"/>
    public partial interface ISalesInvoiceTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesInvoiceType, SalesInvoiceType>
    {
    }

    /// <summary>Interface for Sales Order Sales Invoice workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesOrderSalesInvoiceModel,ISalesOrderSalesInvoiceSearchModel,ISalesOrderSalesInvoice,SalesOrderSalesInvoice}"/>
    public partial interface ISalesOrderSalesInvoiceWorkflow
        : IWorkflowBase<ISalesOrderSalesInvoiceModel, ISalesOrderSalesInvoiceSearchModel, ISalesOrderSalesInvoice, SalesOrderSalesInvoice>
    {
    }
    #endregion
    #region Manufacturers
    /// <summary>Interface for Manufacturer workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IManufacturerModel,IManufacturerSearchModel,IManufacturer,Manufacturer}"/>
    public partial interface IManufacturerWorkflow
        : INameableWorkflowBase<IManufacturerModel, IManufacturerSearchModel, IManufacturer, Manufacturer>
    {
    }

    /// <summary>Interface for Manufacturer Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IManufacturerImageModel,IManufacturerImageSearchModel,IManufacturerImage,ManufacturerImage}"/>
    public partial interface IManufacturerImageWorkflow
        : INameableWorkflowBase<IManufacturerImageModel, IManufacturerImageSearchModel, IManufacturerImage, ManufacturerImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IManufacturerImageType,ManufacturerImageType}"/>
    public partial interface IManufacturerImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IManufacturerImageType, ManufacturerImageType>
    {
    }

    /// <summary>Interface for Manufacturer Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{IManufacturerProductModel,IManufacturerProductSearchModel,IManufacturerProduct,ManufacturerProduct}"/>
    public partial interface IManufacturerProductWorkflow
        : IWorkflowBase<IManufacturerProductModel, IManufacturerProductSearchModel, IManufacturerProduct, ManufacturerProduct>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IManufacturerType,ManufacturerType}"/>
    public partial interface IManufacturerTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IManufacturerType, ManufacturerType>
    {
    }
    #endregion
    #region Media
    /// <summary>Interface for Stored File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IStoredFileModel,IStoredFileSearchModel,IStoredFile,StoredFile}"/>
    public partial interface IStoredFileWorkflow
        : INameableWorkflowBase<IStoredFileModel, IStoredFileSearchModel, IStoredFile, StoredFile>
    {
    }
    #endregion
    #region Messaging
    /// <summary>Interface for Conversation workflow.</summary>
    /// <seealso cref="IWorkflowBase{IConversationModel,IConversationSearchModel,IConversation,Conversation}"/>
    public partial interface IConversationWorkflow
        : IWorkflowBase<IConversationModel, IConversationSearchModel, IConversation, Conversation>
    {
    }

    /// <summary>Interface for Conversation User workflow.</summary>
    /// <seealso cref="IWorkflowBase{IConversationUserModel,IConversationUserSearchModel,IConversationUser,ConversationUser}"/>
    public partial interface IConversationUserWorkflow
        : IWorkflowBase<IConversationUserModel, IConversationUserSearchModel, IConversationUser, ConversationUser>
    {
    }

    /// <summary>Interface for Email Queue workflow.</summary>
    /// <seealso cref="IWorkflowBase{IEmailQueueModel,IEmailQueueSearchModel,IEmailQueue,EmailQueue}"/>
    public partial interface IEmailQueueWorkflow
        : IWorkflowBase<IEmailQueueModel, IEmailQueueSearchModel, IEmailQueue, EmailQueue>
    {
    }

    /// <summary>Interface for Email Queue Attachment workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IEmailQueueAttachmentModel,IEmailQueueAttachmentSearchModel,IEmailQueueAttachment,EmailQueueAttachment}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{IEmailQueueAttachmentModel}"/>
    public partial interface IEmailQueueAttachmentWorkflow
        : INameableWorkflowBase<IEmailQueueAttachmentModel, IEmailQueueAttachmentSearchModel, IEmailQueueAttachment, EmailQueueAttachment>
        , IWorkflowBaseHasGetBySeoUrl<IEmailQueueAttachmentModel>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IEmailStatus,EmailStatus}"/>
    public partial interface IEmailStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IEmailStatus, EmailStatus>
    {
    }

    /// <summary>Interface for Email Template workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IEmailTemplateModel,IEmailTemplateSearchModel,IEmailTemplate,EmailTemplate}"/>
    public partial interface IEmailTemplateWorkflow
        : INameableWorkflowBase<IEmailTemplateModel, IEmailTemplateSearchModel, IEmailTemplate, EmailTemplate>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IEmailType,EmailType}"/>
    public partial interface IEmailTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IEmailType, EmailType>
    {
    }

    /// <summary>Interface for Message workflow.</summary>
    /// <seealso cref="IWorkflowBase{IMessageModel,IMessageSearchModel,IMessage,Message}"/>
    public partial interface IMessageWorkflow
        : IWorkflowBase<IMessageModel, IMessageSearchModel, IMessage, Message>
    {
    }

    /// <summary>Interface for Message Attachment workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IMessageAttachmentModel,IMessageAttachmentSearchModel,IMessageAttachment,MessageAttachment}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{IMessageAttachmentModel}"/>
    public partial interface IMessageAttachmentWorkflow
        : INameableWorkflowBase<IMessageAttachmentModel, IMessageAttachmentSearchModel, IMessageAttachment, MessageAttachment>
        , IWorkflowBaseHasGetBySeoUrl<IMessageAttachmentModel>
    {
    }

    /// <summary>Interface for Message Recipient workflow.</summary>
    /// <seealso cref="IWorkflowBase{IMessageRecipientModel,IMessageRecipientSearchModel,IMessageRecipient,MessageRecipient}"/>
    public partial interface IMessageRecipientWorkflow
        : IWorkflowBase<IMessageRecipientModel, IMessageRecipientSearchModel, IMessageRecipient, MessageRecipient>
    {
    }

    /// <summary>Interface for Product Notification workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IProductNotificationModel,IProductNotificationSearchModel,IProductNotification,ProductNotification}"/>
    public partial interface IProductNotificationWorkflow
        : INameableWorkflowBase<IProductNotificationModel, IProductNotificationSearchModel, IProductNotification, ProductNotification>
    {
    }
    #endregion
    #region Ordering
    /// <summary>Interface for Sales Order workflow.</summary>
    /// <seealso cref="ISalesCollectionWorkflowBase{ISalesOrderModel,ISalesOrderSearchModel,ISalesOrder,SalesOrder,SalesOrderStatus,SalesOrderType,ISalesOrderItem,SalesOrderItem,AppliedSalesOrderDiscount,SalesOrderState,SalesOrderFile,SalesOrderContact,AppliedSalesOrderItemDiscount,SalesOrderItemTarget,SalesOrderEvent,SalesOrderEventType}"/>
    public partial interface ISalesOrderWorkflow
        : ISalesCollectionWorkflowBase<ISalesOrderModel,
            ISalesOrderSearchModel,
            ISalesOrder,
            SalesOrder,
            SalesOrderStatus,
            SalesOrderType,
            ISalesOrderItem,
            SalesOrderItem,
            AppliedSalesOrderDiscount,
            SalesOrderState,
            SalesOrderFile,
            SalesOrderContact,
            AppliedSalesOrderItemDiscount,
            SalesOrderItemTarget,
            SalesOrderEvent,
            SalesOrderEventType>
    {
    }

    /// <summary>Interface for Sales Order Contact workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesOrderContactModel,ISalesOrderContactSearchModel,ISalesOrderContact,SalesOrderContact}"/>
    public partial interface ISalesOrderContactWorkflow
        : IWorkflowBase<ISalesOrderContactModel, ISalesOrderContactSearchModel, ISalesOrderContact, SalesOrderContact>
    {
    }

    /// <summary>Interface for Sales Order Event workflow.</summary>
    /// <seealso cref="ISalesEventWorkflowBase{ISalesOrderEventModel, ISalesOrderEventSearchModel, ISalesOrderEvent, SalesOrderEvent, SalesOrderEventType, SalesOrder}"/>
    public partial interface ISalesOrderEventWorkflow
        : ISalesEventWorkflowBase<ISalesOrderEventModel, ISalesOrderEventSearchModel, ISalesOrderEvent, SalesOrderEvent, SalesOrderEventType, SalesOrder>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesOrderEventType,SalesOrderEventType}"/>
    public partial interface ISalesOrderEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesOrderEventType, SalesOrderEventType>
    {
    }

    /// <summary>Interface for Sales Order File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesOrderFileModel,ISalesOrderFileSearchModel,ISalesOrderFile,SalesOrderFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ISalesOrderFileModel}"/>
    public partial interface ISalesOrderFileWorkflow
        : INameableWorkflowBase<ISalesOrderFileModel, ISalesOrderFileSearchModel, ISalesOrderFile, SalesOrderFile>
        , IWorkflowBaseHasGetBySeoUrl<ISalesOrderFileModel>
    {
    }

    /// <summary>Interface for Sales Item Base workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesItemBaseModel,ISalesItemBaseSearchModel,ISalesOrderItem,SalesOrderItem}"/>
    public partial interface ISalesOrderItemWorkflow
        : INameableWorkflowBase<ISalesItemBaseModel<IAppliedSalesOrderItemDiscountModel>, ISalesItemBaseSearchModel, ISalesOrderItem, SalesOrderItem>
    {
    }

    /// <summary>Interface for Sales Item Target Base workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesItemTargetBaseModel,ISalesItemTargetBaseSearchModel,ISalesOrderItemTarget,SalesOrderItemTarget}"/>
    public partial interface ISalesOrderItemTargetWorkflow
        : IWorkflowBase<ISalesItemTargetBaseModel, ISalesItemTargetBaseSearchModel, ISalesOrderItemTarget, SalesOrderItemTarget>
    {
    }

    /// <summary>Interface for State workflow.</summary>
    /// <seealso cref="IStateableWorkflowBase{IStateModel,IStateSearchModel,ISalesOrderState,SalesOrderState}"/>
    public partial interface ISalesOrderStateWorkflow
        : IStateableWorkflowBase<IStateModel, IStateSearchModel, ISalesOrderState, SalesOrderState>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ISalesOrderStatus,SalesOrderStatus}"/>
    public partial interface ISalesOrderStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ISalesOrderStatus, SalesOrderStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesOrderType,SalesOrderType}"/>
    public partial interface ISalesOrderTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesOrderType, SalesOrderType>
    {
    }
    #endregion
    #region Payments
    /// <summary>Interface for Membership workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IMembershipModel,IMembershipSearchModel,IMembership,Membership}"/>
    public partial interface IMembershipWorkflow
        : ITypableWorkflowBase<IMembershipModel, IMembershipSearchModel, IMembership, Membership>
    {
    }

    /// <summary>Interface for Membership Ad Zone Access workflow.</summary>
    /// <seealso cref="IWorkflowBase{IMembershipAdZoneAccessModel,IMembershipAdZoneAccessSearchModel,IMembershipAdZoneAccess,MembershipAdZoneAccess}"/>
    public partial interface IMembershipAdZoneAccessWorkflow
        : IWorkflowBase<IMembershipAdZoneAccessModel, IMembershipAdZoneAccessSearchModel, IMembershipAdZoneAccess, MembershipAdZoneAccess>
    {
    }

    /// <summary>Interface for Membership Ad Zone Access By Level workflow.</summary>
    /// <seealso cref="IWorkflowBase{IMembershipAdZoneAccessByLevelModel,IMembershipAdZoneAccessByLevelSearchModel,IMembershipAdZoneAccessByLevel,MembershipAdZoneAccessByLevel}"/>
    public partial interface IMembershipAdZoneAccessByLevelWorkflow
        : IWorkflowBase<IMembershipAdZoneAccessByLevelModel, IMembershipAdZoneAccessByLevelSearchModel, IMembershipAdZoneAccessByLevel, MembershipAdZoneAccessByLevel>
    {
    }

    /// <summary>Interface for Membership Level workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IMembershipLevelModel,IMembershipLevelSearchModel,IMembershipLevel,MembershipLevel}"/>
    public partial interface IMembershipLevelWorkflow
        : ITypableWorkflowBase<IMembershipLevelModel, IMembershipLevelSearchModel, IMembershipLevel, MembershipLevel>
    {
    }

    /// <summary>Interface for Membership Repeat Type workflow.</summary>
    /// <seealso cref="IWorkflowBase{IMembershipRepeatTypeModel,IMembershipRepeatTypeSearchModel,IMembershipRepeatType,MembershipRepeatType}"/>
    public partial interface IMembershipRepeatTypeWorkflow
        : IWorkflowBase<IMembershipRepeatTypeModel, IMembershipRepeatTypeSearchModel, IMembershipRepeatType, MembershipRepeatType>
    {
    }

    /// <summary>Interface for Payment workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPaymentModel,IPaymentSearchModel,IPayment,Payment}"/>
    public partial interface IPaymentWorkflow
        : IWorkflowBase<IPaymentModel, IPaymentSearchModel, IPayment, Payment>
    {
    }

    /// <summary>Interface for Payment Method workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IPaymentMethodModel,IPaymentMethodSearchModel,IPaymentMethod,PaymentMethod}"/>
    public partial interface IPaymentMethodWorkflow
        : INameableWorkflowBase<IPaymentMethodModel, IPaymentMethodSearchModel, IPaymentMethod, PaymentMethod>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IPaymentStatus,PaymentStatus}"/>
    public partial interface IPaymentStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IPaymentStatus, PaymentStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IPaymentType,PaymentType}"/>
    public partial interface IPaymentTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IPaymentType, PaymentType>
    {
    }

    /// <summary>Interface for Repeat Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IRepeatTypeModel,IRepeatTypeSearchModel,IRepeatType,RepeatType}"/>
    public partial interface IRepeatTypeWorkflow
        : ITypableWorkflowBase<IRepeatTypeModel, IRepeatTypeSearchModel, IRepeatType, RepeatType>
    {
    }

    /// <summary>Interface for Sales Invoice Payment workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesInvoicePaymentModel,ISalesInvoicePaymentSearchModel,ISalesInvoicePayment,SalesInvoicePayment}"/>
    public partial interface ISalesInvoicePaymentWorkflow
        : IWorkflowBase<ISalesInvoicePaymentModel, ISalesInvoicePaymentSearchModel, ISalesInvoicePayment, SalesInvoicePayment>
    {
    }

    /// <summary>Interface for Sales Order Payment workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesOrderPaymentModel,ISalesOrderPaymentSearchModel,ISalesOrderPayment,SalesOrderPayment}"/>
    public partial interface ISalesOrderPaymentWorkflow
        : IWorkflowBase<ISalesOrderPaymentModel, ISalesOrderPaymentSearchModel, ISalesOrderPayment, SalesOrderPayment>
    {
    }

    /// <summary>Interface for Sales Return Payment workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesReturnPaymentModel,ISalesReturnPaymentSearchModel,ISalesReturnPayment,SalesReturnPayment}"/>
    public partial interface ISalesReturnPaymentWorkflow
        : IWorkflowBase<ISalesReturnPaymentModel, ISalesReturnPaymentSearchModel, ISalesReturnPayment, SalesReturnPayment>
    {
    }

    /// <summary>Interface for Subscription workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISubscriptionModel,ISubscriptionSearchModel,ISubscription,Subscription}"/>
    public partial interface ISubscriptionWorkflow
        : INameableWorkflowBase<ISubscriptionModel, ISubscriptionSearchModel, ISubscription, Subscription>
    {
    }

    /// <summary>Interface for Subscription History workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISubscriptionHistoryModel,ISubscriptionHistorySearchModel,ISubscriptionHistory,SubscriptionHistory}"/>
    public partial interface ISubscriptionHistoryWorkflow
        : IWorkflowBase<ISubscriptionHistoryModel, ISubscriptionHistorySearchModel, ISubscriptionHistory, SubscriptionHistory>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ISubscriptionStatus,SubscriptionStatus}"/>
    public partial interface ISubscriptionStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ISubscriptionStatus, SubscriptionStatus>
    {
    }

    /// <summary>Interface for Subscription Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ISubscriptionTypeModel,ISubscriptionTypeSearchModel,ISubscriptionType,SubscriptionType}"/>
    public partial interface ISubscriptionTypeWorkflow
        : ITypableWorkflowBase<ISubscriptionTypeModel, ISubscriptionTypeSearchModel, ISubscriptionType, SubscriptionType>
    {
    }

    /// <summary>Interface for Subscription Type Repeat Type workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISubscriptionTypeRepeatTypeModel,ISubscriptionTypeRepeatTypeSearchModel,ISubscriptionTypeRepeatType,SubscriptionTypeRepeatType}"/>
    public partial interface ISubscriptionTypeRepeatTypeWorkflow
        : IWorkflowBase<ISubscriptionTypeRepeatTypeModel, ISubscriptionTypeRepeatTypeSearchModel, ISubscriptionTypeRepeatType, SubscriptionTypeRepeatType>
    {
    }

    /// <summary>Interface for Wallet workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IWalletModel,IWalletSearchModel,IWallet,Wallet}"/>
    public partial interface IWalletWorkflow
        : INameableWorkflowBase<IWalletModel, IWalletSearchModel, IWallet, Wallet>
    {
    }
    #endregion
    #region Pricing
    /// <summary>Interface for Price Point workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IPricePointModel,IPricePointSearchModel,IPricePoint,PricePoint}"/>
    public partial interface IPricePointWorkflow
        : ITypableWorkflowBase<IPricePointModel, IPricePointSearchModel, IPricePoint, PricePoint>
    {
    }

    /// <summary>Interface for Price Rounding workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRoundingModel,IPriceRoundingSearchModel,IPriceRounding,PriceRounding}"/>
    public partial interface IPriceRoundingWorkflow
        : IWorkflowBase<IPriceRoundingModel, IPriceRoundingSearchModel, IPriceRounding, PriceRounding>
    {
    }

    /// <summary>Interface for Price Rule workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IPriceRuleModel,IPriceRuleSearchModel,IPriceRule,PriceRule}"/>
    public partial interface IPriceRuleWorkflow
        : INameableWorkflowBase<IPriceRuleModel, IPriceRuleSearchModel, IPriceRule, PriceRule>
    {
    }

    /// <summary>Interface for Price Rule Account workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleAccountModel,IPriceRuleAccountSearchModel,IPriceRuleAccount,PriceRuleAccount}"/>
    public partial interface IPriceRuleAccountWorkflow
        : IWorkflowBase<IPriceRuleAccountModel, IPriceRuleAccountSearchModel, IPriceRuleAccount, PriceRuleAccount>
    {
    }

    /// <summary>Interface for Price Rule Account Type workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleAccountTypeModel,IPriceRuleAccountTypeSearchModel,IPriceRuleAccountType,PriceRuleAccountType}"/>
    public partial interface IPriceRuleAccountTypeWorkflow
        : IWorkflowBase<IPriceRuleAccountTypeModel, IPriceRuleAccountTypeSearchModel, IPriceRuleAccountType, PriceRuleAccountType>
    {
    }

    /// <summary>Interface for Price Rule Brand workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleBrandModel,IPriceRuleBrandSearchModel,IPriceRuleBrand,PriceRuleBrand}"/>
    public partial interface IPriceRuleBrandWorkflow
        : IWorkflowBase<IPriceRuleBrandModel, IPriceRuleBrandSearchModel, IPriceRuleBrand, PriceRuleBrand>
    {
    }

    /// <summary>Interface for Price Rule Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleCategoryModel,IPriceRuleCategorySearchModel,IPriceRuleCategory,PriceRuleCategory}"/>
    public partial interface IPriceRuleCategoryWorkflow
        : IWorkflowBase<IPriceRuleCategoryModel, IPriceRuleCategorySearchModel, IPriceRuleCategory, PriceRuleCategory>
    {
    }

    /// <summary>Interface for Price Rule Country workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleCountryModel,IPriceRuleCountrySearchModel,IPriceRuleCountry,PriceRuleCountry}"/>
    public partial interface IPriceRuleCountryWorkflow
        : IWorkflowBase<IPriceRuleCountryModel, IPriceRuleCountrySearchModel, IPriceRuleCountry, PriceRuleCountry>
    {
    }

    /// <summary>Interface for Price Rule Franchise workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleFranchiseModel,IPriceRuleFranchiseSearchModel,IPriceRuleFranchise,PriceRuleFranchise}"/>
    public partial interface IPriceRuleFranchiseWorkflow
        : IWorkflowBase<IPriceRuleFranchiseModel, IPriceRuleFranchiseSearchModel, IPriceRuleFranchise, PriceRuleFranchise>
    {
    }

    /// <summary>Interface for Price Rule Manufacturer workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleManufacturerModel,IPriceRuleManufacturerSearchModel,IPriceRuleManufacturer,PriceRuleManufacturer}"/>
    public partial interface IPriceRuleManufacturerWorkflow
        : IWorkflowBase<IPriceRuleManufacturerModel, IPriceRuleManufacturerSearchModel, IPriceRuleManufacturer, PriceRuleManufacturer>
    {
    }

    /// <summary>Interface for Price Rule Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleProductModel,IPriceRuleProductSearchModel,IPriceRuleProduct,PriceRuleProduct}"/>
    public partial interface IPriceRuleProductWorkflow
        : IWorkflowBase<IPriceRuleProductModel, IPriceRuleProductSearchModel, IPriceRuleProduct, PriceRuleProduct>
    {
    }

    /// <summary>Interface for Price Rule Product Type workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleProductTypeModel,IPriceRuleProductTypeSearchModel,IPriceRuleProductType,PriceRuleProductType}"/>
    public partial interface IPriceRuleProductTypeWorkflow
        : IWorkflowBase<IPriceRuleProductTypeModel, IPriceRuleProductTypeSearchModel, IPriceRuleProductType, PriceRuleProductType>
    {
    }

    /// <summary>Interface for Price Rule Store workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleStoreModel,IPriceRuleStoreSearchModel,IPriceRuleStore,PriceRuleStore}"/>
    public partial interface IPriceRuleStoreWorkflow
        : IWorkflowBase<IPriceRuleStoreModel, IPriceRuleStoreSearchModel, IPriceRuleStore, PriceRuleStore>
    {
    }

    /// <summary>Interface for Price Rule User Role workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleUserRoleModel,IPriceRuleUserRoleSearchModel,IPriceRuleUserRole,PriceRuleUserRole}"/>
    public partial interface IPriceRuleUserRoleWorkflow
        : IWorkflowBase<IPriceRuleUserRoleModel, IPriceRuleUserRoleSearchModel, IPriceRuleUserRole, PriceRuleUserRole>
    {
    }

    /// <summary>Interface for Price Rule Vendor workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPriceRuleVendorModel,IPriceRuleVendorSearchModel,IPriceRuleVendor,PriceRuleVendor}"/>
    public partial interface IPriceRuleVendorWorkflow
        : IWorkflowBase<IPriceRuleVendorModel, IPriceRuleVendorSearchModel, IPriceRuleVendor, PriceRuleVendor>
    {
    }
    #endregion
    #region Products
    /// <summary>Interface for Future Import workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IFutureImportModel,IFutureImportSearchModel,IFutureImport,FutureImport}"/>
    public partial interface IFutureImportWorkflow
        : INameableWorkflowBase<IFutureImportModel, IFutureImportSearchModel, IFutureImport, FutureImport>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IFutureImportStatus,FutureImportStatus}"/>
    public partial interface IFutureImportStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IFutureImportStatus, FutureImportStatus>
    {
    }

    /// <summary>Interface for Product workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IProductModel,IProductSearchModel,IProduct,Product}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{IProductModel}"/>
    public partial interface IProductWorkflow
        : INameableWorkflowBase<IProductModel, IProductSearchModel, IProduct, Product>
        , IWorkflowBaseHasGetBySeoUrl<IProductModel>
    {
    }

    /// <summary>Interface for Product Association workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProductAssociationModel,IProductAssociationSearchModel,IProductAssociation,ProductAssociation}"/>
    public partial interface IProductAssociationWorkflow
        : IWorkflowBase<IProductAssociationModel, IProductAssociationSearchModel, IProductAssociation, ProductAssociation>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IProductAssociationType,ProductAssociationType}"/>
    public partial interface IProductAssociationTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IProductAssociationType, ProductAssociationType>
    {
    }

    /// <summary>Interface for Product Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProductCategoryModel,IProductCategorySearchModel,IProductCategory,ProductCategory}"/>
    public partial interface IProductCategoryWorkflow
        : IWorkflowBase<IProductCategoryModel, IProductCategorySearchModel, IProductCategory, ProductCategory>
    {
    }

    /// <summary>Interface for Product Download workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IProductDownloadModel,IProductDownloadSearchModel,IProductDownload,ProductDownload}"/>
    public partial interface IProductDownloadWorkflow
        : INameableWorkflowBase<IProductDownloadModel, IProductDownloadSearchModel, IProductDownload, ProductDownload>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IProductDownloadType,ProductDownloadType}"/>
    public partial interface IProductDownloadTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IProductDownloadType, ProductDownloadType>
    {
    }

    /// <summary>Interface for Product File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IProductFileModel,IProductFileSearchModel,IProductFile,ProductFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{IProductFileModel}"/>
    public partial interface IProductFileWorkflow
        : INameableWorkflowBase<IProductFileModel, IProductFileSearchModel, IProductFile, ProductFile>
        , IWorkflowBaseHasGetBySeoUrl<IProductFileModel>
    {
    }

    /// <summary>Interface for Product Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IProductImageModel,IProductImageSearchModel,IProductImage,ProductImage}"/>
    public partial interface IProductImageWorkflow
        : INameableWorkflowBase<IProductImageModel, IProductImageSearchModel, IProductImage, ProductImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IProductImageType,ProductImageType}"/>
    public partial interface IProductImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IProductImageType, ProductImageType>
    {
    }

    /// <summary>Interface for Product Inventory Location Section workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProductInventoryLocationSectionModel,IProductInventoryLocationSectionSearchModel,IProductInventoryLocationSection,ProductInventoryLocationSection}"/>
    public partial interface IProductInventoryLocationSectionWorkflow
        : IWorkflowBase<IProductInventoryLocationSectionModel, IProductInventoryLocationSectionSearchModel, IProductInventoryLocationSection, ProductInventoryLocationSection>
    {
    }

    /// <summary>Interface for Product Membership Level workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProductMembershipLevelModel,IProductMembershipLevelSearchModel,IProductMembershipLevel,ProductMembershipLevel}"/>
    public partial interface IProductMembershipLevelWorkflow
        : IWorkflowBase<IProductMembershipLevelModel, IProductMembershipLevelSearchModel, IProductMembershipLevel, ProductMembershipLevel>
    {
    }

    /// <summary>Interface for Product Price Point workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProductPricePointModel,IProductPricePointSearchModel,IProductPricePoint,ProductPricePoint}"/>
    public partial interface IProductPricePointWorkflow
        : IWorkflowBase<IProductPricePointModel, IProductPricePointSearchModel, IProductPricePoint, ProductPricePoint>
    {
    }

    /// <summary>Interface for Product Restriction workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProductRestrictionModel,IProductRestrictionSearchModel,IProductRestriction,ProductRestriction}"/>
    public partial interface IProductRestrictionWorkflow
        : IWorkflowBase<IProductRestrictionModel, IProductRestrictionSearchModel, IProductRestriction, ProductRestriction>
    {
    }

    /// <summary>Interface for Product Ship Carrier Method workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProductShipCarrierMethodModel,IProductShipCarrierMethodSearchModel,IProductShipCarrierMethod,ProductShipCarrierMethod}"/>
    public partial interface IProductShipCarrierMethodWorkflow
        : IWorkflowBase<IProductShipCarrierMethodModel, IProductShipCarrierMethodSearchModel, IProductShipCarrierMethod, ProductShipCarrierMethod>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IProductStatus,ProductStatus}"/>
    public partial interface IProductStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IProductStatus, ProductStatus>
    {
    }

    /// <summary>Interface for Product Subscription Type workflow.</summary>
    /// <seealso cref="IWorkflowBase{IProductSubscriptionTypeModel,IProductSubscriptionTypeSearchModel,IProductSubscriptionType,ProductSubscriptionType}"/>
    public partial interface IProductSubscriptionTypeWorkflow
        : IWorkflowBase<IProductSubscriptionTypeModel, IProductSubscriptionTypeSearchModel, IProductSubscriptionType, ProductSubscriptionType>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IProductType,ProductType}"/>
    public partial interface IProductTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IProductType, ProductType>
    {
    }
    #endregion
    #region Purchasing
    /// <summary>Interface for Purchase Order workflow.</summary>
    /// <seealso cref="ISalesCollectionWorkflowBase{IPurchaseOrderModel,IPurchaseOrderSearchModel,IPurchaseOrder,PurchaseOrder,PurchaseOrderStatus,PurchaseOrderType,IPurchaseOrderItem,PurchaseOrderItem,AppliedPurchaseOrderDiscount,PurchaseOrderState,PurchaseOrderFile,PurchaseOrderContact,AppliedPurchaseOrderItemDiscount,PurchaseOrderItemTarget,PurchaseOrderEvent,PurchaseOrderEventType}"/>
    public partial interface IPurchaseOrderWorkflow
        : ISalesCollectionWorkflowBase<IPurchaseOrderModel,
            IPurchaseOrderSearchModel,
            IPurchaseOrder,
            PurchaseOrder,
            PurchaseOrderStatus,
            PurchaseOrderType,
            IPurchaseOrderItem,
            PurchaseOrderItem,
            AppliedPurchaseOrderDiscount,
            PurchaseOrderState,
            PurchaseOrderFile,
            PurchaseOrderContact,
            AppliedPurchaseOrderItemDiscount,
            PurchaseOrderItemTarget,
            PurchaseOrderEvent,
            PurchaseOrderEventType>
    {
    }

    /// <summary>Interface for Purchase Order Contact workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPurchaseOrderContactModel,IPurchaseOrderContactSearchModel,IPurchaseOrderContact,PurchaseOrderContact}"/>
    public partial interface IPurchaseOrderContactWorkflow
        : IWorkflowBase<IPurchaseOrderContactModel, IPurchaseOrderContactSearchModel, IPurchaseOrderContact, PurchaseOrderContact>
    {
    }

    /// <summary>Interface for Purchase Order Event workflow.</summary>
    /// <seealso cref="ISalesEventWorkflowBase{IPurchaseOrderEventModel, IPurchaseOrderEventSearchModel, IPurchaseOrderEvent, PurchaseOrderEvent, PurchaseOrderEventType, PurchaseOrder}"/>
    public partial interface IPurchaseOrderEventWorkflow
        : ISalesEventWorkflowBase<IPurchaseOrderEventModel, IPurchaseOrderEventSearchModel, IPurchaseOrderEvent, PurchaseOrderEvent, PurchaseOrderEventType, PurchaseOrder>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IPurchaseOrderEventType,PurchaseOrderEventType}"/>
    public partial interface IPurchaseOrderEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IPurchaseOrderEventType, PurchaseOrderEventType>
    {
    }

    /// <summary>Interface for Purchase Order File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IPurchaseOrderFileModel,IPurchaseOrderFileSearchModel,IPurchaseOrderFile,PurchaseOrderFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{IPurchaseOrderFileModel}"/>
    public partial interface IPurchaseOrderFileWorkflow
        : INameableWorkflowBase<IPurchaseOrderFileModel, IPurchaseOrderFileSearchModel, IPurchaseOrderFile, PurchaseOrderFile>
        , IWorkflowBaseHasGetBySeoUrl<IPurchaseOrderFileModel>
    {
    }

    /// <summary>Interface for Sales Item Base workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesItemBaseModel,ISalesItemBaseSearchModel,IPurchaseOrderItem,PurchaseOrderItem}"/>
    public partial interface IPurchaseOrderItemWorkflow
        : INameableWorkflowBase<ISalesItemBaseModel<IAppliedPurchaseOrderItemDiscountModel>, ISalesItemBaseSearchModel, IPurchaseOrderItem, PurchaseOrderItem>
    {
    }

    /// <summary>Interface for Sales Item Target Base workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesItemTargetBaseModel,ISalesItemTargetBaseSearchModel,IPurchaseOrderItemTarget,PurchaseOrderItemTarget}"/>
    public partial interface IPurchaseOrderItemTargetWorkflow
        : IWorkflowBase<ISalesItemTargetBaseModel, ISalesItemTargetBaseSearchModel, IPurchaseOrderItemTarget, PurchaseOrderItemTarget>
    {
    }

    /// <summary>Interface for State workflow.</summary>
    /// <seealso cref="IStateableWorkflowBase{IStateModel,IStateSearchModel,IPurchaseOrderState,PurchaseOrderState}"/>
    public partial interface IPurchaseOrderStateWorkflow
        : IStateableWorkflowBase<IStateModel, IStateSearchModel, IPurchaseOrderState, PurchaseOrderState>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IPurchaseOrderStatus,PurchaseOrderStatus}"/>
    public partial interface IPurchaseOrderStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IPurchaseOrderStatus, PurchaseOrderStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IPurchaseOrderType,PurchaseOrderType}"/>
    public partial interface IPurchaseOrderTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IPurchaseOrderType, PurchaseOrderType>
    {
    }

    /// <summary>Interface for Sales Order Purchase Order workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesOrderPurchaseOrderModel,ISalesOrderPurchaseOrderSearchModel,ISalesOrderPurchaseOrder,SalesOrderPurchaseOrder}"/>
    public partial interface ISalesOrderPurchaseOrderWorkflow
        : IWorkflowBase<ISalesOrderPurchaseOrderModel, ISalesOrderPurchaseOrderSearchModel, ISalesOrderPurchaseOrder, SalesOrderPurchaseOrder>
    {
    }
    #endregion
    #region Questionnaire
    /// <summary>Interface for Answer workflow.</summary>
    /// <seealso cref="IWorkflowBase{IAnswerModel,IAnswerSearchModel,IAnswer,Answer}"/>
    public partial interface IAnswerWorkflow
        : IWorkflowBase<IAnswerModel, IAnswerSearchModel, IAnswer, Answer>
    {
    }

    /// <summary>Interface for Question workflow.</summary>
    /// <seealso cref="IWorkflowBase{IQuestionModel,IQuestionSearchModel,IQuestion,Question}"/>
    public partial interface IQuestionWorkflow
        : IWorkflowBase<IQuestionModel, IQuestionSearchModel, IQuestion, Question>
    {
    }

    /// <summary>Interface for Question Option workflow.</summary>
    /// <seealso cref="IWorkflowBase{IQuestionOptionModel,IQuestionOptionSearchModel,IQuestionOption,QuestionOption}"/>
    public partial interface IQuestionOptionWorkflow
        : IWorkflowBase<IQuestionOptionModel, IQuestionOptionSearchModel, IQuestionOption, QuestionOption>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IQuestionType,QuestionType}"/>
    public partial interface IQuestionTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IQuestionType, QuestionType>
    {
    }
    #endregion
    #region Quoting
    /// <summary>Interface for Sales Quote workflow.</summary>
    /// <seealso cref="ISalesCollectionWorkflowBase{ISalesQuoteModel,ISalesQuoteSearchModel,ISalesQuote,SalesQuote,SalesQuoteStatus,SalesQuoteType,ISalesQuoteItem,SalesQuoteItem,AppliedSalesQuoteDiscount,SalesQuoteState,SalesQuoteFile,SalesQuoteContact,AppliedSalesQuoteItemDiscount,SalesQuoteItemTarget,SalesQuoteEvent,SalesQuoteEventType}"/>
    public partial interface ISalesQuoteWorkflow
        : ISalesCollectionWorkflowBase<ISalesQuoteModel,
            ISalesQuoteSearchModel,
            ISalesQuote,
            SalesQuote,
            SalesQuoteStatus,
            SalesQuoteType,
            ISalesQuoteItem,
            SalesQuoteItem,
            AppliedSalesQuoteDiscount,
            SalesQuoteState,
            SalesQuoteFile,
            SalesQuoteContact,
            AppliedSalesQuoteItemDiscount,
            SalesQuoteItemTarget,
            SalesQuoteEvent,
            SalesQuoteEventType>
    {
    }

    /// <summary>Interface for Sales Quote Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesQuoteCategoryModel,ISalesQuoteCategorySearchModel,ISalesQuoteCategory,SalesQuoteCategory}"/>
    public partial interface ISalesQuoteCategoryWorkflow
        : IWorkflowBase<ISalesQuoteCategoryModel, ISalesQuoteCategorySearchModel, ISalesQuoteCategory, SalesQuoteCategory>
    {
    }

    /// <summary>Interface for Sales Quote Contact workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesQuoteContactModel,ISalesQuoteContactSearchModel,ISalesQuoteContact,SalesQuoteContact}"/>
    public partial interface ISalesQuoteContactWorkflow
        : IWorkflowBase<ISalesQuoteContactModel, ISalesQuoteContactSearchModel, ISalesQuoteContact, SalesQuoteContact>
    {
    }

    /// <summary>Interface for Sales Quote Event workflow.</summary>
    /// <seealso cref="ISalesEventWorkflowBase{ISalesQuoteEventModel, ISalesQuoteEventSearchModel, ISalesQuoteEvent, SalesQuoteEvent, SalesQuoteEventType, SalesQuote}"/>
    public partial interface ISalesQuoteEventWorkflow
        : ISalesEventWorkflowBase<ISalesQuoteEventModel, ISalesQuoteEventSearchModel, ISalesQuoteEvent, SalesQuoteEvent, SalesQuoteEventType, SalesQuote>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesQuoteEventType,SalesQuoteEventType}"/>
    public partial interface ISalesQuoteEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesQuoteEventType, SalesQuoteEventType>
    {
    }

    /// <summary>Interface for Sales Quote File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesQuoteFileModel,ISalesQuoteFileSearchModel,ISalesQuoteFile,SalesQuoteFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ISalesQuoteFileModel}"/>
    public partial interface ISalesQuoteFileWorkflow
        : INameableWorkflowBase<ISalesQuoteFileModel, ISalesQuoteFileSearchModel, ISalesQuoteFile, SalesQuoteFile>
        , IWorkflowBaseHasGetBySeoUrl<ISalesQuoteFileModel>
    {
    }

    /// <summary>Interface for Sales Item Base workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesItemBaseModel,ISalesItemBaseSearchModel,ISalesQuoteItem,SalesQuoteItem}"/>
    public partial interface ISalesQuoteItemWorkflow
        : INameableWorkflowBase<ISalesItemBaseModel<IAppliedSalesQuoteItemDiscountModel>, ISalesItemBaseSearchModel, ISalesQuoteItem, SalesQuoteItem>
    {
    }

    /// <summary>Interface for Sales Item Target Base workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesItemTargetBaseModel,ISalesItemTargetBaseSearchModel,ISalesQuoteItemTarget,SalesQuoteItemTarget}"/>
    public partial interface ISalesQuoteItemTargetWorkflow
        : IWorkflowBase<ISalesItemTargetBaseModel, ISalesItemTargetBaseSearchModel, ISalesQuoteItemTarget, SalesQuoteItemTarget>
    {
    }

    /// <summary>Interface for Sales Quote Sales Order workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesQuoteSalesOrderModel,ISalesQuoteSalesOrderSearchModel,ISalesQuoteSalesOrder,SalesQuoteSalesOrder}"/>
    public partial interface ISalesQuoteSalesOrderWorkflow
        : IWorkflowBase<ISalesQuoteSalesOrderModel, ISalesQuoteSalesOrderSearchModel, ISalesQuoteSalesOrder, SalesQuoteSalesOrder>
    {
    }

    /// <summary>Interface for State workflow.</summary>
    /// <seealso cref="IStateableWorkflowBase{IStateModel,IStateSearchModel,ISalesQuoteState,SalesQuoteState}"/>
    public partial interface ISalesQuoteStateWorkflow
        : IStateableWorkflowBase<IStateModel, IStateSearchModel, ISalesQuoteState, SalesQuoteState>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ISalesQuoteStatus,SalesQuoteStatus}"/>
    public partial interface ISalesQuoteStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ISalesQuoteStatus, SalesQuoteStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesQuoteType,SalesQuoteType}"/>
    public partial interface ISalesQuoteTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesQuoteType, SalesQuoteType>
    {
    }
    #endregion
    #region Reporting
    /// <summary>Interface for Report Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{IReportTypeModel,IReportTypeSearchModel,IReportType,ReportType}"/>
    public partial interface IReportTypeWorkflow
        : ITypableWorkflowBase<IReportTypeModel, IReportTypeSearchModel, IReportType, ReportType>
    {
    }
    #endregion
    #region Returning
    /// <summary>Interface for Sales Return workflow.</summary>
    /// <seealso cref="ISalesCollectionWorkflowBase{ISalesReturnModel,ISalesReturnSearchModel,ISalesReturn,SalesReturn,SalesReturnStatus,SalesReturnType,ISalesReturnItem,SalesReturnItem,AppliedSalesReturnDiscount,SalesReturnState,SalesReturnFile,SalesReturnContact,AppliedSalesReturnItemDiscount,SalesReturnItemTarget,SalesReturnEvent,SalesReturnEventType}"/>
    public partial interface ISalesReturnWorkflow
        : ISalesCollectionWorkflowBase<ISalesReturnModel,
            ISalesReturnSearchModel,
            ISalesReturn,
            SalesReturn,
            SalesReturnStatus,
            SalesReturnType,
            ISalesReturnItem,
            SalesReturnItem,
            AppliedSalesReturnDiscount,
            SalesReturnState,
            SalesReturnFile,
            SalesReturnContact,
            AppliedSalesReturnItemDiscount,
            SalesReturnItemTarget,
            SalesReturnEvent,
            SalesReturnEventType>
    {
    }

    /// <summary>Interface for Sales Return Contact workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesReturnContactModel,ISalesReturnContactSearchModel,ISalesReturnContact,SalesReturnContact}"/>
    public partial interface ISalesReturnContactWorkflow
        : IWorkflowBase<ISalesReturnContactModel, ISalesReturnContactSearchModel, ISalesReturnContact, SalesReturnContact>
    {
    }

    /// <summary>Interface for Sales Return Event workflow.</summary>
    /// <seealso cref="ISalesEventWorkflowBase{ISalesReturnEventModel, ISalesReturnEventSearchModel, ISalesReturnEvent, SalesReturnEvent, SalesReturnEventType, SalesReturn}"/>
    public partial interface ISalesReturnEventWorkflow
        : ISalesEventWorkflowBase<ISalesReturnEventModel, ISalesReturnEventSearchModel, ISalesReturnEvent, SalesReturnEvent, SalesReturnEventType, SalesReturn>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesReturnEventType,SalesReturnEventType}"/>
    public partial interface ISalesReturnEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesReturnEventType, SalesReturnEventType>
    {
    }

    /// <summary>Interface for Sales Return File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesReturnFileModel,ISalesReturnFileSearchModel,ISalesReturnFile,SalesReturnFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ISalesReturnFileModel}"/>
    public partial interface ISalesReturnFileWorkflow
        : INameableWorkflowBase<ISalesReturnFileModel, ISalesReturnFileSearchModel, ISalesReturnFile, SalesReturnFile>
        , IWorkflowBaseHasGetBySeoUrl<ISalesReturnFileModel>
    {
    }

    /// <summary>Interface for Sales Item Base workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesItemBaseModel,ISalesItemBaseSearchModel,ISalesReturnItem,SalesReturnItem}"/>
    public partial interface ISalesReturnItemWorkflow
        : INameableWorkflowBase<ISalesItemBaseModel<IAppliedSalesReturnItemDiscountModel>, ISalesItemBaseSearchModel, ISalesReturnItem, SalesReturnItem>
    {
    }

    /// <summary>Interface for Sales Item Target Base workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesItemTargetBaseModel,ISalesItemTargetBaseSearchModel,ISalesReturnItemTarget,SalesReturnItemTarget}"/>
    public partial interface ISalesReturnItemTargetWorkflow
        : IWorkflowBase<ISalesItemTargetBaseModel, ISalesItemTargetBaseSearchModel, ISalesReturnItemTarget, SalesReturnItemTarget>
    {
    }

    /// <summary>Interface for Sales Return Reason workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ISalesReturnReasonModel,ISalesReturnReasonSearchModel,ISalesReturnReason,SalesReturnReason}"/>
    public partial interface ISalesReturnReasonWorkflow
        : ITypableWorkflowBase<ISalesReturnReasonModel, ISalesReturnReasonSearchModel, ISalesReturnReason, SalesReturnReason>
    {
    }

    /// <summary>Interface for Sales Return Sales Order workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesReturnSalesOrderModel,ISalesReturnSalesOrderSearchModel,ISalesReturnSalesOrder,SalesReturnSalesOrder}"/>
    public partial interface ISalesReturnSalesOrderWorkflow
        : IWorkflowBase<ISalesReturnSalesOrderModel, ISalesReturnSalesOrderSearchModel, ISalesReturnSalesOrder, SalesReturnSalesOrder>
    {
    }

    /// <summary>Interface for State workflow.</summary>
    /// <seealso cref="IStateableWorkflowBase{IStateModel,IStateSearchModel,ISalesReturnState,SalesReturnState}"/>
    public partial interface ISalesReturnStateWorkflow
        : IStateableWorkflowBase<IStateModel, IStateSearchModel, ISalesReturnState, SalesReturnState>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ISalesReturnStatus,SalesReturnStatus}"/>
    public partial interface ISalesReturnStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ISalesReturnStatus, SalesReturnStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesReturnType,SalesReturnType}"/>
    public partial interface ISalesReturnTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesReturnType, SalesReturnType>
    {
    }
    #endregion
    #region Reviews
    /// <summary>Interface for Review workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IReviewModel,IReviewSearchModel,IReview,Review}"/>
    public partial interface IReviewWorkflow
        : INameableWorkflowBase<IReviewModel, IReviewSearchModel, IReview, Review>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IReviewType,ReviewType}"/>
    public partial interface IReviewTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IReviewType, ReviewType>
    {
    }
    #endregion
    #region Sales
    /// <summary>Interface for Sales Group workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesGroupModel,ISalesGroupSearchModel,ISalesGroup,SalesGroup}"/>
    public partial interface ISalesGroupWorkflow
        : IWorkflowBase<ISalesGroupModel, ISalesGroupSearchModel, ISalesGroup, SalesGroup>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISalesItemTargetType,SalesItemTargetType}"/>
    public partial interface ISalesItemTargetTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISalesItemTargetType, SalesItemTargetType>
    {
    }
    #endregion
    #region Sampling
    /// <summary>Interface for Sample Request workflow.</summary>
    /// <seealso cref="ISalesCollectionWorkflowBase{ISampleRequestModel,ISampleRequestSearchModel,ISampleRequest,SampleRequest,SampleRequestStatus,SampleRequestType,ISampleRequestItem,SampleRequestItem,AppliedSampleRequestDiscount,SampleRequestState,SampleRequestFile,SampleRequestContact,AppliedSampleRequestItemDiscount,SampleRequestItemTarget,SampleRequestEvent,SampleRequestEventType}"/>
    public partial interface ISampleRequestWorkflow
        : ISalesCollectionWorkflowBase<ISampleRequestModel,
            ISampleRequestSearchModel,
            ISampleRequest,
            SampleRequest,
            SampleRequestStatus,
            SampleRequestType,
            ISampleRequestItem,
            SampleRequestItem,
            AppliedSampleRequestDiscount,
            SampleRequestState,
            SampleRequestFile,
            SampleRequestContact,
            AppliedSampleRequestItemDiscount,
            SampleRequestItemTarget,
            SampleRequestEvent,
            SampleRequestEventType>
    {
    }

    /// <summary>Interface for Sample Request Contact workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISampleRequestContactModel,ISampleRequestContactSearchModel,ISampleRequestContact,SampleRequestContact}"/>
    public partial interface ISampleRequestContactWorkflow
        : IWorkflowBase<ISampleRequestContactModel, ISampleRequestContactSearchModel, ISampleRequestContact, SampleRequestContact>
    {
    }

    /// <summary>Interface for Sample Request Event workflow.</summary>
    /// <seealso cref="ISalesEventWorkflowBase{ISampleRequestEventModel, ISampleRequestEventSearchModel, ISampleRequestEvent, SampleRequestEvent, SampleRequestEventType, SampleRequest}"/>
    public partial interface ISampleRequestEventWorkflow
        : ISalesEventWorkflowBase<ISampleRequestEventModel, ISampleRequestEventSearchModel, ISampleRequestEvent, SampleRequestEvent, SampleRequestEventType, SampleRequest>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISampleRequestEventType,SampleRequestEventType}"/>
    public partial interface ISampleRequestEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISampleRequestEventType, SampleRequestEventType>
    {
    }

    /// <summary>Interface for Sample Request File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISampleRequestFileModel,ISampleRequestFileSearchModel,ISampleRequestFile,SampleRequestFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ISampleRequestFileModel}"/>
    public partial interface ISampleRequestFileWorkflow
        : INameableWorkflowBase<ISampleRequestFileModel, ISampleRequestFileSearchModel, ISampleRequestFile, SampleRequestFile>
        , IWorkflowBaseHasGetBySeoUrl<ISampleRequestFileModel>
    {
    }

    /// <summary>Interface for Sales Item Base workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesItemBaseModel,ISalesItemBaseSearchModel,ISampleRequestItem,SampleRequestItem}"/>
    public partial interface ISampleRequestItemWorkflow
        : INameableWorkflowBase<ISalesItemBaseModel<IAppliedSampleRequestItemDiscountModel>, ISalesItemBaseSearchModel, ISampleRequestItem, SampleRequestItem>
    {
    }

    /// <summary>Interface for Sales Item Target Base workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesItemTargetBaseModel,ISalesItemTargetBaseSearchModel,ISampleRequestItemTarget,SampleRequestItemTarget}"/>
    public partial interface ISampleRequestItemTargetWorkflow
        : IWorkflowBase<ISalesItemTargetBaseModel, ISalesItemTargetBaseSearchModel, ISampleRequestItemTarget, SampleRequestItemTarget>
    {
    }

    /// <summary>Interface for State workflow.</summary>
    /// <seealso cref="IStateableWorkflowBase{IStateModel,IStateSearchModel,ISampleRequestState,SampleRequestState}"/>
    public partial interface ISampleRequestStateWorkflow
        : IStateableWorkflowBase<IStateModel, IStateSearchModel, ISampleRequestState, SampleRequestState>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ISampleRequestStatus,SampleRequestStatus}"/>
    public partial interface ISampleRequestStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ISampleRequestStatus, SampleRequestStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISampleRequestType,SampleRequestType}"/>
    public partial interface ISampleRequestTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISampleRequestType, SampleRequestType>
    {
    }
    #endregion
    #region Scheduling
    /// <summary>Interface for Appointment workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IAppointmentModel,IAppointmentSearchModel,IAppointment,Appointment}"/>
    public partial interface IAppointmentWorkflow
        : INameableWorkflowBase<IAppointmentModel, IAppointmentSearchModel, IAppointment, Appointment>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IAppointmentStatus,AppointmentStatus}"/>
    public partial interface IAppointmentStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IAppointmentStatus, AppointmentStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IAppointmentType,AppointmentType}"/>
    public partial interface IAppointmentTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IAppointmentType, AppointmentType>
    {
    }

    /// <summary>Interface for Calendar workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICalendarModel,ICalendarSearchModel,ICalendar,Calendar}"/>
    public partial interface ICalendarWorkflow
        : IWorkflowBase<ICalendarModel, ICalendarSearchModel, ICalendar, Calendar>
    {
    }

    /// <summary>Interface for Calendar Appointment workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICalendarAppointmentModel,ICalendarAppointmentSearchModel,ICalendarAppointment,CalendarAppointment}"/>
    public partial interface ICalendarAppointmentWorkflow
        : IWorkflowBase<ICalendarAppointmentModel, ICalendarAppointmentSearchModel, ICalendarAppointment, CalendarAppointment>
    {
    }
    #endregion
    #region Scouting
    /// <summary>Interface for Scout workflow.</summary>
    /// <seealso cref="IWorkflowBase{IScoutModel,IScoutSearchModel,IScout,Scout}"/>
    public partial interface IScoutWorkflow
        : IWorkflowBase<IScoutModel, IScoutSearchModel, IScout, Scout>
    {
    }

    /// <summary>Interface for Scout Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IScoutCategoryModel,IScoutCategorySearchModel,IScoutCategory,ScoutCategory}"/>
    public partial interface IScoutCategoryWorkflow
        : IWorkflowBase<IScoutCategoryModel, IScoutCategorySearchModel, IScoutCategory, ScoutCategory>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IScoutCategoryType,ScoutCategoryType}"/>
    public partial interface IScoutCategoryTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IScoutCategoryType, ScoutCategoryType>
    {
    }
    #endregion
    #region Shipping
    /// <summary>Interface for Package workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IPackageModel,IPackageSearchModel,IPackage,Package}"/>
    public partial interface IPackageWorkflow
        : INameableWorkflowBase<IPackageModel, IPackageSearchModel, IPackage, Package>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IPackageType,PackageType}"/>
    public partial interface IPackageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IPackageType, PackageType>
    {
    }

    /// <summary>Interface for Rate Quote workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IRateQuoteModel,IRateQuoteSearchModel,IRateQuote,RateQuote}"/>
    public partial interface IRateQuoteWorkflow
        : INameableWorkflowBase<IRateQuoteModel, IRateQuoteSearchModel, IRateQuote, RateQuote>
    {
    }

    /// <summary>Interface for Ship Carrier workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IShipCarrierModel,IShipCarrierSearchModel,IShipCarrier,ShipCarrier}"/>
    public partial interface IShipCarrierWorkflow
        : INameableWorkflowBase<IShipCarrierModel, IShipCarrierSearchModel, IShipCarrier, ShipCarrier>
    {
    }

    /// <summary>Interface for Ship Carrier Method workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IShipCarrierMethodModel,IShipCarrierMethodSearchModel,IShipCarrierMethod,ShipCarrierMethod}"/>
    public partial interface IShipCarrierMethodWorkflow
        : INameableWorkflowBase<IShipCarrierMethodModel, IShipCarrierMethodSearchModel, IShipCarrierMethod, ShipCarrierMethod>
    {
    }

    /// <summary>Interface for Shipment workflow.</summary>
    /// <seealso cref="IWorkflowBase{IShipmentModel,IShipmentSearchModel,IShipment,Shipment}"/>
    public partial interface IShipmentWorkflow
        : IWorkflowBase<IShipmentModel, IShipmentSearchModel, IShipment, Shipment>
    {
    }

    /// <summary>Interface for Shipment Event workflow.</summary>
    /// <seealso cref="IWorkflowBase{IShipmentEventModel,IShipmentEventSearchModel,IShipmentEvent,ShipmentEvent}"/>
    public partial interface IShipmentEventWorkflow
        : IWorkflowBase<IShipmentEventModel, IShipmentEventSearchModel, IShipmentEvent, ShipmentEvent>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IShipmentStatus,ShipmentStatus}"/>
    public partial interface IShipmentStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IShipmentStatus, ShipmentStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IShipmentType,ShipmentType}"/>
    public partial interface IShipmentTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IShipmentType, ShipmentType>
    {
    }
    #endregion
    #region Shopping
    /// <summary>Interface for Cart workflow.</summary>
    /// <seealso cref="ISalesCollectionWorkflowBase{ICartModel,ICartSearchModel,ICart,Cart,CartStatus,CartType,ICartItem,CartItem,AppliedCartDiscount,CartState,CartFile,CartContact,AppliedCartItemDiscount,CartItemTarget,CartEvent,CartEventType}"/>
    public partial interface ICartWorkflow
        : ISalesCollectionWorkflowBase<ICartModel,
            ICartSearchModel,
            ICart,
            Cart,
            CartStatus,
            CartType,
            ICartItem,
            CartItem,
            AppliedCartDiscount,
            CartState,
            CartFile,
            CartContact,
            AppliedCartItemDiscount,
            CartItemTarget,
            CartEvent,
            CartEventType>
    {
    }

    /// <summary>Interface for Cart Contact workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICartContactModel,ICartContactSearchModel,ICartContact,CartContact}"/>
    public partial interface ICartContactWorkflow
        : IWorkflowBase<ICartContactModel, ICartContactSearchModel, ICartContact, CartContact>
    {
    }

    /// <summary>Interface for Cart Event workflow.</summary>
    /// <seealso cref="ISalesEventWorkflowBase{ICartEventModel, ICartEventSearchModel, ICartEvent, CartEvent, CartEventType, Cart}"/>
    public partial interface ICartEventWorkflow
        : ISalesEventWorkflowBase<ICartEventModel, ICartEventSearchModel, ICartEvent, CartEvent, CartEventType, Cart>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICartEventType,CartEventType}"/>
    public partial interface ICartEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICartEventType, CartEventType>
    {
    }

    /// <summary>Interface for Cart File workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICartFileModel,ICartFileSearchModel,ICartFile,CartFile}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{ICartFileModel}"/>
    public partial interface ICartFileWorkflow
        : INameableWorkflowBase<ICartFileModel, ICartFileSearchModel, ICartFile, CartFile>
        , IWorkflowBaseHasGetBySeoUrl<ICartFileModel>
    {
    }

    /// <summary>Interface for Sales Item Base workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISalesItemBaseModel,ISalesItemBaseSearchModel,ICartItem,CartItem}"/>
    public partial interface ICartItemWorkflow
        : INameableWorkflowBase<ISalesItemBaseModel<IAppliedCartItemDiscountModel>, ISalesItemBaseSearchModel, ICartItem, CartItem>
    {
    }

    /// <summary>Interface for Sales Item Target Base workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISalesItemTargetBaseModel,ISalesItemTargetBaseSearchModel,ICartItemTarget,CartItemTarget}"/>
    public partial interface ICartItemTargetWorkflow
        : IWorkflowBase<ISalesItemTargetBaseModel, ISalesItemTargetBaseSearchModel, ICartItemTarget, CartItemTarget>
    {
    }

    /// <summary>Interface for State workflow.</summary>
    /// <seealso cref="IStateableWorkflowBase{IStateModel,IStateSearchModel,ICartState,CartState}"/>
    public partial interface ICartStateWorkflow
        : IStateableWorkflowBase<IStateModel, IStateSearchModel, ICartState, CartState>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ICartStatus,CartStatus}"/>
    public partial interface ICartStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ICartStatus, CartStatus>
    {
    }

    /// <summary>Interface for Cart Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ICartTypeModel,ICartTypeSearchModel,ICartType,CartType}"/>
    public partial interface ICartTypeWorkflow
        : ITypableWorkflowBase<ICartTypeModel, ICartTypeSearchModel, ICartType, CartType>
    {
    }
    #endregion
    #region Stores
    /// <summary>Interface for Site Domain workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISiteDomainModel,ISiteDomainSearchModel,ISiteDomain,SiteDomain}"/>
    public partial interface ISiteDomainWorkflow
        : INameableWorkflowBase<ISiteDomainModel, ISiteDomainSearchModel, ISiteDomain, SiteDomain>
    {
    }

    /// <summary>Interface for Site Domain Social Provider workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISiteDomainSocialProviderModel,ISiteDomainSocialProviderSearchModel,ISiteDomainSocialProvider,SiteDomainSocialProvider}"/>
    public partial interface ISiteDomainSocialProviderWorkflow
        : IWorkflowBase<ISiteDomainSocialProviderModel, ISiteDomainSocialProviderSearchModel, ISiteDomainSocialProvider, SiteDomainSocialProvider>
    {
    }

    /// <summary>Interface for Social Provider workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ISocialProviderModel,ISocialProviderSearchModel,ISocialProvider,SocialProvider}"/>
    public partial interface ISocialProviderWorkflow
        : INameableWorkflowBase<ISocialProviderModel, ISocialProviderSearchModel, ISocialProvider, SocialProvider>
    {
    }

    /// <summary>Interface for Store workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IStoreModel,IStoreSearchModel,IStore,Store}"/>
    /// <seealso cref="IWorkflowBaseHasGetBySeoUrl{IStoreModel}"/>
    public partial interface IStoreWorkflow
        : INameableWorkflowBase<IStoreModel, IStoreSearchModel, IStore, Store>
        , IWorkflowBaseHasGetBySeoUrl<IStoreModel>
    {
    }

    /// <summary>Interface for Store Account workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreAccountModel,IStoreAccountSearchModel,IStoreAccount,StoreAccount}"/>
    public partial interface IStoreAccountWorkflow
        : IWorkflowBase<IStoreAccountModel, IStoreAccountSearchModel, IStoreAccount, StoreAccount>
    {
    }

    /// <summary>Interface for Store Badge workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreBadgeModel,IStoreBadgeSearchModel,IStoreBadge,StoreBadge}"/>
    public partial interface IStoreBadgeWorkflow
        : IWorkflowBase<IStoreBadgeModel, IStoreBadgeSearchModel, IStoreBadge, StoreBadge>
    {
    }

    /// <summary>Interface for Store Category workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreCategoryModel,IStoreCategorySearchModel,IStoreCategory,StoreCategory}"/>
    public partial interface IStoreCategoryWorkflow
        : IWorkflowBase<IStoreCategoryModel, IStoreCategorySearchModel, IStoreCategory, StoreCategory>
    {
    }

    /// <summary>Interface for Store Contact workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IStoreContactModel,IStoreContactSearchModel,IStoreContact,StoreContact}"/>
    public partial interface IStoreContactWorkflow
        : INameableWorkflowBase<IStoreContactModel, IStoreContactSearchModel, IStoreContact, StoreContact>
    {
    }

    /// <summary>Interface for Store Country workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreCountryModel,IStoreCountrySearchModel,IStoreCountry,StoreCountry}"/>
    public partial interface IStoreCountryWorkflow
        : IWorkflowBase<IStoreCountryModel, IStoreCountrySearchModel, IStoreCountry, StoreCountry>
    {
    }

    /// <summary>Interface for Store District workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreDistrictModel,IStoreDistrictSearchModel,IStoreDistrict,StoreDistrict}"/>
    public partial interface IStoreDistrictWorkflow
        : IWorkflowBase<IStoreDistrictModel, IStoreDistrictSearchModel, IStoreDistrict, StoreDistrict>
    {
    }

    /// <summary>Interface for Store Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IStoreImageModel,IStoreImageSearchModel,IStoreImage,StoreImage}"/>
    public partial interface IStoreImageWorkflow
        : INameableWorkflowBase<IStoreImageModel, IStoreImageSearchModel, IStoreImage, StoreImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IStoreImageType,StoreImageType}"/>
    public partial interface IStoreImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IStoreImageType, StoreImageType>
    {
    }

    /// <summary>Interface for Store Inventory Location workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreInventoryLocationModel,IStoreInventoryLocationSearchModel,IStoreInventoryLocation,StoreInventoryLocation}"/>
    public partial interface IStoreInventoryLocationWorkflow
        : IWorkflowBase<IStoreInventoryLocationModel, IStoreInventoryLocationSearchModel, IStoreInventoryLocation, StoreInventoryLocation>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IStoreInventoryLocationType,StoreInventoryLocationType}"/>
    public partial interface IStoreInventoryLocationTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IStoreInventoryLocationType, StoreInventoryLocationType>
    {
    }

    /// <summary>Interface for Store Manufacturer workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreManufacturerModel,IStoreManufacturerSearchModel,IStoreManufacturer,StoreManufacturer}"/>
    public partial interface IStoreManufacturerWorkflow
        : IWorkflowBase<IStoreManufacturerModel, IStoreManufacturerSearchModel, IStoreManufacturer, StoreManufacturer>
    {
    }

    /// <summary>Interface for Store Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreProductModel,IStoreProductSearchModel,IStoreProduct,StoreProduct}"/>
    public partial interface IStoreProductWorkflow
        : IWorkflowBase<IStoreProductModel, IStoreProductSearchModel, IStoreProduct, StoreProduct>
    {
    }

    /// <summary>Interface for Store Region workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreRegionModel,IStoreRegionSearchModel,IStoreRegion,StoreRegion}"/>
    public partial interface IStoreRegionWorkflow
        : IWorkflowBase<IStoreRegionModel, IStoreRegionSearchModel, IStoreRegion, StoreRegion>
    {
    }

    /// <summary>Interface for Store Subscription workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreSubscriptionModel,IStoreSubscriptionSearchModel,IStoreSubscription,StoreSubscription}"/>
    public partial interface IStoreSubscriptionWorkflow
        : IWorkflowBase<IStoreSubscriptionModel, IStoreSubscriptionSearchModel, IStoreSubscription, StoreSubscription>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IStoreType,StoreType}"/>
    public partial interface IStoreTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IStoreType, StoreType>
    {
    }

    /// <summary>Interface for Store User workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreUserModel,IStoreUserSearchModel,IStoreUser,StoreUser}"/>
    public partial interface IStoreUserWorkflow
        : IWorkflowBase<IStoreUserModel, IStoreUserSearchModel, IStoreUser, StoreUser>
    {
    }

    /// <summary>Interface for Store Vendor workflow.</summary>
    /// <seealso cref="IWorkflowBase{IStoreVendorModel,IStoreVendorSearchModel,IStoreVendor,StoreVendor}"/>
    public partial interface IStoreVendorWorkflow
        : IWorkflowBase<IStoreVendorModel, IStoreVendorSearchModel, IStoreVendor, StoreVendor>
    {
    }
    #endregion
    #region System
    /// <summary>Interface for Import Export Mapping workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IImportExportMappingModel,IImportExportMappingSearchModel,IImportExportMapping,ImportExportMapping}"/>
    public partial interface IImportExportMappingWorkflow
        : INameableWorkflowBase<IImportExportMappingModel, IImportExportMappingSearchModel, IImportExportMapping, ImportExportMapping>
    {
    }

    /// <summary>Interface for Note workflow.</summary>
    /// <seealso cref="IWorkflowBase{INoteModel,INoteSearchModel,INote,Note}"/>
    public partial interface INoteWorkflow
        : IWorkflowBase<INoteModel, INoteSearchModel, INote, Note>
    {
    }

    /// <summary>Interface for Note Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{INoteTypeModel,INoteTypeSearchModel,INoteType,NoteType}"/>
    public partial interface INoteTypeWorkflow
        : ITypableWorkflowBase<INoteTypeModel, INoteTypeSearchModel, INoteType, NoteType>
    {
    }

    /// <summary>Interface for Record Version workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IRecordVersionModel,IRecordVersionSearchModel,IRecordVersion,RecordVersion}"/>
    public partial interface IRecordVersionWorkflow
        : INameableWorkflowBase<IRecordVersionModel, IRecordVersionSearchModel, IRecordVersion, RecordVersion>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IRecordVersionType,RecordVersionType}"/>
    public partial interface IRecordVersionTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IRecordVersionType, RecordVersionType>
    {
    }

    /// <summary>Interface for Setting workflow.</summary>
    /// <seealso cref="IWorkflowBase{ISettingModel,ISettingSearchModel,ISetting,Setting}"/>
    public partial interface ISettingWorkflow
        : IWorkflowBase<ISettingModel, ISettingSearchModel, ISetting, Setting>
    {
    }

    /// <summary>Interface for Setting Group workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ISettingGroupModel,ISettingGroupSearchModel,ISettingGroup,SettingGroup}"/>
    public partial interface ISettingGroupWorkflow
        : ITypableWorkflowBase<ISettingGroupModel, ISettingGroupSearchModel, ISettingGroup, SettingGroup>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ISettingType,SettingType}"/>
    public partial interface ISettingTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ISettingType, SettingType>
    {
    }

    /// <summary>Interface for Event Log workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IEventLogModel,IEventLogSearchModel,IEventLog,EventLog}"/>
    public partial interface IEventLogWorkflow
        : INameableWorkflowBase<IEventLogModel, IEventLogSearchModel, IEventLog, EventLog>
    {
    }
    #endregion
    #region Tax
    /// <summary>Interface for Historical Tax Rate workflow.</summary>
    /// <seealso cref="IWorkflowBase{IHistoricalTaxRateModel,IHistoricalTaxRateSearchModel,IHistoricalTaxRate,HistoricalTaxRate}"/>
    public partial interface IHistoricalTaxRateWorkflow
        : IWorkflowBase<IHistoricalTaxRateModel, IHistoricalTaxRateSearchModel, IHistoricalTaxRate, HistoricalTaxRate>
    {
    }

    /// <summary>Interface for Tax Country workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ITaxCountryModel,ITaxCountrySearchModel,ITaxCountry,TaxCountry}"/>
    public partial interface ITaxCountryWorkflow
        : INameableWorkflowBase<ITaxCountryModel, ITaxCountrySearchModel, ITaxCountry, TaxCountry>
    {
    }

    /// <summary>Interface for Tax District workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ITaxDistrictModel,ITaxDistrictSearchModel,ITaxDistrict,TaxDistrict}"/>
    public partial interface ITaxDistrictWorkflow
        : INameableWorkflowBase<ITaxDistrictModel, ITaxDistrictSearchModel, ITaxDistrict, TaxDistrict>
    {
    }

    /// <summary>Interface for Tax Region workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ITaxRegionModel,ITaxRegionSearchModel,ITaxRegion,TaxRegion}"/>
    public partial interface ITaxRegionWorkflow
        : INameableWorkflowBase<ITaxRegionModel, ITaxRegionSearchModel, ITaxRegion, TaxRegion>
    {
    }
    #endregion
    #region Tracking
    /// <summary>Interface for Campaign workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{ICampaignModel,ICampaignSearchModel,ICampaign,Campaign}"/>
    public partial interface ICampaignWorkflow
        : INameableWorkflowBase<ICampaignModel, ICampaignSearchModel, ICampaign, Campaign>
    {
    }

    /// <summary>Interface for Campaign Ad workflow.</summary>
    /// <seealso cref="IWorkflowBase{ICampaignAdModel,ICampaignAdSearchModel,ICampaignAd,CampaignAd}"/>
    public partial interface ICampaignAdWorkflow
        : IWorkflowBase<ICampaignAdModel, ICampaignAdSearchModel, ICampaignAd, CampaignAd>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,ICampaignStatus,CampaignStatus}"/>
    public partial interface ICampaignStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, ICampaignStatus, CampaignStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,ICampaignType,CampaignType}"/>
    public partial interface ICampaignTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, ICampaignType, CampaignType>
    {
    }

    /// <summary>Interface for Event workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IEventModel,IEventSearchModel,IEvent,Event}"/>
    public partial interface IEventWorkflow
        : IAmATrackedEventWorkflowBase<IEventModel, IEventSearchModel, IEvent, Event, IStatusModel, EventStatus>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IEventStatus,EventStatus}"/>
    public partial interface IEventStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IEventStatus, EventStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IEventType,EventType}"/>
    public partial interface IEventTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IEventType, EventType>
    {
    }

    /// <summary>Interface for IP Organization workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IIPOrganizationModel,IIPOrganizationSearchModel,IIPOrganization,IPOrganization}"/>
    public partial interface IIPOrganizationWorkflow
        : INameableWorkflowBase<IIPOrganizationModel, IIPOrganizationSearchModel, IIPOrganization, IPOrganization>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IIPOrganizationStatus,IPOrganizationStatus}"/>
    public partial interface IIPOrganizationStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IIPOrganizationStatus, IPOrganizationStatus>
    {
    }

    /// <summary>Interface for Page View workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IPageViewModel,IPageViewSearchModel,IPageView,PageView}"/>
    public partial interface IPageViewWorkflow
        : IAmATrackedEventWorkflowBase<IPageViewModel, IPageViewSearchModel, IPageView, PageView, IStatusModel, PageViewStatus>
    {
    }

    /// <summary>Interface for Page View Event workflow.</summary>
    /// <seealso cref="IWorkflowBase{IPageViewEventModel,IPageViewEventSearchModel,IPageViewEvent,PageViewEvent}"/>
    public partial interface IPageViewEventWorkflow
        : IWorkflowBase<IPageViewEventModel, IPageViewEventSearchModel, IPageViewEvent, PageViewEvent>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IPageViewStatus,PageViewStatus}"/>
    public partial interface IPageViewStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IPageViewStatus, PageViewStatus>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IPageViewType,PageViewType}"/>
    public partial interface IPageViewTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IPageViewType, PageViewType>
    {
    }

    /// <summary>Interface for Visit workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IVisitModel,IVisitSearchModel,IVisit,Visit}"/>
    public partial interface IVisitWorkflow
        : IAmATrackedEventWorkflowBase<IVisitModel, IVisitSearchModel, IVisit, Visit, IStatusModel, VisitStatus>
    {
    }

    /// <summary>Interface for Visitor workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IVisitorModel,IVisitorSearchModel,IVisitor,Visitor}"/>
    public partial interface IVisitorWorkflow
        : INameableWorkflowBase<IVisitorModel, IVisitorSearchModel, IVisitor, Visitor>
    {
    }

    /// <summary>Interface for Status workflow.</summary>
    /// <seealso cref="IStatusableWorkflowBase{IStatusModel,IStatusSearchModel,IVisitStatus,VisitStatus}"/>
    public partial interface IVisitStatusWorkflow
        : IStatusableWorkflowBase<IStatusModel, IStatusSearchModel, IVisitStatus, VisitStatus>
    {
    }
    #endregion
    #region Vendors
    /// <summary>Interface for Vendor workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IVendorModel,IVendorSearchModel,IVendor,Vendor}"/>
    public partial interface IVendorWorkflow
        : INameableWorkflowBase<IVendorModel, IVendorSearchModel, IVendor, Vendor>
    {
    }

    /// <summary>Interface for Vendor Account workflow.</summary>
    /// <seealso cref="IWorkflowBase{IVendorAccountModel,IVendorAccountSearchModel,IVendorAccount,VendorAccount}"/>
    public partial interface IVendorAccountWorkflow
        : IWorkflowBase<IVendorAccountModel, IVendorAccountSearchModel, IVendorAccount, VendorAccount>
    {
    }

    /// <summary>Interface for Vendor Image workflow.</summary>
    /// <seealso cref="INameableWorkflowBase{IVendorImageModel,IVendorImageSearchModel,IVendorImage,VendorImage}"/>
    public partial interface IVendorImageWorkflow
        : INameableWorkflowBase<IVendorImageModel, IVendorImageSearchModel, IVendorImage, VendorImage>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IVendorImageType,VendorImageType}"/>
    public partial interface IVendorImageTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IVendorImageType, VendorImageType>
    {
    }

    /// <summary>Interface for Vendor Manufacturer workflow.</summary>
    /// <seealso cref="IWorkflowBase{IVendorManufacturerModel,IVendorManufacturerSearchModel,IVendorManufacturer,VendorManufacturer}"/>
    public partial interface IVendorManufacturerWorkflow
        : IWorkflowBase<IVendorManufacturerModel, IVendorManufacturerSearchModel, IVendorManufacturer, VendorManufacturer>
    {
    }

    /// <summary>Interface for Vendor Product workflow.</summary>
    /// <seealso cref="IWorkflowBase{IVendorProductModel,IVendorProductSearchModel,IVendorProduct,VendorProduct}"/>
    public partial interface IVendorProductWorkflow
        : IWorkflowBase<IVendorProductModel, IVendorProductSearchModel, IVendorProduct, VendorProduct>
    {
    }

    /// <summary>Interface for Type workflow.</summary>
    /// <seealso cref="ITypableWorkflowBase{ITypeModel,ITypeSearchModel,IVendorType,VendorType}"/>
    public partial interface IVendorTypeWorkflow
        : ITypableWorkflowBase<ITypeModel, ITypeSearchModel, IVendorType, VendorType>
    {
    }
    #endregion

    public partial interface IWorkflowsController
    {
        /// <summary>Gets the Accounts workflow.</summary>
        /// <value>The Accounts workflow.</value>
        IAccountWorkflow Accounts { get; }

        /// <summary>Gets the Account Associations workflow.</summary>
        /// <value>The Account Associations workflow.</value>
        IAccountAssociationWorkflow AccountAssociations { get; }

        /// <summary>Gets the Account Association Types workflow.</summary>
        /// <value>The Account Association Types workflow.</value>
        IAccountAssociationTypeWorkflow AccountAssociationTypes { get; }

        /// <summary>Gets the Account Contacts workflow.</summary>
        /// <value>The Account Contacts workflow.</value>
        IAccountContactWorkflow AccountContacts { get; }

        /// <summary>Gets the Account Currencies workflow.</summary>
        /// <value>The Account Currencies workflow.</value>
        IAccountCurrencyWorkflow AccountCurrencies { get; }

        /// <summary>Gets the Account Files workflow.</summary>
        /// <value>The Account Files workflow.</value>
        IAccountFileWorkflow AccountFiles { get; }

        /// <summary>Gets the Account Images workflow.</summary>
        /// <value>The Account Images workflow.</value>
        IAccountImageWorkflow AccountImages { get; }

        /// <summary>Gets the Account Image Types workflow.</summary>
        /// <value>The Account Image Types workflow.</value>
        IAccountImageTypeWorkflow AccountImageTypes { get; }

        /// <summary>Gets the Account Price Points workflow.</summary>
        /// <value>The Account Price Points workflow.</value>
        IAccountPricePointWorkflow AccountPricePoints { get; }

        /// <summary>Gets the Account Products workflow.</summary>
        /// <value>The Account Products workflow.</value>
        IAccountProductWorkflow AccountProducts { get; }

        /// <summary>Gets the Account Product Types workflow.</summary>
        /// <value>The Account Product Types workflow.</value>
        IAccountProductTypeWorkflow AccountProductTypes { get; }

        /// <summary>Gets the Account Statuses workflow.</summary>
        /// <value>The Account Statuses workflow.</value>
        IAccountStatusWorkflow AccountStatuses { get; }

        /// <summary>Gets the Account Types workflow.</summary>
        /// <value>The Account Types workflow.</value>
        IAccountTypeWorkflow AccountTypes { get; }

        /// <summary>Gets the Account Usage Balances workflow.</summary>
        /// <value>The Account Usage Balances workflow.</value>
        IAccountUsageBalanceWorkflow AccountUsageBalances { get; }

        /// <summary>Gets the Contractors workflow.</summary>
        /// <value>The Contractors workflow.</value>
        IContractorWorkflow Contractors { get; }

        /// <summary>Gets the Service Areas workflow.</summary>
        /// <value>The Service Areas workflow.</value>
        IServiceAreaWorkflow ServiceAreas { get; }

        /// <summary>Gets the Ads workflow.</summary>
        /// <value>The Ads workflow.</value>
        IAdWorkflow Ads { get; }

        /// <summary>Gets the Ad Accounts workflow.</summary>
        /// <value>The Ad Accounts workflow.</value>
        IAdAccountWorkflow AdAccounts { get; }

        /// <summary>Gets the Ad Brands workflow.</summary>
        /// <value>The Ad Brands workflow.</value>
        IAdBrandWorkflow AdBrands { get; }

        /// <summary>Gets the Ad Franchises workflow.</summary>
        /// <value>The Ad Franchises workflow.</value>
        IAdFranchiseWorkflow AdFranchises { get; }

        /// <summary>Gets the Ad Images workflow.</summary>
        /// <value>The Ad Images workflow.</value>
        IAdImageWorkflow AdImages { get; }

        /// <summary>Gets the Ad Image Types workflow.</summary>
        /// <value>The Ad Image Types workflow.</value>
        IAdImageTypeWorkflow AdImageTypes { get; }

        /// <summary>Gets the Ad Statuses workflow.</summary>
        /// <value>The Ad Statuses workflow.</value>
        IAdStatusWorkflow AdStatuses { get; }

        /// <summary>Gets the Ad Stores workflow.</summary>
        /// <value>The Ad Stores workflow.</value>
        IAdStoreWorkflow AdStores { get; }

        /// <summary>Gets the Ad Types workflow.</summary>
        /// <value>The Ad Types workflow.</value>
        IAdTypeWorkflow AdTypes { get; }

        /// <summary>Gets the Ad Zones workflow.</summary>
        /// <value>The Ad Zones workflow.</value>
        IAdZoneWorkflow AdZones { get; }

        /// <summary>Gets the Ad Zone Accesses workflow.</summary>
        /// <value>The Ad Zone Accesses workflow.</value>
        IAdZoneAccessWorkflow AdZoneAccesses { get; }

        /// <summary>Gets the Zones workflow.</summary>
        /// <value>The Zones workflow.</value>
        IZoneWorkflow Zones { get; }

        /// <summary>Gets the Zone Statuses workflow.</summary>
        /// <value>The Zone Statuses workflow.</value>
        IZoneStatusWorkflow ZoneStatuses { get; }

        /// <summary>Gets the Zone Types workflow.</summary>
        /// <value>The Zone Types workflow.</value>
        IZoneTypeWorkflow ZoneTypes { get; }

        /// <summary>Gets the Attribute Groups workflow.</summary>
        /// <value>The Attribute Groups workflow.</value>
        IAttributeGroupWorkflow AttributeGroups { get; }

        /// <summary>Gets the Attribute Tabs workflow.</summary>
        /// <value>The Attribute Tabs workflow.</value>
        IAttributeTabWorkflow AttributeTabs { get; }

        /// <summary>Gets the Attribute Types workflow.</summary>
        /// <value>The Attribute Types workflow.</value>
        IAttributeTypeWorkflow AttributeTypes { get; }

        /// <summary>Gets the General Attributes workflow.</summary>
        /// <value>The General Attributes workflow.</value>
        IGeneralAttributeWorkflow GeneralAttributes { get; }

        /// <summary>Gets the General Attribute Predefined Options workflow.</summary>
        /// <value>The General Attribute Predefined Options workflow.</value>
        IGeneralAttributePredefinedOptionWorkflow GeneralAttributePredefinedOptions { get; }

        /// <summary>Gets the Auctions workflow.</summary>
        /// <value>The Auctions workflow.</value>
        IAuctionWorkflow Auctions { get; }

        /// <summary>Gets the Auction Categories workflow.</summary>
        /// <value>The Auction Categories workflow.</value>
        IAuctionCategoryWorkflow AuctionCategories { get; }

        /// <summary>Gets the Auction Statuses workflow.</summary>
        /// <value>The Auction Statuses workflow.</value>
        IAuctionStatusWorkflow AuctionStatuses { get; }

        /// <summary>Gets the Auction Types workflow.</summary>
        /// <value>The Auction Types workflow.</value>
        IAuctionTypeWorkflow AuctionTypes { get; }

        /// <summary>Gets the Bids workflow.</summary>
        /// <value>The Bids workflow.</value>
        IBidWorkflow Bids { get; }

        /// <summary>Gets the Bid Statuses workflow.</summary>
        /// <value>The Bid Statuses workflow.</value>
        IBidStatusWorkflow BidStatuses { get; }

        /// <summary>Gets the Brand Auctions workflow.</summary>
        /// <value>The Brand Auctions workflow.</value>
        IBrandAuctionWorkflow BrandAuctions { get; }

        /// <summary>Gets the Franchise Auctions workflow.</summary>
        /// <value>The Franchise Auctions workflow.</value>
        IFranchiseAuctionWorkflow FranchiseAuctions { get; }

        /// <summary>Gets the Lots workflow.</summary>
        /// <value>The Lots workflow.</value>
        ILotWorkflow Lots { get; }

        /// <summary>Gets the Lot Categories workflow.</summary>
        /// <value>The Lot Categories workflow.</value>
        ILotCategoryWorkflow LotCategories { get; }

        /// <summary>Gets the Lot Groups workflow.</summary>
        /// <value>The Lot Groups workflow.</value>
        ILotGroupWorkflow LotGroups { get; }

        /// <summary>Gets the Lot Statuses workflow.</summary>
        /// <value>The Lot Statuses workflow.</value>
        ILotStatusWorkflow LotStatuses { get; }

        /// <summary>Gets the Lot Types workflow.</summary>
        /// <value>The Lot Types workflow.</value>
        ILotTypeWorkflow LotTypes { get; }

        /// <summary>Gets the Store Auctions workflow.</summary>
        /// <value>The Store Auctions workflow.</value>
        IStoreAuctionWorkflow StoreAuctions { get; }

        /// <summary>Gets the Badges workflow.</summary>
        /// <value>The Badges workflow.</value>
        IBadgeWorkflow Badges { get; }

        /// <summary>Gets the Badge Images workflow.</summary>
        /// <value>The Badge Images workflow.</value>
        IBadgeImageWorkflow BadgeImages { get; }

        /// <summary>Gets the Badge Image Types workflow.</summary>
        /// <value>The Badge Image Types workflow.</value>
        IBadgeImageTypeWorkflow BadgeImageTypes { get; }

        /// <summary>Gets the Badge Types workflow.</summary>
        /// <value>The Badge Types workflow.</value>
        IBadgeTypeWorkflow BadgeTypes { get; }

        /// <summary>Gets the Brands workflow.</summary>
        /// <value>The Brands workflow.</value>
        IBrandWorkflow Brands { get; }

        /// <summary>Gets the Brand Accounts workflow.</summary>
        /// <value>The Brand Accounts workflow.</value>
        IBrandAccountWorkflow BrandAccounts { get; }

        /// <summary>Gets the Brand Categories workflow.</summary>
        /// <value>The Brand Categories workflow.</value>
        IBrandCategoryWorkflow BrandCategories { get; }

        /// <summary>Gets the Brand Currencies workflow.</summary>
        /// <value>The Brand Currencies workflow.</value>
        IBrandCurrencyWorkflow BrandCurrencies { get; }

        /// <summary>Gets the Brand Franchises workflow.</summary>
        /// <value>The Brand Franchises workflow.</value>
        IBrandFranchiseWorkflow BrandFranchises { get; }

        /// <summary>Gets the Brand Images workflow.</summary>
        /// <value>The Brand Images workflow.</value>
        IBrandImageWorkflow BrandImages { get; }

        /// <summary>Gets the Brand Image Types workflow.</summary>
        /// <value>The Brand Image Types workflow.</value>
        IBrandImageTypeWorkflow BrandImageTypes { get; }

        /// <summary>Gets the Brand Inventory Locations workflow.</summary>
        /// <value>The Brand Inventory Locations workflow.</value>
        IBrandInventoryLocationWorkflow BrandInventoryLocations { get; }

        /// <summary>Gets the Brand Inventory Location Types workflow.</summary>
        /// <value>The Brand Inventory Location Types workflow.</value>
        IBrandInventoryLocationTypeWorkflow BrandInventoryLocationTypes { get; }

        /// <summary>Gets the Brand Languages workflow.</summary>
        /// <value>The Brand Languages workflow.</value>
        IBrandLanguageWorkflow BrandLanguages { get; }

        /// <summary>Gets the Brand Manufacturers workflow.</summary>
        /// <value>The Brand Manufacturers workflow.</value>
        IBrandManufacturerWorkflow BrandManufacturers { get; }

        /// <summary>Gets the Brand Products workflow.</summary>
        /// <value>The Brand Products workflow.</value>
        IBrandProductWorkflow BrandProducts { get; }

        /// <summary>Gets the Brand Site Domains workflow.</summary>
        /// <value>The Brand Site Domains workflow.</value>
        IBrandSiteDomainWorkflow BrandSiteDomains { get; }

        /// <summary>Gets the Brand Stores workflow.</summary>
        /// <value>The Brand Stores workflow.</value>
        IBrandStoreWorkflow BrandStores { get; }

        /// <summary>Gets the Brand Users workflow.</summary>
        /// <value>The Brand Users workflow.</value>
        IBrandUserWorkflow BrandUsers { get; }

        /// <summary>Gets the Brand Vendors workflow.</summary>
        /// <value>The Brand Vendors workflow.</value>
        IBrandVendorWorkflow BrandVendors { get; }

        /// <summary>Gets the Calendar Events workflow.</summary>
        /// <value>The Calendar Events workflow.</value>
        ICalendarEventWorkflow CalendarEvents { get; }

        /// <summary>Gets the Calendar Event Details workflow.</summary>
        /// <value>The Calendar Event Details workflow.</value>
        ICalendarEventDetailWorkflow CalendarEventDetails { get; }

        /// <summary>Gets the Calendar Event Files workflow.</summary>
        /// <value>The Calendar Event Files workflow.</value>
        ICalendarEventFileWorkflow CalendarEventFiles { get; }

        /// <summary>Gets the Calendar Event Images workflow.</summary>
        /// <value>The Calendar Event Images workflow.</value>
        ICalendarEventImageWorkflow CalendarEventImages { get; }

        /// <summary>Gets the Calendar Event Image Types workflow.</summary>
        /// <value>The Calendar Event Image Types workflow.</value>
        ICalendarEventImageTypeWorkflow CalendarEventImageTypes { get; }

        /// <summary>Gets the Calendar Event Products workflow.</summary>
        /// <value>The Calendar Event Products workflow.</value>
        ICalendarEventProductWorkflow CalendarEventProducts { get; }

        /// <summary>Gets the Calendar Event Statuses workflow.</summary>
        /// <value>The Calendar Event Statuses workflow.</value>
        ICalendarEventStatusWorkflow CalendarEventStatuses { get; }

        /// <summary>Gets the Calendar Event Types workflow.</summary>
        /// <value>The Calendar Event Types workflow.</value>
        ICalendarEventTypeWorkflow CalendarEventTypes { get; }

        /// <summary>Gets the User Event Attendances workflow.</summary>
        /// <value>The User Event Attendances workflow.</value>
        IUserEventAttendanceWorkflow UserEventAttendances { get; }

        /// <summary>Gets the User Event Attendance Types workflow.</summary>
        /// <value>The User Event Attendance Types workflow.</value>
        IUserEventAttendanceTypeWorkflow UserEventAttendanceTypes { get; }

        /// <summary>Gets the Categories workflow.</summary>
        /// <value>The Categories workflow.</value>
        ICategoryWorkflow Categories { get; }

        /// <summary>Gets the Category Files workflow.</summary>
        /// <value>The Category Files workflow.</value>
        ICategoryFileWorkflow CategoryFiles { get; }

        /// <summary>Gets the Category Images workflow.</summary>
        /// <value>The Category Images workflow.</value>
        ICategoryImageWorkflow CategoryImages { get; }

        /// <summary>Gets the Category Image Types workflow.</summary>
        /// <value>The Category Image Types workflow.</value>
        ICategoryImageTypeWorkflow CategoryImageTypes { get; }

        /// <summary>Gets the Category Types workflow.</summary>
        /// <value>The Category Types workflow.</value>
        ICategoryTypeWorkflow CategoryTypes { get; }

        /// <summary>Gets the Contacts workflow.</summary>
        /// <value>The Contacts workflow.</value>
        IContactWorkflow Contacts { get; }

        /// <summary>Gets the Contact Images workflow.</summary>
        /// <value>The Contact Images workflow.</value>
        IContactImageWorkflow ContactImages { get; }

        /// <summary>Gets the Contact Image Types workflow.</summary>
        /// <value>The Contact Image Types workflow.</value>
        IContactImageTypeWorkflow ContactImageTypes { get; }

        /// <summary>Gets the Contact Types workflow.</summary>
        /// <value>The Contact Types workflow.</value>
        IContactTypeWorkflow ContactTypes { get; }

        /// <summary>Gets the Profanity Filters workflow.</summary>
        /// <value>The Profanity Filters workflow.</value>
        IProfanityFilterWorkflow ProfanityFilters { get; }

        /// <summary>Gets the Referral Codes workflow.</summary>
        /// <value>The Referral Codes workflow.</value>
        IReferralCodeWorkflow ReferralCodes { get; }

        /// <summary>Gets the Referral Code Statuses workflow.</summary>
        /// <value>The Referral Code Statuses workflow.</value>
        IReferralCodeStatusWorkflow ReferralCodeStatuses { get; }

        /// <summary>Gets the Referral Code Types workflow.</summary>
        /// <value>The Referral Code Types workflow.</value>
        IReferralCodeTypeWorkflow ReferralCodeTypes { get; }

        /// <summary>Gets the Users workflow.</summary>
        /// <value>The Users workflow.</value>
        IUserWorkflow Users { get; }

        /// <summary>Gets the User Files workflow.</summary>
        /// <value>The User Files workflow.</value>
        IUserFileWorkflow UserFiles { get; }

        /// <summary>Gets the User Images workflow.</summary>
        /// <value>The User Images workflow.</value>
        IUserImageWorkflow UserImages { get; }

        /// <summary>Gets the User Image Types workflow.</summary>
        /// <value>The User Image Types workflow.</value>
        IUserImageTypeWorkflow UserImageTypes { get; }

        /// <summary>Gets the User Online Statuses workflow.</summary>
        /// <value>The User Online Statuses workflow.</value>
        IUserOnlineStatusWorkflow UserOnlineStatuses { get; }

        /// <summary>Gets the User Product Types workflow.</summary>
        /// <value>The User Product Types workflow.</value>
        IUserProductTypeWorkflow UserProductTypes { get; }

        /// <summary>Gets the User Statuses workflow.</summary>
        /// <value>The User Statuses workflow.</value>
        IUserStatusWorkflow UserStatuses { get; }

        /// <summary>Gets the User Types workflow.</summary>
        /// <value>The User Types workflow.</value>
        IUserTypeWorkflow UserTypes { get; }

        /// <summary>Gets the Counters workflow.</summary>
        /// <value>The Counters workflow.</value>
        ICounterWorkflow Counters { get; }

        /// <summary>Gets the Counter Logs workflow.</summary>
        /// <value>The Counter Logs workflow.</value>
        ICounterLogWorkflow CounterLogs { get; }

        /// <summary>Gets the Counter Log Types workflow.</summary>
        /// <value>The Counter Log Types workflow.</value>
        ICounterLogTypeWorkflow CounterLogTypes { get; }

        /// <summary>Gets the Counter Types workflow.</summary>
        /// <value>The Counter Types workflow.</value>
        ICounterTypeWorkflow CounterTypes { get; }

        /// <summary>Gets the Currencies workflow.</summary>
        /// <value>The Currencies workflow.</value>
        ICurrencyWorkflow Currencies { get; }

        /// <summary>Gets the Currency Conversions workflow.</summary>
        /// <value>The Currency Conversions workflow.</value>
        ICurrencyConversionWorkflow CurrencyConversions { get; }

        /// <summary>Gets the Currency Images workflow.</summary>
        /// <value>The Currency Images workflow.</value>
        ICurrencyImageWorkflow CurrencyImages { get; }

        /// <summary>Gets the Currency Image Types workflow.</summary>
        /// <value>The Currency Image Types workflow.</value>
        ICurrencyImageTypeWorkflow CurrencyImageTypes { get; }

        /// <summary>Gets the Historical Currency Rates workflow.</summary>
        /// <value>The Historical Currency Rates workflow.</value>
        IHistoricalCurrencyRateWorkflow HistoricalCurrencyRates { get; }

        /// <summary>Gets the Applied Cart Discounts workflow.</summary>
        /// <value>The Applied Cart Discounts workflow.</value>
        IAppliedCartDiscountWorkflow AppliedCartDiscounts { get; }

        /// <summary>Gets the Applied Cart Item Discounts workflow.</summary>
        /// <value>The Applied Cart Item Discounts workflow.</value>
        IAppliedCartItemDiscountWorkflow AppliedCartItemDiscounts { get; }

        /// <summary>Gets the Discounts workflow.</summary>
        /// <value>The Discounts workflow.</value>
        IDiscountWorkflow Discounts { get; }

        /// <summary>Gets the Discount Accounts workflow.</summary>
        /// <value>The Discount Accounts workflow.</value>
        IDiscountAccountWorkflow DiscountAccounts { get; }

        /// <summary>Gets the Discount Account Types workflow.</summary>
        /// <value>The Discount Account Types workflow.</value>
        IDiscountAccountTypeWorkflow DiscountAccountTypes { get; }

        /// <summary>Gets the Discount Brands workflow.</summary>
        /// <value>The Discount Brands workflow.</value>
        IDiscountBrandWorkflow DiscountBrands { get; }

        /// <summary>Gets the Discount Categories workflow.</summary>
        /// <value>The Discount Categories workflow.</value>
        IDiscountCategoryWorkflow DiscountCategories { get; }

        /// <summary>Gets the Discount Codes workflow.</summary>
        /// <value>The Discount Codes workflow.</value>
        IDiscountCodeWorkflow DiscountCodes { get; }

        /// <summary>Gets the Discount Countries workflow.</summary>
        /// <value>The Discount Countries workflow.</value>
        IDiscountCountryWorkflow DiscountCountries { get; }

        /// <summary>Gets the Discount Franchises workflow.</summary>
        /// <value>The Discount Franchises workflow.</value>
        IDiscountFranchiseWorkflow DiscountFranchises { get; }

        /// <summary>Gets the Discount Manufacturers workflow.</summary>
        /// <value>The Discount Manufacturers workflow.</value>
        IDiscountManufacturerWorkflow DiscountManufacturers { get; }

        /// <summary>Gets the Discount Products workflow.</summary>
        /// <value>The Discount Products workflow.</value>
        IDiscountProductWorkflow DiscountProducts { get; }

        /// <summary>Gets the Discount Product Types workflow.</summary>
        /// <value>The Discount Product Types workflow.</value>
        IDiscountProductTypeWorkflow DiscountProductTypes { get; }

        /// <summary>Gets the Discount Ship Carrier Methods workflow.</summary>
        /// <value>The Discount Ship Carrier Methods workflow.</value>
        IDiscountShipCarrierMethodWorkflow DiscountShipCarrierMethods { get; }

        /// <summary>Gets the Discount Stores workflow.</summary>
        /// <value>The Discount Stores workflow.</value>
        IDiscountStoreWorkflow DiscountStores { get; }

        /// <summary>Gets the Discount Users workflow.</summary>
        /// <value>The Discount Users workflow.</value>
        IDiscountUserWorkflow DiscountUsers { get; }

        /// <summary>Gets the Discount User Roles workflow.</summary>
        /// <value>The Discount User Roles workflow.</value>
        IDiscountUserRoleWorkflow DiscountUserRoles { get; }

        /// <summary>Gets the Discount Vendors workflow.</summary>
        /// <value>The Discount Vendors workflow.</value>
        IDiscountVendorWorkflow DiscountVendors { get; }

        /// <summary>Gets the Applied Purchase Order Discounts workflow.</summary>
        /// <value>The Applied Purchase Order Discounts workflow.</value>
        IAppliedPurchaseOrderDiscountWorkflow AppliedPurchaseOrderDiscounts { get; }

        /// <summary>Gets the Applied Purchase Order Item Discounts workflow.</summary>
        /// <value>The Applied Purchase Order Item Discounts workflow.</value>
        IAppliedPurchaseOrderItemDiscountWorkflow AppliedPurchaseOrderItemDiscounts { get; }

        /// <summary>Gets the Applied Sales Invoice Discounts workflow.</summary>
        /// <value>The Applied Sales Invoice Discounts workflow.</value>
        IAppliedSalesInvoiceDiscountWorkflow AppliedSalesInvoiceDiscounts { get; }

        /// <summary>Gets the Applied Sales Invoice Item Discounts workflow.</summary>
        /// <value>The Applied Sales Invoice Item Discounts workflow.</value>
        IAppliedSalesInvoiceItemDiscountWorkflow AppliedSalesInvoiceItemDiscounts { get; }

        /// <summary>Gets the Applied Sales Order Discounts workflow.</summary>
        /// <value>The Applied Sales Order Discounts workflow.</value>
        IAppliedSalesOrderDiscountWorkflow AppliedSalesOrderDiscounts { get; }

        /// <summary>Gets the Applied Sales Order Item Discounts workflow.</summary>
        /// <value>The Applied Sales Order Item Discounts workflow.</value>
        IAppliedSalesOrderItemDiscountWorkflow AppliedSalesOrderItemDiscounts { get; }

        /// <summary>Gets the Applied Sales Quote Discounts workflow.</summary>
        /// <value>The Applied Sales Quote Discounts workflow.</value>
        IAppliedSalesQuoteDiscountWorkflow AppliedSalesQuoteDiscounts { get; }

        /// <summary>Gets the Applied Sales Quote Item Discounts workflow.</summary>
        /// <value>The Applied Sales Quote Item Discounts workflow.</value>
        IAppliedSalesQuoteItemDiscountWorkflow AppliedSalesQuoteItemDiscounts { get; }

        /// <summary>Gets the Applied Sales Return Discounts workflow.</summary>
        /// <value>The Applied Sales Return Discounts workflow.</value>
        IAppliedSalesReturnDiscountWorkflow AppliedSalesReturnDiscounts { get; }

        /// <summary>Gets the Applied Sales Return Item Discounts workflow.</summary>
        /// <value>The Applied Sales Return Item Discounts workflow.</value>
        IAppliedSalesReturnItemDiscountWorkflow AppliedSalesReturnItemDiscounts { get; }

        /// <summary>Gets the Applied Sample Request Discounts workflow.</summary>
        /// <value>The Applied Sample Request Discounts workflow.</value>
        IAppliedSampleRequestDiscountWorkflow AppliedSampleRequestDiscounts { get; }

        /// <summary>Gets the Applied Sample Request Item Discounts workflow.</summary>
        /// <value>The Applied Sample Request Item Discounts workflow.</value>
        IAppliedSampleRequestItemDiscountWorkflow AppliedSampleRequestItemDiscounts { get; }

        /// <summary>Gets the Favorite Categories workflow.</summary>
        /// <value>The Favorite Categories workflow.</value>
        IFavoriteCategoryWorkflow FavoriteCategories { get; }

        /// <summary>Gets the Favorite Manufacturers workflow.</summary>
        /// <value>The Favorite Manufacturers workflow.</value>
        IFavoriteManufacturerWorkflow FavoriteManufacturers { get; }

        /// <summary>Gets the Favorite Ship Carriers workflow.</summary>
        /// <value>The Favorite Ship Carriers workflow.</value>
        IFavoriteShipCarrierWorkflow FavoriteShipCarriers { get; }

        /// <summary>Gets the Favorite Stores workflow.</summary>
        /// <value>The Favorite Stores workflow.</value>
        IFavoriteStoreWorkflow FavoriteStores { get; }

        /// <summary>Gets the Favorite Vendors workflow.</summary>
        /// <value>The Favorite Vendors workflow.</value>
        IFavoriteVendorWorkflow FavoriteVendors { get; }

        /// <summary>Gets the Franchises workflow.</summary>
        /// <value>The Franchises workflow.</value>
        IFranchiseWorkflow Franchises { get; }

        /// <summary>Gets the Franchise Accounts workflow.</summary>
        /// <value>The Franchise Accounts workflow.</value>
        IFranchiseAccountWorkflow FranchiseAccounts { get; }

        /// <summary>Gets the Franchise Categories workflow.</summary>
        /// <value>The Franchise Categories workflow.</value>
        IFranchiseCategoryWorkflow FranchiseCategories { get; }

        /// <summary>Gets the Franchise Countries workflow.</summary>
        /// <value>The Franchise Countries workflow.</value>
        IFranchiseCountryWorkflow FranchiseCountries { get; }

        /// <summary>Gets the Franchise Currencies workflow.</summary>
        /// <value>The Franchise Currencies workflow.</value>
        IFranchiseCurrencyWorkflow FranchiseCurrencies { get; }

        /// <summary>Gets the Franchise Districts workflow.</summary>
        /// <value>The Franchise Districts workflow.</value>
        IFranchiseDistrictWorkflow FranchiseDistricts { get; }

        /// <summary>Gets the Franchise Images workflow.</summary>
        /// <value>The Franchise Images workflow.</value>
        IFranchiseImageWorkflow FranchiseImages { get; }

        /// <summary>Gets the Franchise Image Types workflow.</summary>
        /// <value>The Franchise Image Types workflow.</value>
        IFranchiseImageTypeWorkflow FranchiseImageTypes { get; }

        /// <summary>Gets the Franchise Inventory Locations workflow.</summary>
        /// <value>The Franchise Inventory Locations workflow.</value>
        IFranchiseInventoryLocationWorkflow FranchiseInventoryLocations { get; }

        /// <summary>Gets the Franchise Inventory Location Types workflow.</summary>
        /// <value>The Franchise Inventory Location Types workflow.</value>
        IFranchiseInventoryLocationTypeWorkflow FranchiseInventoryLocationTypes { get; }

        /// <summary>Gets the Franchise Languages workflow.</summary>
        /// <value>The Franchise Languages workflow.</value>
        IFranchiseLanguageWorkflow FranchiseLanguages { get; }

        /// <summary>Gets the Franchise Manufacturers workflow.</summary>
        /// <value>The Franchise Manufacturers workflow.</value>
        IFranchiseManufacturerWorkflow FranchiseManufacturers { get; }

        /// <summary>Gets the Franchise Products workflow.</summary>
        /// <value>The Franchise Products workflow.</value>
        IFranchiseProductWorkflow FranchiseProducts { get; }

        /// <summary>Gets the Franchise Regions workflow.</summary>
        /// <value>The Franchise Regions workflow.</value>
        IFranchiseRegionWorkflow FranchiseRegions { get; }

        /// <summary>Gets the Franchise Site Domains workflow.</summary>
        /// <value>The Franchise Site Domains workflow.</value>
        IFranchiseSiteDomainWorkflow FranchiseSiteDomains { get; }

        /// <summary>Gets the Franchise Stores workflow.</summary>
        /// <value>The Franchise Stores workflow.</value>
        IFranchiseStoreWorkflow FranchiseStores { get; }

        /// <summary>Gets the Franchise Types workflow.</summary>
        /// <value>The Franchise Types workflow.</value>
        IFranchiseTypeWorkflow FranchiseTypes { get; }

        /// <summary>Gets the Franchise Users workflow.</summary>
        /// <value>The Franchise Users workflow.</value>
        IFranchiseUserWorkflow FranchiseUsers { get; }

        /// <summary>Gets the Franchise Vendors workflow.</summary>
        /// <value>The Franchise Vendors workflow.</value>
        IFranchiseVendorWorkflow FranchiseVendors { get; }

        /// <summary>Gets the Addresses workflow.</summary>
        /// <value>The Addresses workflow.</value>
        IAddressWorkflow Addresses { get; }

        /// <summary>Gets the Countries workflow.</summary>
        /// <value>The Countries workflow.</value>
        ICountryWorkflow Countries { get; }

        /// <summary>Gets the Country Currencies workflow.</summary>
        /// <value>The Country Currencies workflow.</value>
        ICountryCurrencyWorkflow CountryCurrencies { get; }

        /// <summary>Gets the Country Images workflow.</summary>
        /// <value>The Country Images workflow.</value>
        ICountryImageWorkflow CountryImages { get; }

        /// <summary>Gets the Country Image Types workflow.</summary>
        /// <value>The Country Image Types workflow.</value>
        ICountryImageTypeWorkflow CountryImageTypes { get; }

        /// <summary>Gets the Country Languages workflow.</summary>
        /// <value>The Country Languages workflow.</value>
        ICountryLanguageWorkflow CountryLanguages { get; }

        /// <summary>Gets the Districts workflow.</summary>
        /// <value>The Districts workflow.</value>
        IDistrictWorkflow Districts { get; }

        /// <summary>Gets the District Currencies workflow.</summary>
        /// <value>The District Currencies workflow.</value>
        IDistrictCurrencyWorkflow DistrictCurrencies { get; }

        /// <summary>Gets the District Images workflow.</summary>
        /// <value>The District Images workflow.</value>
        IDistrictImageWorkflow DistrictImages { get; }

        /// <summary>Gets the District Image Types workflow.</summary>
        /// <value>The District Image Types workflow.</value>
        IDistrictImageTypeWorkflow DistrictImageTypes { get; }

        /// <summary>Gets the District Languages workflow.</summary>
        /// <value>The District Languages workflow.</value>
        IDistrictLanguageWorkflow DistrictLanguages { get; }

        /// <summary>Gets the Historical Address Validations workflow.</summary>
        /// <value>The Historical Address Validations workflow.</value>
        IHistoricalAddressValidationWorkflow HistoricalAddressValidations { get; }

        /// <summary>Gets the Phone Prefix Lookups workflow.</summary>
        /// <value>The Phone Prefix Lookups workflow.</value>
        IPhonePrefixLookupWorkflow PhonePrefixLookups { get; }

        /// <summary>Gets the Regions workflow.</summary>
        /// <value>The Regions workflow.</value>
        IRegionWorkflow Regions { get; }

        /// <summary>Gets the Region Currencies workflow.</summary>
        /// <value>The Region Currencies workflow.</value>
        IRegionCurrencyWorkflow RegionCurrencies { get; }

        /// <summary>Gets the Region Images workflow.</summary>
        /// <value>The Region Images workflow.</value>
        IRegionImageWorkflow RegionImages { get; }

        /// <summary>Gets the Region Image Types workflow.</summary>
        /// <value>The Region Image Types workflow.</value>
        IRegionImageTypeWorkflow RegionImageTypes { get; }

        /// <summary>Gets the Region Languages workflow.</summary>
        /// <value>The Region Languages workflow.</value>
        IRegionLanguageWorkflow RegionLanguages { get; }

        /// <summary>Gets the Zip Codes workflow.</summary>
        /// <value>The Zip Codes workflow.</value>
        IZipCodeWorkflow ZipCodes { get; }

        /// <summary>Gets the Languages workflow.</summary>
        /// <value>The Languages workflow.</value>
        ILanguageWorkflow Languages { get; }

        /// <summary>Gets the Language Images workflow.</summary>
        /// <value>The Language Images workflow.</value>
        ILanguageImageWorkflow LanguageImages { get; }

        /// <summary>Gets the Language Image Types workflow.</summary>
        /// <value>The Language Image Types workflow.</value>
        ILanguageImageTypeWorkflow LanguageImageTypes { get; }

        /// <summary>Gets the Ui Keys workflow.</summary>
        /// <value>The Ui Keys workflow.</value>
        IUiKeyWorkflow UiKeys { get; }

        /// <summary>Gets the Ui Translations workflow.</summary>
        /// <value>The Ui Translations workflow.</value>
        IUiTranslationWorkflow UiTranslations { get; }

        /// <summary>Gets the Groups workflow.</summary>
        /// <value>The Groups workflow.</value>
        IGroupWorkflow Groups { get; }

        /// <summary>Gets the Group Statuses workflow.</summary>
        /// <value>The Group Statuses workflow.</value>
        IGroupStatusWorkflow GroupStatuses { get; }

        /// <summary>Gets the Group Types workflow.</summary>
        /// <value>The Group Types workflow.</value>
        IGroupTypeWorkflow GroupTypes { get; }

        /// <summary>Gets the Group Users workflow.</summary>
        /// <value>The Group Users workflow.</value>
        IGroupUserWorkflow GroupUsers { get; }

        /// <summary>Gets the Scheduled Job Configurations workflow.</summary>
        /// <value>The Scheduled Job Configurations workflow.</value>
        IScheduledJobConfigurationWorkflow ScheduledJobConfigurations { get; }

        /// <summary>Gets the Scheduled Job Configuration Settings workflow.</summary>
        /// <value>The Scheduled Job Configuration Settings workflow.</value>
        IScheduledJobConfigurationSettingWorkflow ScheduledJobConfigurationSettings { get; }

        /// <summary>Gets the Inventory Locations workflow.</summary>
        /// <value>The Inventory Locations workflow.</value>
        IInventoryLocationWorkflow InventoryLocations { get; }

        /// <summary>Gets the Inventory Location Regions workflow.</summary>
        /// <value>The Inventory Location Regions workflow.</value>
        IInventoryLocationRegionWorkflow InventoryLocationRegions { get; }

        /// <summary>Gets the Inventory Location Sections workflow.</summary>
        /// <value>The Inventory Location Sections workflow.</value>
        IInventoryLocationSectionWorkflow InventoryLocationSections { get; }

        /// <summary>Gets the Inventory Location Users workflow.</summary>
        /// <value>The Inventory Location Users workflow.</value>
        IInventoryLocationUserWorkflow InventoryLocationUsers { get; }

        /// <summary>Gets the Sales Invoices workflow.</summary>
        /// <value>The Sales Invoices workflow.</value>
        ISalesInvoiceWorkflow SalesInvoices { get; }

        /// <summary>Gets the Sales Invoice Contacts workflow.</summary>
        /// <value>The Sales Invoice Contacts workflow.</value>
        ISalesInvoiceContactWorkflow SalesInvoiceContacts { get; }

        /// <summary>Gets the Sales Invoice Events workflow.</summary>
        /// <value>The Sales Invoice Events workflow.</value>
        ISalesInvoiceEventWorkflow SalesInvoiceEvents { get; }

        /// <summary>Gets the Sales Invoice Event Types workflow.</summary>
        /// <value>The Sales Invoice Event Types workflow.</value>
        ISalesInvoiceEventTypeWorkflow SalesInvoiceEventTypes { get; }

        /// <summary>Gets the Sales Invoice Files workflow.</summary>
        /// <value>The Sales Invoice Files workflow.</value>
        ISalesInvoiceFileWorkflow SalesInvoiceFiles { get; }

        /// <summary>Gets the Sales Invoice Items workflow.</summary>
        /// <value>The Sales Invoice Items workflow.</value>
        ISalesInvoiceItemWorkflow SalesInvoiceItems { get; }

        /// <summary>Gets the Sales Invoice Item Targets workflow.</summary>
        /// <value>The Sales Invoice Item Targets workflow.</value>
        ISalesInvoiceItemTargetWorkflow SalesInvoiceItemTargets { get; }

        /// <summary>Gets the Sales Invoice States workflow.</summary>
        /// <value>The Sales Invoice States workflow.</value>
        ISalesInvoiceStateWorkflow SalesInvoiceStates { get; }

        /// <summary>Gets the Sales Invoice Statuses workflow.</summary>
        /// <value>The Sales Invoice Statuses workflow.</value>
        ISalesInvoiceStatusWorkflow SalesInvoiceStatuses { get; }

        /// <summary>Gets the Sales Invoice Types workflow.</summary>
        /// <value>The Sales Invoice Types workflow.</value>
        ISalesInvoiceTypeWorkflow SalesInvoiceTypes { get; }

        /// <summary>Gets the Sales Order Sales Invoices workflow.</summary>
        /// <value>The Sales Order Sales Invoices workflow.</value>
        ISalesOrderSalesInvoiceWorkflow SalesOrderSalesInvoices { get; }

        /// <summary>Gets the Manufacturers workflow.</summary>
        /// <value>The Manufacturers workflow.</value>
        IManufacturerWorkflow Manufacturers { get; }

        /// <summary>Gets the Manufacturer Images workflow.</summary>
        /// <value>The Manufacturer Images workflow.</value>
        IManufacturerImageWorkflow ManufacturerImages { get; }

        /// <summary>Gets the Manufacturer Image Types workflow.</summary>
        /// <value>The Manufacturer Image Types workflow.</value>
        IManufacturerImageTypeWorkflow ManufacturerImageTypes { get; }

        /// <summary>Gets the Manufacturer Products workflow.</summary>
        /// <value>The Manufacturer Products workflow.</value>
        IManufacturerProductWorkflow ManufacturerProducts { get; }

        /// <summary>Gets the Manufacturer Types workflow.</summary>
        /// <value>The Manufacturer Types workflow.</value>
        IManufacturerTypeWorkflow ManufacturerTypes { get; }

        /// <summary>Gets the Stored Files workflow.</summary>
        /// <value>The Stored Files workflow.</value>
        IStoredFileWorkflow StoredFiles { get; }

        /// <summary>Gets the Conversations workflow.</summary>
        /// <value>The Conversations workflow.</value>
        IConversationWorkflow Conversations { get; }

        /// <summary>Gets the Conversation Users workflow.</summary>
        /// <value>The Conversation Users workflow.</value>
        IConversationUserWorkflow ConversationUsers { get; }

        /// <summary>Gets the Email Queues workflow.</summary>
        /// <value>The Email Queues workflow.</value>
        IEmailQueueWorkflow EmailQueues { get; }

        /// <summary>Gets the Email Queue Attachments workflow.</summary>
        /// <value>The Email Queue Attachments workflow.</value>
        IEmailQueueAttachmentWorkflow EmailQueueAttachments { get; }

        /// <summary>Gets the Email Statuses workflow.</summary>
        /// <value>The Email Statuses workflow.</value>
        IEmailStatusWorkflow EmailStatuses { get; }

        /// <summary>Gets the Email Templates workflow.</summary>
        /// <value>The Email Templates workflow.</value>
        IEmailTemplateWorkflow EmailTemplates { get; }

        /// <summary>Gets the Email Types workflow.</summary>
        /// <value>The Email Types workflow.</value>
        IEmailTypeWorkflow EmailTypes { get; }

        /// <summary>Gets the Messages workflow.</summary>
        /// <value>The Messages workflow.</value>
        IMessageWorkflow Messages { get; }

        /// <summary>Gets the Message Attachments workflow.</summary>
        /// <value>The Message Attachments workflow.</value>
        IMessageAttachmentWorkflow MessageAttachments { get; }

        /// <summary>Gets the Message Recipients workflow.</summary>
        /// <value>The Message Recipients workflow.</value>
        IMessageRecipientWorkflow MessageRecipients { get; }

        /// <summary>Gets the Product Notifications workflow.</summary>
        /// <value>The Product Notifications workflow.</value>
        IProductNotificationWorkflow ProductNotifications { get; }

        /// <summary>Gets the Sales Orders workflow.</summary>
        /// <value>The Sales Orders workflow.</value>
        ISalesOrderWorkflow SalesOrders { get; }

        /// <summary>Gets the Sales Order Contacts workflow.</summary>
        /// <value>The Sales Order Contacts workflow.</value>
        ISalesOrderContactWorkflow SalesOrderContacts { get; }

        /// <summary>Gets the Sales Order Events workflow.</summary>
        /// <value>The Sales Order Events workflow.</value>
        ISalesOrderEventWorkflow SalesOrderEvents { get; }

        /// <summary>Gets the Sales Order Event Types workflow.</summary>
        /// <value>The Sales Order Event Types workflow.</value>
        ISalesOrderEventTypeWorkflow SalesOrderEventTypes { get; }

        /// <summary>Gets the Sales Order Files workflow.</summary>
        /// <value>The Sales Order Files workflow.</value>
        ISalesOrderFileWorkflow SalesOrderFiles { get; }

        /// <summary>Gets the Sales Order Items workflow.</summary>
        /// <value>The Sales Order Items workflow.</value>
        ISalesOrderItemWorkflow SalesOrderItems { get; }

        /// <summary>Gets the Sales Order Item Targets workflow.</summary>
        /// <value>The Sales Order Item Targets workflow.</value>
        ISalesOrderItemTargetWorkflow SalesOrderItemTargets { get; }

        /// <summary>Gets the Sales Order States workflow.</summary>
        /// <value>The Sales Order States workflow.</value>
        ISalesOrderStateWorkflow SalesOrderStates { get; }

        /// <summary>Gets the Sales Order Statuses workflow.</summary>
        /// <value>The Sales Order Statuses workflow.</value>
        ISalesOrderStatusWorkflow SalesOrderStatuses { get; }

        /// <summary>Gets the Sales Order Types workflow.</summary>
        /// <value>The Sales Order Types workflow.</value>
        ISalesOrderTypeWorkflow SalesOrderTypes { get; }

        /// <summary>Gets the Memberships workflow.</summary>
        /// <value>The Memberships workflow.</value>
        IMembershipWorkflow Memberships { get; }

        /// <summary>Gets the Membership Ad Zone Accesses workflow.</summary>
        /// <value>The Membership Ad Zone Accesses workflow.</value>
        IMembershipAdZoneAccessWorkflow MembershipAdZoneAccesses { get; }

        /// <summary>Gets the Membership Ad Zone Access By Levels workflow.</summary>
        /// <value>The Membership Ad Zone Access By Levels workflow.</value>
        IMembershipAdZoneAccessByLevelWorkflow MembershipAdZoneAccessByLevels { get; }

        /// <summary>Gets the Membership Levels workflow.</summary>
        /// <value>The Membership Levels workflow.</value>
        IMembershipLevelWorkflow MembershipLevels { get; }

        /// <summary>Gets the Membership Repeat Types workflow.</summary>
        /// <value>The Membership Repeat Types workflow.</value>
        IMembershipRepeatTypeWorkflow MembershipRepeatTypes { get; }

        /// <summary>Gets the Payments workflow.</summary>
        /// <value>The Payments workflow.</value>
        IPaymentWorkflow Payments { get; }

        /// <summary>Gets the Payment Methods workflow.</summary>
        /// <value>The Payment Methods workflow.</value>
        IPaymentMethodWorkflow PaymentMethods { get; }

        /// <summary>Gets the Payment Statuses workflow.</summary>
        /// <value>The Payment Statuses workflow.</value>
        IPaymentStatusWorkflow PaymentStatuses { get; }

        /// <summary>Gets the Payment Types workflow.</summary>
        /// <value>The Payment Types workflow.</value>
        IPaymentTypeWorkflow PaymentTypes { get; }

        /// <summary>Gets the Repeat Types workflow.</summary>
        /// <value>The Repeat Types workflow.</value>
        IRepeatTypeWorkflow RepeatTypes { get; }

        /// <summary>Gets the Sales Invoice Payments workflow.</summary>
        /// <value>The Sales Invoice Payments workflow.</value>
        ISalesInvoicePaymentWorkflow SalesInvoicePayments { get; }

        /// <summary>Gets the Sales Order Payments workflow.</summary>
        /// <value>The Sales Order Payments workflow.</value>
        ISalesOrderPaymentWorkflow SalesOrderPayments { get; }

        /// <summary>Gets the Sales Return Payments workflow.</summary>
        /// <value>The Sales Return Payments workflow.</value>
        ISalesReturnPaymentWorkflow SalesReturnPayments { get; }

        /// <summary>Gets the Subscriptions workflow.</summary>
        /// <value>The Subscriptions workflow.</value>
        ISubscriptionWorkflow Subscriptions { get; }

        /// <summary>Gets the Subscription Histories workflow.</summary>
        /// <value>The Subscription Histories workflow.</value>
        ISubscriptionHistoryWorkflow SubscriptionHistories { get; }

        /// <summary>Gets the Subscription Statuses workflow.</summary>
        /// <value>The Subscription Statuses workflow.</value>
        ISubscriptionStatusWorkflow SubscriptionStatuses { get; }

        /// <summary>Gets the Subscription Types workflow.</summary>
        /// <value>The Subscription Types workflow.</value>
        ISubscriptionTypeWorkflow SubscriptionTypes { get; }

        /// <summary>Gets the Subscription Type Repeat Types workflow.</summary>
        /// <value>The Subscription Type Repeat Types workflow.</value>
        ISubscriptionTypeRepeatTypeWorkflow SubscriptionTypeRepeatTypes { get; }

        /// <summary>Gets the Wallets workflow.</summary>
        /// <value>The Wallets workflow.</value>
        IWalletWorkflow Wallets { get; }

        /// <summary>Gets the Price Points workflow.</summary>
        /// <value>The Price Points workflow.</value>
        IPricePointWorkflow PricePoints { get; }

        /// <summary>Gets the Price Roundings workflow.</summary>
        /// <value>The Price Roundings workflow.</value>
        IPriceRoundingWorkflow PriceRoundings { get; }

        /// <summary>Gets the Price Rules workflow.</summary>
        /// <value>The Price Rules workflow.</value>
        IPriceRuleWorkflow PriceRules { get; }

        /// <summary>Gets the Price Rule Accounts workflow.</summary>
        /// <value>The Price Rule Accounts workflow.</value>
        IPriceRuleAccountWorkflow PriceRuleAccounts { get; }

        /// <summary>Gets the Price Rule Account Types workflow.</summary>
        /// <value>The Price Rule Account Types workflow.</value>
        IPriceRuleAccountTypeWorkflow PriceRuleAccountTypes { get; }

        /// <summary>Gets the Price Rule Brands workflow.</summary>
        /// <value>The Price Rule Brands workflow.</value>
        IPriceRuleBrandWorkflow PriceRuleBrands { get; }

        /// <summary>Gets the Price Rule Categories workflow.</summary>
        /// <value>The Price Rule Categories workflow.</value>
        IPriceRuleCategoryWorkflow PriceRuleCategories { get; }

        /// <summary>Gets the Price Rule Countries workflow.</summary>
        /// <value>The Price Rule Countries workflow.</value>
        IPriceRuleCountryWorkflow PriceRuleCountries { get; }

        /// <summary>Gets the Price Rule Franchises workflow.</summary>
        /// <value>The Price Rule Franchises workflow.</value>
        IPriceRuleFranchiseWorkflow PriceRuleFranchises { get; }

        /// <summary>Gets the Price Rule Manufacturers workflow.</summary>
        /// <value>The Price Rule Manufacturers workflow.</value>
        IPriceRuleManufacturerWorkflow PriceRuleManufacturers { get; }

        /// <summary>Gets the Price Rule Products workflow.</summary>
        /// <value>The Price Rule Products workflow.</value>
        IPriceRuleProductWorkflow PriceRuleProducts { get; }

        /// <summary>Gets the Price Rule Product Types workflow.</summary>
        /// <value>The Price Rule Product Types workflow.</value>
        IPriceRuleProductTypeWorkflow PriceRuleProductTypes { get; }

        /// <summary>Gets the Price Rule Stores workflow.</summary>
        /// <value>The Price Rule Stores workflow.</value>
        IPriceRuleStoreWorkflow PriceRuleStores { get; }

        /// <summary>Gets the Price Rule User Roles workflow.</summary>
        /// <value>The Price Rule User Roles workflow.</value>
        IPriceRuleUserRoleWorkflow PriceRuleUserRoles { get; }

        /// <summary>Gets the Price Rule Vendors workflow.</summary>
        /// <value>The Price Rule Vendors workflow.</value>
        IPriceRuleVendorWorkflow PriceRuleVendors { get; }

        /// <summary>Gets the Future Imports workflow.</summary>
        /// <value>The Future Imports workflow.</value>
        IFutureImportWorkflow FutureImports { get; }

        /// <summary>Gets the Future Import Statuses workflow.</summary>
        /// <value>The Future Import Statuses workflow.</value>
        IFutureImportStatusWorkflow FutureImportStatuses { get; }

        /// <summary>Gets the Products workflow.</summary>
        /// <value>The Products workflow.</value>
        IProductWorkflow Products { get; }

        /// <summary>Gets the Product Associations workflow.</summary>
        /// <value>The Product Associations workflow.</value>
        IProductAssociationWorkflow ProductAssociations { get; }

        /// <summary>Gets the Product Association Types workflow.</summary>
        /// <value>The Product Association Types workflow.</value>
        IProductAssociationTypeWorkflow ProductAssociationTypes { get; }

        /// <summary>Gets the Product Categories workflow.</summary>
        /// <value>The Product Categories workflow.</value>
        IProductCategoryWorkflow ProductCategories { get; }

        /// <summary>Gets the Product Downloads workflow.</summary>
        /// <value>The Product Downloads workflow.</value>
        IProductDownloadWorkflow ProductDownloads { get; }

        /// <summary>Gets the Product Download Types workflow.</summary>
        /// <value>The Product Download Types workflow.</value>
        IProductDownloadTypeWorkflow ProductDownloadTypes { get; }

        /// <summary>Gets the Product Files workflow.</summary>
        /// <value>The Product Files workflow.</value>
        IProductFileWorkflow ProductFiles { get; }

        /// <summary>Gets the Product Images workflow.</summary>
        /// <value>The Product Images workflow.</value>
        IProductImageWorkflow ProductImages { get; }

        /// <summary>Gets the Product Image Types workflow.</summary>
        /// <value>The Product Image Types workflow.</value>
        IProductImageTypeWorkflow ProductImageTypes { get; }

        /// <summary>Gets the Product Inventory Location Sections workflow.</summary>
        /// <value>The Product Inventory Location Sections workflow.</value>
        IProductInventoryLocationSectionWorkflow ProductInventoryLocationSections { get; }

        /// <summary>Gets the Product Membership Levels workflow.</summary>
        /// <value>The Product Membership Levels workflow.</value>
        IProductMembershipLevelWorkflow ProductMembershipLevels { get; }

        /// <summary>Gets the Product Price Points workflow.</summary>
        /// <value>The Product Price Points workflow.</value>
        IProductPricePointWorkflow ProductPricePoints { get; }

        /// <summary>Gets the Product Restrictions workflow.</summary>
        /// <value>The Product Restrictions workflow.</value>
        IProductRestrictionWorkflow ProductRestrictions { get; }

        /// <summary>Gets the Product Ship Carrier Methods workflow.</summary>
        /// <value>The Product Ship Carrier Methods workflow.</value>
        IProductShipCarrierMethodWorkflow ProductShipCarrierMethods { get; }

        /// <summary>Gets the Product Statuses workflow.</summary>
        /// <value>The Product Statuses workflow.</value>
        IProductStatusWorkflow ProductStatuses { get; }

        /// <summary>Gets the Product Subscription Types workflow.</summary>
        /// <value>The Product Subscription Types workflow.</value>
        IProductSubscriptionTypeWorkflow ProductSubscriptionTypes { get; }

        /// <summary>Gets the Product Types workflow.</summary>
        /// <value>The Product Types workflow.</value>
        IProductTypeWorkflow ProductTypes { get; }

        /// <summary>Gets the Purchase Orders workflow.</summary>
        /// <value>The Purchase Orders workflow.</value>
        IPurchaseOrderWorkflow PurchaseOrders { get; }

        /// <summary>Gets the Purchase Order Contacts workflow.</summary>
        /// <value>The Purchase Order Contacts workflow.</value>
        IPurchaseOrderContactWorkflow PurchaseOrderContacts { get; }

        /// <summary>Gets the Purchase Order Events workflow.</summary>
        /// <value>The Purchase Order Events workflow.</value>
        IPurchaseOrderEventWorkflow PurchaseOrderEvents { get; }

        /// <summary>Gets the Purchase Order Event Types workflow.</summary>
        /// <value>The Purchase Order Event Types workflow.</value>
        IPurchaseOrderEventTypeWorkflow PurchaseOrderEventTypes { get; }

        /// <summary>Gets the Purchase Order Files workflow.</summary>
        /// <value>The Purchase Order Files workflow.</value>
        IPurchaseOrderFileWorkflow PurchaseOrderFiles { get; }

        /// <summary>Gets the Purchase Order Items workflow.</summary>
        /// <value>The Purchase Order Items workflow.</value>
        IPurchaseOrderItemWorkflow PurchaseOrderItems { get; }

        /// <summary>Gets the Purchase Order Item Targets workflow.</summary>
        /// <value>The Purchase Order Item Targets workflow.</value>
        IPurchaseOrderItemTargetWorkflow PurchaseOrderItemTargets { get; }

        /// <summary>Gets the Purchase Order States workflow.</summary>
        /// <value>The Purchase Order States workflow.</value>
        IPurchaseOrderStateWorkflow PurchaseOrderStates { get; }

        /// <summary>Gets the Purchase Order Statuses workflow.</summary>
        /// <value>The Purchase Order Statuses workflow.</value>
        IPurchaseOrderStatusWorkflow PurchaseOrderStatuses { get; }

        /// <summary>Gets the Purchase Order Types workflow.</summary>
        /// <value>The Purchase Order Types workflow.</value>
        IPurchaseOrderTypeWorkflow PurchaseOrderTypes { get; }

        /// <summary>Gets the Sales Order Purchase Orders workflow.</summary>
        /// <value>The Sales Order Purchase Orders workflow.</value>
        ISalesOrderPurchaseOrderWorkflow SalesOrderPurchaseOrders { get; }

        /// <summary>Gets the Answers workflow.</summary>
        /// <value>The Answers workflow.</value>
        IAnswerWorkflow Answers { get; }

        /// <summary>Gets the Questions workflow.</summary>
        /// <value>The Questions workflow.</value>
        IQuestionWorkflow Questions { get; }

        /// <summary>Gets the Question Options workflow.</summary>
        /// <value>The Question Options workflow.</value>
        IQuestionOptionWorkflow QuestionOptions { get; }

        /// <summary>Gets the Question Types workflow.</summary>
        /// <value>The Question Types workflow.</value>
        IQuestionTypeWorkflow QuestionTypes { get; }

        /// <summary>Gets the Sales Quotes workflow.</summary>
        /// <value>The Sales Quotes workflow.</value>
        ISalesQuoteWorkflow SalesQuotes { get; }

        /// <summary>Gets the Sales Quote Categories workflow.</summary>
        /// <value>The Sales Quote Categories workflow.</value>
        ISalesQuoteCategoryWorkflow SalesQuoteCategories { get; }

        /// <summary>Gets the Sales Quote Contacts workflow.</summary>
        /// <value>The Sales Quote Contacts workflow.</value>
        ISalesQuoteContactWorkflow SalesQuoteContacts { get; }

        /// <summary>Gets the Sales Quote Events workflow.</summary>
        /// <value>The Sales Quote Events workflow.</value>
        ISalesQuoteEventWorkflow SalesQuoteEvents { get; }

        /// <summary>Gets the Sales Quote Event Types workflow.</summary>
        /// <value>The Sales Quote Event Types workflow.</value>
        ISalesQuoteEventTypeWorkflow SalesQuoteEventTypes { get; }

        /// <summary>Gets the Sales Quote Files workflow.</summary>
        /// <value>The Sales Quote Files workflow.</value>
        ISalesQuoteFileWorkflow SalesQuoteFiles { get; }

        /// <summary>Gets the Sales Quote Items workflow.</summary>
        /// <value>The Sales Quote Items workflow.</value>
        ISalesQuoteItemWorkflow SalesQuoteItems { get; }

        /// <summary>Gets the Sales Quote Item Targets workflow.</summary>
        /// <value>The Sales Quote Item Targets workflow.</value>
        ISalesQuoteItemTargetWorkflow SalesQuoteItemTargets { get; }

        /// <summary>Gets the Sales Quote Sales Orders workflow.</summary>
        /// <value>The Sales Quote Sales Orders workflow.</value>
        ISalesQuoteSalesOrderWorkflow SalesQuoteSalesOrders { get; }

        /// <summary>Gets the Sales Quote States workflow.</summary>
        /// <value>The Sales Quote States workflow.</value>
        ISalesQuoteStateWorkflow SalesQuoteStates { get; }

        /// <summary>Gets the Sales Quote Statuses workflow.</summary>
        /// <value>The Sales Quote Statuses workflow.</value>
        ISalesQuoteStatusWorkflow SalesQuoteStatuses { get; }

        /// <summary>Gets the Sales Quote Types workflow.</summary>
        /// <value>The Sales Quote Types workflow.</value>
        ISalesQuoteTypeWorkflow SalesQuoteTypes { get; }

        /// <summary>Gets the Report Types workflow.</summary>
        /// <value>The Report Types workflow.</value>
        IReportTypeWorkflow ReportTypes { get; }

        /// <summary>Gets the Sales Returns workflow.</summary>
        /// <value>The Sales Returns workflow.</value>
        ISalesReturnWorkflow SalesReturns { get; }

        /// <summary>Gets the Sales Return Contacts workflow.</summary>
        /// <value>The Sales Return Contacts workflow.</value>
        ISalesReturnContactWorkflow SalesReturnContacts { get; }

        /// <summary>Gets the Sales Return Events workflow.</summary>
        /// <value>The Sales Return Events workflow.</value>
        ISalesReturnEventWorkflow SalesReturnEvents { get; }

        /// <summary>Gets the Sales Return Event Types workflow.</summary>
        /// <value>The Sales Return Event Types workflow.</value>
        ISalesReturnEventTypeWorkflow SalesReturnEventTypes { get; }

        /// <summary>Gets the Sales Return Files workflow.</summary>
        /// <value>The Sales Return Files workflow.</value>
        ISalesReturnFileWorkflow SalesReturnFiles { get; }

        /// <summary>Gets the Sales Return Items workflow.</summary>
        /// <value>The Sales Return Items workflow.</value>
        ISalesReturnItemWorkflow SalesReturnItems { get; }

        /// <summary>Gets the Sales Return Item Targets workflow.</summary>
        /// <value>The Sales Return Item Targets workflow.</value>
        ISalesReturnItemTargetWorkflow SalesReturnItemTargets { get; }

        /// <summary>Gets the Sales Return Reasons workflow.</summary>
        /// <value>The Sales Return Reasons workflow.</value>
        ISalesReturnReasonWorkflow SalesReturnReasons { get; }

        /// <summary>Gets the Sales Return Sales Orders workflow.</summary>
        /// <value>The Sales Return Sales Orders workflow.</value>
        ISalesReturnSalesOrderWorkflow SalesReturnSalesOrders { get; }

        /// <summary>Gets the Sales Return States workflow.</summary>
        /// <value>The Sales Return States workflow.</value>
        ISalesReturnStateWorkflow SalesReturnStates { get; }

        /// <summary>Gets the Sales Return Statuses workflow.</summary>
        /// <value>The Sales Return Statuses workflow.</value>
        ISalesReturnStatusWorkflow SalesReturnStatuses { get; }

        /// <summary>Gets the Sales Return Types workflow.</summary>
        /// <value>The Sales Return Types workflow.</value>
        ISalesReturnTypeWorkflow SalesReturnTypes { get; }

        /// <summary>Gets the Reviews workflow.</summary>
        /// <value>The Reviews workflow.</value>
        IReviewWorkflow Reviews { get; }

        /// <summary>Gets the Review Types workflow.</summary>
        /// <value>The Review Types workflow.</value>
        IReviewTypeWorkflow ReviewTypes { get; }

        /// <summary>Gets the Sales Groups workflow.</summary>
        /// <value>The Sales Groups workflow.</value>
        ISalesGroupWorkflow SalesGroups { get; }

        /// <summary>Gets the Sales Item Target Types workflow.</summary>
        /// <value>The Sales Item Target Types workflow.</value>
        ISalesItemTargetTypeWorkflow SalesItemTargetTypes { get; }

        /// <summary>Gets the Sample Requests workflow.</summary>
        /// <value>The Sample Requests workflow.</value>
        ISampleRequestWorkflow SampleRequests { get; }

        /// <summary>Gets the Sample Request Contacts workflow.</summary>
        /// <value>The Sample Request Contacts workflow.</value>
        ISampleRequestContactWorkflow SampleRequestContacts { get; }

        /// <summary>Gets the Sample Request Events workflow.</summary>
        /// <value>The Sample Request Events workflow.</value>
        ISampleRequestEventWorkflow SampleRequestEvents { get; }

        /// <summary>Gets the Sample Request Event Types workflow.</summary>
        /// <value>The Sample Request Event Types workflow.</value>
        ISampleRequestEventTypeWorkflow SampleRequestEventTypes { get; }

        /// <summary>Gets the Sample Request Files workflow.</summary>
        /// <value>The Sample Request Files workflow.</value>
        ISampleRequestFileWorkflow SampleRequestFiles { get; }

        /// <summary>Gets the Sample Request Items workflow.</summary>
        /// <value>The Sample Request Items workflow.</value>
        ISampleRequestItemWorkflow SampleRequestItems { get; }

        /// <summary>Gets the Sample Request Item Targets workflow.</summary>
        /// <value>The Sample Request Item Targets workflow.</value>
        ISampleRequestItemTargetWorkflow SampleRequestItemTargets { get; }

        /// <summary>Gets the Sample Request States workflow.</summary>
        /// <value>The Sample Request States workflow.</value>
        ISampleRequestStateWorkflow SampleRequestStates { get; }

        /// <summary>Gets the Sample Request Statuses workflow.</summary>
        /// <value>The Sample Request Statuses workflow.</value>
        ISampleRequestStatusWorkflow SampleRequestStatuses { get; }

        /// <summary>Gets the Sample Request Types workflow.</summary>
        /// <value>The Sample Request Types workflow.</value>
        ISampleRequestTypeWorkflow SampleRequestTypes { get; }

        /// <summary>Gets the Appointments workflow.</summary>
        /// <value>The Appointments workflow.</value>
        IAppointmentWorkflow Appointments { get; }

        /// <summary>Gets the Appointment Statuses workflow.</summary>
        /// <value>The Appointment Statuses workflow.</value>
        IAppointmentStatusWorkflow AppointmentStatuses { get; }

        /// <summary>Gets the Appointment Types workflow.</summary>
        /// <value>The Appointment Types workflow.</value>
        IAppointmentTypeWorkflow AppointmentTypes { get; }

        /// <summary>Gets the Calendars workflow.</summary>
        /// <value>The Calendars workflow.</value>
        ICalendarWorkflow Calendars { get; }

        /// <summary>Gets the Calendar Appointments workflow.</summary>
        /// <value>The Calendar Appointments workflow.</value>
        ICalendarAppointmentWorkflow CalendarAppointments { get; }

        /// <summary>Gets the Scouts workflow.</summary>
        /// <value>The Scouts workflow.</value>
        IScoutWorkflow Scouts { get; }

        /// <summary>Gets the Scout Categories workflow.</summary>
        /// <value>The Scout Categories workflow.</value>
        IScoutCategoryWorkflow ScoutCategories { get; }

        /// <summary>Gets the Scout Category Types workflow.</summary>
        /// <value>The Scout Category Types workflow.</value>
        IScoutCategoryTypeWorkflow ScoutCategoryTypes { get; }

        /// <summary>Gets the Packages workflow.</summary>
        /// <value>The Packages workflow.</value>
        IPackageWorkflow Packages { get; }

        /// <summary>Gets the Package Types workflow.</summary>
        /// <value>The Package Types workflow.</value>
        IPackageTypeWorkflow PackageTypes { get; }

        /// <summary>Gets the Rate Quotes workflow.</summary>
        /// <value>The Rate Quotes workflow.</value>
        IRateQuoteWorkflow RateQuotes { get; }

        /// <summary>Gets the Ship Carriers workflow.</summary>
        /// <value>The Ship Carriers workflow.</value>
        IShipCarrierWorkflow ShipCarriers { get; }

        /// <summary>Gets the Ship Carrier Methods workflow.</summary>
        /// <value>The Ship Carrier Methods workflow.</value>
        IShipCarrierMethodWorkflow ShipCarrierMethods { get; }

        /// <summary>Gets the Shipments workflow.</summary>
        /// <value>The Shipments workflow.</value>
        IShipmentWorkflow Shipments { get; }

        /// <summary>Gets the Shipment Events workflow.</summary>
        /// <value>The Shipment Events workflow.</value>
        IShipmentEventWorkflow ShipmentEvents { get; }

        /// <summary>Gets the Shipment Statuses workflow.</summary>
        /// <value>The Shipment Statuses workflow.</value>
        IShipmentStatusWorkflow ShipmentStatuses { get; }

        /// <summary>Gets the Shipment Types workflow.</summary>
        /// <value>The Shipment Types workflow.</value>
        IShipmentTypeWorkflow ShipmentTypes { get; }

        /// <summary>Gets the Carts workflow.</summary>
        /// <value>The Carts workflow.</value>
        ICartWorkflow Carts { get; }

        /// <summary>Gets the Cart Contacts workflow.</summary>
        /// <value>The Cart Contacts workflow.</value>
        ICartContactWorkflow CartContacts { get; }

        /// <summary>Gets the Cart Events workflow.</summary>
        /// <value>The Cart Events workflow.</value>
        ICartEventWorkflow CartEvents { get; }

        /// <summary>Gets the Cart Event Types workflow.</summary>
        /// <value>The Cart Event Types workflow.</value>
        ICartEventTypeWorkflow CartEventTypes { get; }

        /// <summary>Gets the Cart Files workflow.</summary>
        /// <value>The Cart Files workflow.</value>
        ICartFileWorkflow CartFiles { get; }

        /// <summary>Gets the Cart Items workflow.</summary>
        /// <value>The Cart Items workflow.</value>
        ICartItemWorkflow CartItems { get; }

        /// <summary>Gets the Cart Item Targets workflow.</summary>
        /// <value>The Cart Item Targets workflow.</value>
        ICartItemTargetWorkflow CartItemTargets { get; }

        /// <summary>Gets the Cart States workflow.</summary>
        /// <value>The Cart States workflow.</value>
        ICartStateWorkflow CartStates { get; }

        /// <summary>Gets the Cart Statuses workflow.</summary>
        /// <value>The Cart Statuses workflow.</value>
        ICartStatusWorkflow CartStatuses { get; }

        /// <summary>Gets the Cart Types workflow.</summary>
        /// <value>The Cart Types workflow.</value>
        ICartTypeWorkflow CartTypes { get; }

        /// <summary>Gets the Site Domains workflow.</summary>
        /// <value>The Site Domains workflow.</value>
        ISiteDomainWorkflow SiteDomains { get; }

        /// <summary>Gets the Site Domain Social Providers workflow.</summary>
        /// <value>The Site Domain Social Providers workflow.</value>
        ISiteDomainSocialProviderWorkflow SiteDomainSocialProviders { get; }

        /// <summary>Gets the Social Providers workflow.</summary>
        /// <value>The Social Providers workflow.</value>
        ISocialProviderWorkflow SocialProviders { get; }

        /// <summary>Gets the Stores workflow.</summary>
        /// <value>The Stores workflow.</value>
        IStoreWorkflow Stores { get; }

        /// <summary>Gets the Store Accounts workflow.</summary>
        /// <value>The Store Accounts workflow.</value>
        IStoreAccountWorkflow StoreAccounts { get; }

        /// <summary>Gets the Store Badges workflow.</summary>
        /// <value>The Store Badges workflow.</value>
        IStoreBadgeWorkflow StoreBadges { get; }

        /// <summary>Gets the Store Categories workflow.</summary>
        /// <value>The Store Categories workflow.</value>
        IStoreCategoryWorkflow StoreCategories { get; }

        /// <summary>Gets the Store Contacts workflow.</summary>
        /// <value>The Store Contacts workflow.</value>
        IStoreContactWorkflow StoreContacts { get; }

        /// <summary>Gets the Store Countries workflow.</summary>
        /// <value>The Store Countries workflow.</value>
        IStoreCountryWorkflow StoreCountries { get; }

        /// <summary>Gets the Store Districts workflow.</summary>
        /// <value>The Store Districts workflow.</value>
        IStoreDistrictWorkflow StoreDistricts { get; }

        /// <summary>Gets the Store Images workflow.</summary>
        /// <value>The Store Images workflow.</value>
        IStoreImageWorkflow StoreImages { get; }

        /// <summary>Gets the Store Image Types workflow.</summary>
        /// <value>The Store Image Types workflow.</value>
        IStoreImageTypeWorkflow StoreImageTypes { get; }

        /// <summary>Gets the Store Inventory Locations workflow.</summary>
        /// <value>The Store Inventory Locations workflow.</value>
        IStoreInventoryLocationWorkflow StoreInventoryLocations { get; }

        /// <summary>Gets the Store Inventory Location Types workflow.</summary>
        /// <value>The Store Inventory Location Types workflow.</value>
        IStoreInventoryLocationTypeWorkflow StoreInventoryLocationTypes { get; }

        /// <summary>Gets the Store Manufacturers workflow.</summary>
        /// <value>The Store Manufacturers workflow.</value>
        IStoreManufacturerWorkflow StoreManufacturers { get; }

        /// <summary>Gets the Store Products workflow.</summary>
        /// <value>The Store Products workflow.</value>
        IStoreProductWorkflow StoreProducts { get; }

        /// <summary>Gets the Store Regions workflow.</summary>
        /// <value>The Store Regions workflow.</value>
        IStoreRegionWorkflow StoreRegions { get; }

        /// <summary>Gets the Store Subscriptions workflow.</summary>
        /// <value>The Store Subscriptions workflow.</value>
        IStoreSubscriptionWorkflow StoreSubscriptions { get; }

        /// <summary>Gets the Store Types workflow.</summary>
        /// <value>The Store Types workflow.</value>
        IStoreTypeWorkflow StoreTypes { get; }

        /// <summary>Gets the Store Users workflow.</summary>
        /// <value>The Store Users workflow.</value>
        IStoreUserWorkflow StoreUsers { get; }

        /// <summary>Gets the Store Vendors workflow.</summary>
        /// <value>The Store Vendors workflow.</value>
        IStoreVendorWorkflow StoreVendors { get; }

        /// <summary>Gets the Import Export Mappings workflow.</summary>
        /// <value>The Import Export Mappings workflow.</value>
        IImportExportMappingWorkflow ImportExportMappings { get; }

        /// <summary>Gets the Notes workflow.</summary>
        /// <value>The Notes workflow.</value>
        INoteWorkflow Notes { get; }

        /// <summary>Gets the Note Types workflow.</summary>
        /// <value>The Note Types workflow.</value>
        INoteTypeWorkflow NoteTypes { get; }

        /// <summary>Gets the Record Versions workflow.</summary>
        /// <value>The Record Versions workflow.</value>
        IRecordVersionWorkflow RecordVersions { get; }

        /// <summary>Gets the Record Version Types workflow.</summary>
        /// <value>The Record Version Types workflow.</value>
        IRecordVersionTypeWorkflow RecordVersionTypes { get; }

        /// <summary>Gets the Settings workflow.</summary>
        /// <value>The Settings workflow.</value>
        ISettingWorkflow Settings { get; }

        /// <summary>Gets the Setting Groups workflow.</summary>
        /// <value>The Setting Groups workflow.</value>
        ISettingGroupWorkflow SettingGroups { get; }

        /// <summary>Gets the Setting Types workflow.</summary>
        /// <value>The Setting Types workflow.</value>
        ISettingTypeWorkflow SettingTypes { get; }

        /// <summary>Gets the Event Logs workflow.</summary>
        /// <value>The Event Logs workflow.</value>
        IEventLogWorkflow EventLogs { get; }

        /// <summary>Gets the Historical Tax Rates workflow.</summary>
        /// <value>The Historical Tax Rates workflow.</value>
        IHistoricalTaxRateWorkflow HistoricalTaxRates { get; }

        /// <summary>Gets the Tax Countries workflow.</summary>
        /// <value>The Tax Countries workflow.</value>
        ITaxCountryWorkflow TaxCountries { get; }

        /// <summary>Gets the Tax Districts workflow.</summary>
        /// <value>The Tax Districts workflow.</value>
        ITaxDistrictWorkflow TaxDistricts { get; }

        /// <summary>Gets the Tax Regions workflow.</summary>
        /// <value>The Tax Regions workflow.</value>
        ITaxRegionWorkflow TaxRegions { get; }

        /// <summary>Gets the Campaigns workflow.</summary>
        /// <value>The Campaigns workflow.</value>
        ICampaignWorkflow Campaigns { get; }

        /// <summary>Gets the Campaign Ads workflow.</summary>
        /// <value>The Campaign Ads workflow.</value>
        ICampaignAdWorkflow CampaignAds { get; }

        /// <summary>Gets the Campaign Statuses workflow.</summary>
        /// <value>The Campaign Statuses workflow.</value>
        ICampaignStatusWorkflow CampaignStatuses { get; }

        /// <summary>Gets the Campaign Types workflow.</summary>
        /// <value>The Campaign Types workflow.</value>
        ICampaignTypeWorkflow CampaignTypes { get; }

        /// <summary>Gets the Events workflow.</summary>
        /// <value>The Events workflow.</value>
        IEventWorkflow Events { get; }

        /// <summary>Gets the Event Statuses workflow.</summary>
        /// <value>The Event Statuses workflow.</value>
        IEventStatusWorkflow EventStatuses { get; }

        /// <summary>Gets the Event Types workflow.</summary>
        /// <value>The Event Types workflow.</value>
        IEventTypeWorkflow EventTypes { get; }

        /// <summary>Gets the IP Organizations workflow.</summary>
        /// <value>The IP Organizations workflow.</value>
        IIPOrganizationWorkflow IPOrganizations { get; }

        /// <summary>Gets the IP Organization Statuses workflow.</summary>
        /// <value>The IP Organization Statuses workflow.</value>
        IIPOrganizationStatusWorkflow IPOrganizationStatuses { get; }

        /// <summary>Gets the Page Views workflow.</summary>
        /// <value>The Page Views workflow.</value>
        IPageViewWorkflow PageViews { get; }

        /// <summary>Gets the Page View Events workflow.</summary>
        /// <value>The Page View Events workflow.</value>
        IPageViewEventWorkflow PageViewEvents { get; }

        /// <summary>Gets the Page View Statuses workflow.</summary>
        /// <value>The Page View Statuses workflow.</value>
        IPageViewStatusWorkflow PageViewStatuses { get; }

        /// <summary>Gets the Page View Types workflow.</summary>
        /// <value>The Page View Types workflow.</value>
        IPageViewTypeWorkflow PageViewTypes { get; }

        /// <summary>Gets the Visits workflow.</summary>
        /// <value>The Visits workflow.</value>
        IVisitWorkflow Visits { get; }

        /// <summary>Gets the Visitors workflow.</summary>
        /// <value>The Visitors workflow.</value>
        IVisitorWorkflow Visitors { get; }

        /// <summary>Gets the Visit Statuses workflow.</summary>
        /// <value>The Visit Statuses workflow.</value>
        IVisitStatusWorkflow VisitStatuses { get; }

        /// <summary>Gets the Vendors workflow.</summary>
        /// <value>The Vendors workflow.</value>
        IVendorWorkflow Vendors { get; }

        /// <summary>Gets the Vendor Accounts workflow.</summary>
        /// <value>The Vendor Accounts workflow.</value>
        IVendorAccountWorkflow VendorAccounts { get; }

        /// <summary>Gets the Vendor Images workflow.</summary>
        /// <value>The Vendor Images workflow.</value>
        IVendorImageWorkflow VendorImages { get; }

        /// <summary>Gets the Vendor Image Types workflow.</summary>
        /// <value>The Vendor Image Types workflow.</value>
        IVendorImageTypeWorkflow VendorImageTypes { get; }

        /// <summary>Gets the Vendor Manufacturers workflow.</summary>
        /// <value>The Vendor Manufacturers workflow.</value>
        IVendorManufacturerWorkflow VendorManufacturers { get; }

        /// <summary>Gets the Vendor Products workflow.</summary>
        /// <value>The Vendor Products workflow.</value>
        IVendorProductWorkflow VendorProducts { get; }

        /// <summary>Gets the Vendor Types workflow.</summary>
        /// <value>The Vendor Types workflow.</value>
        IVendorTypeWorkflow VendorTypes { get; }
    }
}
